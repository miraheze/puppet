/* Command objects */

/* Notification Commands
 *
 * Please check the documentation for all required and
 * optional parameters.
 */

object NotificationCommand "mail-host-notification" {
  command = [ ConfigDir + "/scripts/mail-host-notification.sh" ]

  arguments += {
    "-4" = "$notification_address$"
    "-6" = "$notification_address6$"
    "-b" = "$notification_author$"
    "-c" = "$notification_comment$"
    "-d" = {
      required = true
      value = "$notification_date$"
    }
    "-f" = {
      value = "$notification_from$"
      description = "Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)"
    }
    "-i" = "$notification_icingaweb2url$"
    "-l" = {
      required = true
      value = "$notification_hostname$"
    }
    "-n" = {
      required = true
      value = "$notification_hostdisplayname$"
    }
    "-o" = {
      required = true
      value = "$notification_hostoutput$"
    }
    "-r" = {
      required = true
      value = "$notification_useremail$"
    }
    "-s" = {
      required = true
      value = "$notification_hoststate$"
    }
    "-t" = {
      required = true
      value = "$notification_type$"
    }
    "-v" = "$notification_logtosyslog$"
  }

  vars += {
    notification_address = "$address$"
    notification_address6 = "$address6$"
    notification_author = "$notification.author$"
    notification_comment = "$notification.comment$"
    notification_type = "$notification.type$"
    notification_date = "$icinga.long_date_time$"
    notification_hostname = "$host.name$"
    notification_hostdisplayname = "$host.display_name$"
    notification_hostoutput = "$host.output$"
    notification_hoststate = "$host.state$"
    notification_useremail = "$user.email$"
  }
}

object NotificationCommand "mail-service-notification" {
  command = [ ConfigDir + "/scripts/mail-service-notification.sh" ]

  arguments += {
    "-4" = "$notification_address$"
    "-6" = "$notification_address6$"
    "-b" = "$notification_author$"
    "-c" = "$notification_comment$"
    "-d" = {
      required = true
      value = "$notification_date$"
    }
    "-e" = {
      required = true
      value = "$notification_servicename$"
    }
    "-f" = {
      value = "$notification_from$"
      description = "Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)"
    }
    "-i" = "$notification_icingaweb2url$"
    "-l" = {
      required = true
      value = "$notification_hostname$"
    }
    "-n" = {
      required = true
      value = "$notification_hostdisplayname$"
    }
    "-o" = {
      required = true
      value = "$notification_serviceoutput$"
    }
    "-r" = {
      required = true
      value = "$notification_useremail$"
    }
    "-s" = {
      required = true
      value = "$notification_servicestate$"
    }
    "-t" = {
      required = true
      value = "$notification_type$"
    }
    "-u" = {
      required = true
      value = "$notification_servicedisplayname$"
    }
    "-v" = "$notification_logtosyslog$"
  }

  vars += {
    notification_address = "$address$"
    notification_address6 = "$address6$"
    notification_author = "$notification.author$"
    notification_comment = "$notification.comment$"
    notification_type = "$notification.type$"
    notification_date = "$icinga.long_date_time$"
    notification_hostname = "$host.name$"
    notification_hostdisplayname = "$host.display_name$"
    notification_servicename = "$service.name$"
    notification_serviceoutput = "$service.output$"
    notification_servicestate = "$service.state$"
    notification_useremail = "$user.email$"
    notification_servicedisplayname = "$service.display_name$"
  }
}

/* Irc notification commands */

object NotificationCommand "irc-host-notification" {
  command = [ ConfigDir + "/scripts/irc-host-notification.sh" ]

  env = {
    NOTIFICATIONTYPE = "$notification.type$"
    HOSTALIAS = "$host.display_name$"
    HOSTNAME = "$host.name$"
    HOSTADDRESS = "$address6$"
    HOSTSTATE = "$host.state$"
    LONGDATETIME = "$icinga.long_date_time$"
    HOSTOUTPUT = "$host.output$"
    NOTIFICATIONAUTHORNAME = "$notification.author$"
    NOTIFICATIONCOMMENT = "$notification.comment$"
    HOSTDISPLAYNAME = "$host.display_name$"
    USEREMAIL = "$user.email$"
  }
}

object NotificationCommand "irc-service-notification" {
  command = [ ConfigDir + "/scripts/irc-service-notification.sh" ]

  env = {
    NOTIFICATIONTYPE = "$notification.type$"
    SERVICEDESC = "$service.name$"
    HOSTNAME = "$host.name$"
    HOSTALIAS = "$host.display_name$"
    HOSTADDRESS = "$address6$"
    SERVICESTATE = "$service.state$"
    LONGDATETIME = "$icinga.long_date_time$"
    SERVICEOUTPUT = "$service.output$"
    NOTIFICATIONAUTHORNAME = "$notification.author$"
    NOTIFICATIONCOMMENT = "$notification.comment$"
    HOSTDISPLAYNAME = "$host.display_name$"
    SERVICEDISPLAYNAME = "$service.display_name$"
    USEREMAIL = "$user.email$"
  }
}

object CheckCommand "nrpe-check-1arg" {
     import "plugin-check-command"

     command = [ PluginDir + "/check_nrpe" ]
     arguments = {
       "-H" = "$host$",
       "-c" = "$check$",
       "-t" = "300"
     }
}

object CheckCommand "check_dns_auth" {
     import "plugin-check-command"

     command = [ PluginDir + "/check_dns" ]
     arguments = {
       "-H" = "$host$",
       "-s" = "$nrpe_address$",
       "-A" = ""
     }
     
     vars.nrpe_address = "$address6$"
}

object CheckCommand "check_mediawiki" {
     import "plugin-check-command"

     command = [ PluginDir + "/check_http" ]
     arguments = {
         "-H"    = "$host$",
         "-I"    = "$address6$",
         "--ssl" = "",
         "--no-body" = "",
         "-u"    = "/wiki/Main_Page"
     }
}

object CheckCommand "check_ssl_expire" {
     import "plugin-check-command"

     command = [ PluginDir + "/check_http" ]
     arguments = {
         "-H"    = "$host$",
         "-S"    = "",
         "--sni" = "",
         "--no-body" = "",
         "-p"    = "443"
         "-C"    = "$time$,7",
     }
}

object CheckCommand "check_http" {
  import "plugin-check-command"

  command = [ PluginDir + "/check_http" ]

  arguments = {
    "-H" = "$http_vhost$"
    "-I" = "$http_address$"
    "-u" = "$http_uri$"
    "-p" = "$http_port$"
    "-S" = {
      set_if = "$http_ssl$"
    }
    "--sni" = {
      set_if = "$http_sni$"
    }
    "-a" = {
      value = "$http_auth_pair$"
      description = "Username:password on sites with basic authentication"
    }
    "--no-body" = {
      set_if = "$http_ignore_body$"
    }
    "-r" = "$http_expect_body_regex$"
    "-w" = "$http_warn_time$"
    "-c" = "$http_critical_time$"
    "-e" = "$http_expect$"
  }

  vars.http_address = "$address6$"
  vars.http_ssl = false
  vars.http_sni = false
}

object CheckCommand "reverse_dns" {
  import "plugin-check-command"

  command = [ PluginDir + "/check_reverse_dns.py" ]

  arguments += {
    "-H" = "$hostname$"
    "-r" = "$regex$"
  }

  vars.hostname = "miraheze.org"
}

object CheckCommand "mysql_connections" {
  import "plugin-check-command"

  command = [ "php", PluginDir + "/check_mysql_connections.php" ]

  arguments = {
    "--host" = "$mysql_hostname$"
    "--user" = "$mysql_username$"
    "--password" = "$mysql_password$"
    "--max-connections" = "$max_connections$"
    "--critical-threshold" = "$critical$"
    "--warning-threshold" = "$warning$"
    "--ssl-ca" = "$mysql_cacert$"
    "--ssl-verify-server-cert" = "$mysql_ssl$"
  }

  vars.mysql_hostname = "$mysql_hostname$"
  vars.mysql_username = "$mysql_username$"
  vars.mysql_password = "$mysql_password$"
  vars.warning = "$warning$"
  vars.critical = "$critical$"
  vars.max_connections = "$max_connections$"
}

object EventCommand "eh_ssl_acme" {
    import "plugin-event-command"

    command = [ SysconfDir + "/icinga2/scripts/ssl-renew.sh" ]
    env = {
      SERVICEDESC = "$service.name$"
      SERVICEATTEMPT = "$service.check_attempt$"
      SERVICESTATE = "$service.state$"
      SERVICESTATETYPE = "$service.state_type$"
      HOSTALIAS = "$host.display_name$"
      HOSTADDRESS = "$address6$"
      SERVICESTATE = "$service.state$"
      LONGDATETIME = "$icinga.long_date_time$"
      SERVICEOUTPUT = "$service.output$"
      HOSTDISPLAYNAME = "$host.display_name$"
      SERVICEDISPLAYNAME = "$service.display_name$"
    }
}
