[DEFAULT]
# Only in object-server must you use ipv6 without bracket.
bind_ip = ::
bind_port = 6000
workers = 2
# bind_timeout = 30
# backlog = 4096
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = false
# mount_check = true
# disable_fallocate = false
# expiring_objects_container_divisor = 86400
# expiring_objects_account_name = expiring_objects
#
# Use an integer to override the number of pre-forked processes that will
# accept connections.  NOTE: if servers_per_port is set, this setting is
# ignored.
# workers = auto
#
# Make object-server run this many worker processes per unique port of "local"
# ring devices across all storage policies. The default value of 0 disables this
# feature.
# servers_per_port = 0
#
# Maximum concurrent requests per worker
# max_clients = 1024
#
# You can specify default log routing here if you want:
log_name = swift-object
# log_facility = LOG_LOCAL0
# log_level = INFO
# log_address = /dev/log
# The following caps the length of log lines to the value given; no limit if
# set to 0, the default.
# log_max_line_length = 0
#
# comma separated list of functions to call to setup custom log handlers.
# functions get passed: conf, name, log_to_console, log_route, fmt, logger,
# adapted_logger
# log_custom_handlers =
#
# If set, log_udp_host will override log_address
# log_udp_host =
# log_udp_port = 514
#
# You can enable StatsD logging here:
# log_statsd_host =
# log_statsd_port = 8125
# log_statsd_default_sample_rate = 1.0
# log_statsd_sample_rate_factor = 1.0
# log_statsd_metric_prefix =
#
# eventlet_debug = false
#
# You can set fallocate_reserve to the number of bytes or percentage of disk
# space you'd like fallocate to reserve, whether there is space for the given
# file size or not. Percentage will be used if the value ends with a '%'.
# fallocate_reserve = 1%
disable_fallocate = false
fallocate_reserve = 2%


# Time to wait while attempting to connect to another backend node.
# conn_timeout = 0.5
# Time to wait while sending each chunk of data to another backend node.
# node_timeout = 3
# Time to wait while sending a container update on object update.
# container_update_timeout = 1.0
# Time to wait while receiving each chunk of data from a client or another
# backend node.
# client_timeout = 60
#
# network_chunk_size = 65536
# disk_chunk_size = 65536
#
# You can set scheduling priority of processes. Niceness values range from -20
# (most favorable to the process) to 19 (least favorable to the process).
# nice_priority =
#
# You can set I/O scheduling class and priority of processes. I/O niceness
# class values are IOPRIO_CLASS_RT (realtime), IOPRIO_CLASS_BE (best-effort) and
# IOPRIO_CLASS_IDLE (idle). I/O niceness priority is a number which goes from
# 0 to 7. The higher the value, the lower the I/O priority of the process.
# Work only with ionice_class.
# ionice_class =
# ionice_priority =

[pipeline:main]
pipeline = recon object-server

[app:object-server]
use = egg:swift#object
# 200MB (value is in bytes)
keep_cache_size = 209715200
allowed_headers = content-disposition,
	content-encoding,
	x-delete-at,
	x-object-manifest,
	x-static-large-object,
	x-content-duration,
	x-content-dimensions

[filter:healthcheck]
use = egg:swift#healthcheck
# An optional filesystem path, which if present, will cause the healthcheck
# URL to return "503 Service Unavailable" with a body of "DISABLED BY FILE"
# disable_path =

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
#recon_lock_path = /var/lock

[object-replicator]
concurrency = 0
# Don't let replication rsyncs starve other processes of CPU or I/O.
nice_priority = 1
# ionice_class and ionice_priority must be specified together.
# (However, we currently use the deadline I/O schedule everywhere, which
# does not pay attention to ionice settings.  But set them here anyway, as
# schedulers can be changed via sysfs, and this makes experimentation
# easier.)
# BE is the default
ionice_class = IOPRIO_CLASS_BE
# default is 4; higher number => less important
ionice_priority = 5

[object-updater]
concurrency = 1

[object-auditor]
files_per_second = 5
bytes_per_second = 5000000
# object auditing is less important than replication
nice_priority = 2
ionice_class = IOPRIO_CLASS_BE
ionice_priority = 6
