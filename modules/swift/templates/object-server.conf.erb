[DEFAULT]
# Only in object-server must you use ipv6 without bracket.
bind_ip = ::
bind_port = 6000
<% if @object_server_default_workers -%>
workers = <%= @object_server_default_workers %>
<% end -%>
# bind_timeout = 30
# backlog = 4096
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = false
# You can set fallocate_reserve to the number of bytes or percentage of disk
# space you'd like fallocate to reserve, whether there is space for the given
# file size or not. Percentage will be used if the value ends with a '%'.
# fallocate_reserve = 1%
disable_fallocate = false
fallocate_reserve = 2%

[pipeline:main]
pipeline = recon object-server

[app:object-server]
use = egg:swift#object
# 1GB (value is in bytes)
keep_cache_size = 1073741824
allowed_headers = content-disposition,
	content-encoding,
	x-delete-at,
	x-object-manifest,
	x-static-large-object,
	x-content-duration,
	x-content-dimensions

[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
#recon_lock_path = /var/lock

[object-replicator]
concurrency = 3
# Don't let replication rsyncs starve other processes of CPU or I/O.
nice_priority = 1
# ionice_class and ionice_priority must be specified together.
# (However, we currently use the deadline I/O schedule everywhere, which
# does not pay attention to ionice settings.  But set them here anyway, as
# schedulers can be changed via sysfs, and this makes experimentation
# easier.)
# BE is the default
ionice_class = IOPRIO_CLASS_BE
# default is 4; higher number => less important
ionice_priority = 5

[object-updater]
concurrency = 1

[object-auditor]
files_per_second = 5
bytes_per_second = 5000000
# object auditing is less important than replication
nice_priority = 2
ionice_class = IOPRIO_CLASS_BE
ionice_priority = 6
