#! /bin/bash

usage(){
        echo "Usage: /usr/local/bin/runwikibackups /srv/mediawiki/cache/<dblist>.php"
        exit 1
}

[[ $# -eq 0 ]] && usage

dblist=$1

export HTTPS_PROXY=http://bastion.wikitide.net:8080

if [ ! -f "$dblist" ]; then
        echo "dblist does not exist!"
        usage
        exit 1
fi

if [[ "$dblist" == *.json ]]; then
        wikis=$(/usr/bin/jq ".combi | keys | .[]" "$dblist" | sed 's/.//;s/.$//')
elif [[ "$dblist" == *.php ]]; then
        # Load the PHP array and output the keys (wiki database names)
        wikis=$(/usr/bin/php -r "
            \$list = include '$dblist';
            if ( is_array( \$list['databases'] ?? false ) ) {
                echo implode( PHP_EOL, array_keys( \$list['databases'] ) );
            }
        ")
else
        echo "Unsupported file format. Please provide a .json or .php file."
        usage
        exit 1
fi

    logsalmsg "Began automatic backing up"
# Loop through each wiki and perform the backup and upload
for wiki in $wikis; do

    # Retrieve the MediaWiki version for each wiki
    mwversion="$(/usr/local/bin/getMWVersion $wiki)"
    echo "$wiki is running MediaWiki $mwversion"

    date="$(date +'%Y%m%d')"
    echo "Date is set to $date"

    echo "Retrieving site information for $wiki..."
    
    eval $(/usr/bin/php /srv/mediawiki/$mwversion/extensions/MirahezeMagic/maintenance/getSiteInfo.php --wiki $wiki | \
        awk -F': ' '/Sitename|URL|Language|License/ {
            gsub(" ", "_", $1);
            printf("%s=\"%s\"\n", toupper($1), $2);
        }')

    # Backup process for each wiki
   if /usr/bin/php /srv/mediawiki/$mwversion/maintenance/dumpBackup.php --wiki $wiki --output gzip:/opt/backups/$wiki-$date.xml.gz --full --logs --uploads &&
       /usr/bin/php /srv/mediawiki/$mwversion/extensions/MirahezeMagic/maintenance/swiftDump.php --wiki $wiki --filename $wiki-images-$date.tar.gz &&
       /usr/bin/python3 /usr/lib/python3/dist-packages/internetarchive/cli/ia.py upload "miraheze-wiki-$wiki-$date" \
            /opt/backups/$wiki-$date.xml.gz /tmp/$wiki-images-$date.tar.gz \
            --metadata="mediatypes:texts" \
            --metadata="subject:wiki;MediaWiki;Miraheze;$SITENAME;$wiki" \
            --metadata="description:A backup of the <a href=\"$URL\">\"$SITENAME\"</a> wiki (database name: <b>$wiki</b>) on <a href=\"https://miraheze.org\">Miraheze</a>, self-generated by Miraheze itself every month to honor our <a href=\"https://meta.miraheze.org/wiki/Backups\">backups commitment.</a>" \
            --metadata="title:$SITENAME ($wiki) - $URL - Miraheze" \
            --metadata="originalurl:$URL" \
            --metadata="language:$LANGUAGE" \
            --metadata="rights:$LICENSE" \
            --metadata="scanner:MediaWiki $mwversion"
    then
        # If all commands succeeded, perform cleanup
        echo "Upload for $wiki completed!"
        echo "Deleting /opt/backups/$wiki-$date.xml.gz..."
        rm /opt/backups/$wiki-$date.xml.gz

        echo "Deleting /tmp/$wiki-images-$date.tar.gz..."
        rm /tmp/$wiki-images-$date.tar.gz

        echo "Done with $wiki!"
    else
        # If any command failed, skip cleanup and report failure
        echo "An error occurred during backup or upload for $wiki! Skipping cleanup..."
    fi
done
