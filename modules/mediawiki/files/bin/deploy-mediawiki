#! /usr/bin/python3
import argparse
import os

def run(args):
    loginfo = {}
    for arg in vars(args).items():
        if arg[1] is not None and arg[1] is not False:
            loginfo[arg[0]] = arg[1]
    synced = loginfo['servers']
    del loginfo['servers']
    os.system(f'/usr/local/bin/logsalmsg starting deploy of "{str(loginfo)}" to {synced}')
    if args.config:
        os.system('sudo -u www-data cp -r /srv/mediawiki-staging/config/* /srv/mediawiki/config/')
    if args.world:
        os.system('sudo -u www-data cp -r /srv/mediawiki-staging/w/* /srv/mediawiki/w/')
    if args.files:
        files = str(args.files).split(',')
        for file in files:
            os.system(f'sudo -u www-data cp /srv/mediawiki-staging/{file} /srv/mediawiki/{file}')
    if args.folders:
        folders = str(args.folders).split(',')
        for folder in folders:
            os.system(f'sudo -u www-data cp -r /srv/mediawiki-staging/{folder} /srv/mediawiki/{folder}')
    if args.l10n:
        os.system('sudo -u www-data php /srv/mediawiki/w/maintenance/mergeMessageFileList.php --wiki=loginwiki --output /srv/mediawiki/config/ExtensionMessageFiles.php')
        os.system('sudo -u www-data php /srv/mediawiki/w/maintenance/rebuildLocalisationCache.php --wiki=loginwiki')
    if args.servers == 'skip':
        print('very good because I have not wrote the rsync client')
    elif args.servers == 'all':
        print('This would deploy everywhere')
    else:
        serverlist = str(args.servers).split(',')
        for server in serverlist:
            print(f'I will eventually deploy to {server}')
    os.system(f'/usr/local/bin/logsalmsg finished deploy of "{str(loginfo)}" to {synced}')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Process some integers.')
    parser.add_argument('--config', dest='config', action='store_true')
    parser.add_argument('--world', dest='world', action='store_true')
    parser.add_argument('--l10n', dest='l10n', action='store_true')
    parser.add_argument('--files', dest='files')
    parser.add_argument('--folders', dest='folders')
    parser.add_argument('--servers', dest='servers', required=True)
    run(parser.parse_args())
