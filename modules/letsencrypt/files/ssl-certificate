#!/bin/bash
#
# Generate an SSL certificate (LetsEncrypt) with a CSR and private key.
#
# John Lewis
# Paladox

set -e
set -u

LE=0
RENEW=0
CSR=0
SD=0

# this is a fail safe so that if a user called just
# /root/ssl-certificate it would show the help screen
DOMAIN=""
SECONDARYDOMAIN=""

function log {
    echo "$@"
}

function generate_private_key {
    openssl genrsa 2048 > /root/ssl/${DOMAIN}.key
    log "Private key generated at: /root/ssl/${DOMAIN}.key"
}

function generate_csr {
    openssl req -new -sha256 -key /root/ssl/${DOMAIN}.key -subj "/C=NL/ST=Netherlands/L=Netherlands/O=Miraheze/CN=${DOMAIN}" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName=DNS:${DOMAIN}${SECONDARYDOMAIN}")) > /root/ssl/${DOMAIN}.csr
    log "CSR generated at: /root/ssl/${DOMAIN}.csr"
}

function generate_letsencrypt_certificate {
    /usr/bin/certbot -q --noninteractive certonly $DOMAIN $SECONDARYDOMAIN
    log "LetsEncrypt certificate at: /etc/letsencrypt/live/${DOMAIN}/fullchain.pem"
}

function renew_letsencrypt_certificate {
    /usr/bin/certbot -q --noninteractive renew --cert-name $DOMAIN --force-renewal --expand
    log "LetsEncrypt certificate at: /etc/letsencrypt/live/${DOMAIN}/fullchain.pem"
}

function usage {
    echo "Usage: $0 [-h] [-c <domain>] [-g <domain>] [-r <domain>] [-s <secondary domain>]"
    echo "  -h      display help"
    echo "  -c      generates a csr"
    echo "  -g      generates LetsEncrypt SSL Certificate or renews the Certificate"
    echo "  -r      renews LetsEncrypt SSL Certificate"
    echo "  -s      allows you to add other domains to the same cert, eg www.<domain>"
    exit 1
}

while getopts ":hg:c:s:" option; do
    case $option in
        h)
            usage
            ;;
        c)
            CSR=1;
            DOMAIN=$OPTARG
            ;;
        g)
            LE=1;
            DOMAIN=" -d ${OPTARG}"
            ;;
        r)
            RENEW=1;
            DOMAIN=" -d ${OPTARG}"
            ;;
        s)
            SD=1;
            SECONDARYDOMAIN=" -d ${OPTARG}"
            ;;
        *)
            usage
            ;;
    esac
done

test -z ${DOMAIN} && usage


if [ $CSR -eq 1 ]; then
    if [ $SD -eq 1 ]; then
        SECONDARYDOMAIN=",DNS:${SECONDARYDOMAIN/" -d "/""}"
    fi
    generate_private_key
    generate_csr
    log "Not generating an SSL certificate. Use CSR below to send to the requestor"
    cat /root/ssl/${DOMAIN}.csr
    cat /root/ssl/${DOMAIN}.key
fi

if [ $LE -eq 1 ]; then
    if [ $RENEW -eq 0 ]; then
        log "Generating SSL certificate with LetsEncrypt"
        generate_letsencrypt_certificate
        cat /etc/letsencrypt/live/${DOMAIN}/fullchain.pem
    else
        log "Re-generating a new SSL cert for ${DOMAIN}"
        renew_letsencrypt_certificate
        cat /etc/letsencrypt/live/${DOMAIN}/fullchain.pem
    fi
fi
