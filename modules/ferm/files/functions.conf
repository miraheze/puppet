# Public, unrestricted services
@def &SERVICE($proto, $port) = {
	domain (ip ip6) chain INPUT {
		proto $proto dport $port ACCEPT;
	}
}

@def &R_SERVICE($proto, $port, $srange) = {
	domain (ip ip6) chain INPUT {
		proto $proto dport $port saddr $srange ACCEPT;
	}
}

@def &D_SERVICE($proto, $port, $drange) = {
	domain (ip ip6) chain INPUT {
		proto $proto dport $port daddr $drange ACCEPT;
	}
}

@def &RD_SERVICE($proto, $port, $srange, $drange) = {
	domain (ip ip6) chain INPUT {
		proto $proto dport $port saddr $srange daddr $drange ACCEPT;
	}
}

# Exempt service from connection tracking (for high traffic services)
@def &NO_TRACK($proto, $port) = {
	domain (ip ip6) {
		table raw {
			chain PREROUTING {
				proto $proto dport $port NOTRACK;
			}
			chain OUTPUT {
				proto $proto sport $port NOTRACK;
			}
		}
	}
}

# Explicitly allow client traffic towards a service
@def &CLIENT($proto, $port) = {
	domain (ip ip6) chain OUTPUT {
		proto $proto dport $port ACCEPT;
	}
}

@def &R_CLIENT($proto, $port, $drange) = {
	domain (ip ip6) chain OUTPUT {
		proto $proto dport $port daddr $drange ACCEPT;
	}
}

# Don't track connections for clients of high traffic services
# The INPUT rules are needed for return traffic now.
@def &NO_TRACK_CLIENT($proto, $port) = {
	domain (ip ip6) {
		table raw {
			chain PREROUTING {
				proto $proto sport $port NOTRACK;
			}
			chain OUTPUT {
				proto $proto dport $port NOTRACK;
			}
		}
		table filter {
			chain INPUT {
				proto $proto sport $port ACCEPT;
			}
		}
	}
}

# Service destination address range case
@def &NO_TRACK_R_CLIENT($proto, $port, $drange) = {
	domain (ip ip6) {
		table raw {
			chain PREROUTING {
				proto $proto sport $port saddr $drange NOTRACK;
			}
			chain OUTPUT {
				proto $proto dport $port daddr $drange NOTRACK;
			}
		}
		table filter {
			chain INPUT {
				proto $proto sport $port saddr $drange ACCEPT;
			}
		}
	}
}
