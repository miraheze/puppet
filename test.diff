diff --git a/modules/icinga2/.bundle/config b/modules/icinga2/.bundle/config
deleted file mode 100755
index d5911a82..00000000
--- a/modules/icinga2/.bundle/config
+++ /dev/null
@@ -1,3 +0,0 @@
----
-BUNDLE_PATH: ".vendor"
-BUNDLE_DISABLE_SHARED_GEMS: "true"
diff --git a/modules/icinga2/.fixtures.yml b/modules/icinga2/.fixtures.yml
old mode 100755
new mode 100644
index d8e92320..933607e4
--- a/modules/icinga2/.fixtures.yml
+++ b/modules/icinga2/.fixtures.yml
@@ -1,9 +1,18 @@
 fixtures:
   forge_modules:
-    stdlib: "puppetlabs/stdlib"
-    concat: "puppetlabs/concat"
-    apt: "puppetlabs/apt"
-    chocolatey: "puppetlabs/chocolatey"
-    zypprepo: "puppet/zypprepo"
-  symlinks:
-    icinga2: "#{source_dir}"
+    icinga:
+      repo: icinga/icinga
+    stdlib:
+      repo: puppetlabs/stdlib
+    concat:
+      repo: puppetlabs/concat
+    apt:
+      repo: puppetlabs/apt
+    chocolatey:
+      repo: puppetlabs/chocolatey
+    zypprepo:
+      repo: puppet/zypprepo
+    yumrepo_core:
+      repo: puppetlabs-yumrepo_core
+      puppet_version: ">= 6.0.0"
+
diff --git a/modules/icinga2/.github/ISSUE_TEMPLATE.md b/modules/icinga2/.github/ISSUE_TEMPLATE.md
old mode 100755
new mode 100644
diff --git a/modules/icinga2/.gitignore b/modules/icinga2/.gitignore
old mode 100755
new mode 100644
index 8deda084..988dcbbe
--- a/modules/icinga2/.gitignore
+++ b/modules/icinga2/.gitignore
@@ -1,17 +1,28 @@
-## editors
+.git/
+.*.sw[op]
+.metadata
+.yardoc
+.yardwarns
+*.iml
+/.bundle/
 /.idea/
-*~
-*.swp
+/.vagrant/
+/coverage/
+/bin/
+/doc/
+/Gemfile.local
+/Gemfile.lock
+/junit/
+/log/
+/pkg/
+/spec/fixtures/manifests/
+/spec/fixtures/modules/
+/tmp/
+/vendor/
+/convert_report.txt
+/update_report.txt
 .DS_Store
-
-## puppet
-.vagrant
-modules/
-spec/fixtures/
-pkg/
-
-## ruby
-Gemfile.lock
-/.ruby-*
-.vendor/
-log/
+.project
+.envrc
+/inventory.yaml
+/spec/fixtures/litmus_inventory.yaml
diff --git a/modules/icinga2/.mailmap b/modules/icinga2/.mailmap
old mode 100755
new mode 100644
diff --git a/modules/icinga2/.rspec b/modules/icinga2/.rspec
old mode 100755
new mode 100644
index 210a1d6b..b3eb8b49
--- a/modules/icinga2/.rspec
+++ b/modules/icinga2/.rspec
@@ -1,2 +1,2 @@
---format documentation
---color
\ No newline at end of file
+--color
+--format documentation
\ No newline at end of file
diff --git a/modules/icinga2/.rspec_parallel b/modules/icinga2/.rspec_parallel
old mode 100755
new mode 100644
diff --git a/modules/icinga2/.travis.yml b/modules/icinga2/.travis.yml
old mode 100755
new mode 100644
index 2998cf7d..444e17ac
--- a/modules/icinga2/.travis.yml
+++ b/modules/icinga2/.travis.yml
@@ -1,50 +1,45 @@
 ---
-#Travis CI Job File. Feel free to extend. Have a look at the special cases in the Gemfile for Ruby 1.9
-sudo: false
+os: linux
+dist: xenial
 language: ruby
 cache: bundler
-#bundler_args: --without system_tests development
 before_install:
   - bundle -v
-  - rm Gemfile.lock || true
+  - rm -f Gemfile.lock
+  - "# Update system gems if requested. This is useful to temporarily workaround troubles in the test runner"
+  - "# See https://github.com/puppetlabs/pdk-templates/commit/705154d5c437796b821691b707156e1b056d244f for an example of how this was used"
+  - "# Ignore exit code of SIGPIPE'd yes to not fail with shell's pipefail set"
+  - '[ -z "$RUBYGEMS_VERSION" ] || (yes || true) | gem update --system $RUBYGEMS_VERSION'
   - gem --version
   - bundle -v
 script:
   - 'bundle exec rake $CHECK'
-env:
-  global:
-    - PARALLEL_TEST_PROCESSORS=4
-matrix:
+bundler_args: --without system_tests
+rvm:
+  - 2.5.7
+stages:
+  - static
+  - spec
+  - acceptance
+  -
+    if: tag =~ ^v\d
+    name: deploy
+jobs:
   fast_finish: true
   include:
-    - rvm: 2.4.0
-      env: PUPPET_VERSION="~> 5.0" CHECK=test PARALLEL_TEST_PROCESSORS=4
-    - rvm: 2.3.3
-      env: PUPPET_VERSION="~> 4.0" CHECK=test PARALLEL_TEST_PROCESSORS=4
-    - rvm: 2.2.6
-      env: PUPPET_VERSION="~> 4.0" CHECK=test PARALLEL_TEST_PROCESSORS=4
-    - rvm: 2.1.10
-      env: PUPPET_VERSION="~> 4.0" CHECK=test PARALLEL_TEST_PROCESSORS=4
-    - rvm: 2.1.10
-      env: PUPPET_VERSION="~> 4.0" CHECK=build DEPLOY_TO_FORGE=yes
-  allow_failures:
-    - rvm: 2.4.0
+    -
+      env: CHECK="validate lint check rubocop"
+      stage: static
+    -
+      env: PUPPET_GEM_VERSION="~> 6.0" CHECK=parallel_spec
+      rvm: 2.5.7
+      stage: spec
+    -
+      env: DEPLOY_TO_FORGE=yes
+      stage: deploy
 branches:
   only:
-    - master
+    - main
     - /^v\d/
 notifications:
   email: false
-deploy:
-  provider: puppetforge
-  deploy:
-    branch: master
-  user: icinga
-  password:
-    secure: "U4FeZmywLvOLXRv30EoWoWa2Eey41Zn2bE9NTVzDtJ0U6dR4g22aGpe7JsJRfetV7+8gxHfnxhx4vNSPUqt2wKT0AUTMAAiadsbKypjLV7VHf+owjyvhRBNpUFFhxYJwZuyBBJdAaw0DBu/vZa345tCKXOMg9DADJ900Z1l47X137QMMVHyLPJ+NUqKD/ONPXf0NDCGXnZLQwFVQw7rbYmYR2O5kb5x1Fkq4b3onvHOIe5obkj5DFUjICw2nPdp/f+VVg80EDCl/IagCvrKMAryeoF2GqYijjm6arxruxwW+igR1LfuXmDLWP4f/Xc/IzcciwIWD6P1cKoqId+TfdWE8K4TJt6pZCWA3CK/lk2KsdxHJeqwpoK18AglI86UAmK5pwSnDhm4OgqADVRUtOrq7k1IMHWs/T49q9PgHqn2CwuIvmSAYdLq7peLzizCZ0ZrRkFfnXNG8hf/hBNTrS0DdJmJnGkZk7gCJJQUgprGD5FSnOBFV0w9cXNLbXR9RSPKTVdnBZnCl3oyXLlMAeKrHQ6fvFHfmfpcKmufxTF32jkWxt9fnHgoNFZHzs0aY1B/zRw4GMmgHgobVQY/czw2iMzMmKvoAGB8aO4EtToKFkL6hcBxEtNCfXF3EJZykTim+AT7SfHSeShXQ+Isy2kd2Oeamiurrm5iS27FkzjQ="
-  on:
-    tags: true
-    # all_branches is required to use tags
-    all_branches: true
-    # Only publish the build marked with "DEPLOY_TO_FORGE"
-    condition: "$DEPLOY_TO_FORGE = yes"
diff --git a/modules/icinga2/AUTHORS b/modules/icinga2/AUTHORS
old mode 100755
new mode 100644
index b5f05b75..5b80dda2
--- a/modules/icinga2/AUTHORS
+++ b/modules/icinga2/AUTHORS
@@ -1,15 +1,24 @@
 Alan Jenkins <alan.christopher.jenkins@gmail.com>
 Alessandro Lorenzi <alessandro@lm-net.it>
+Alexander Schaber <a.schaber@cuegee.com>
 Alexander Schaber <alexander@schaber.info>
 Andrea Cervesato <andrea.cervesato@kqi.it>
 Andreas Ntaflos <andreas.ntaflos@rise-world.com>
 Andreas Paul <xorpaul@gmail.com>
+Ben Ford <ben.ford@puppetlabs.com>
+Benedikt Trefzer <benedikt.trefzer@cirrax.com>
+Benjamin Akhras <b@akhras.at>
 Blerim Sheqa <blerim.sheqa@icinga.com>
+Cocker Koch <github@cocker.cc>
 David Raison <david@tentwentyfour.lu>
 Dirk Goetz <dirk.goetz@netways.de>
 Erez Zarum <erez@tracx.com>
+Ewoud Kohl van Wijngaarden <ewoud@kohlvanwijngaarden.nl>
+Fionera <fionera@fionera.de>
 Florian Baumann <flo@noqqe.de>
+Gordon Bleux <UiP9AV6Y+git@protonmail.com>
 Gunnar Beutner <gunnar.beutner@netways.de>
+Henry Pauli <henry@mixict.nl>
 James Fryman <james@fryman.io>
 Jan-Otto Kröpke <kroepke@outlook.com>
 Jerome Charaoui <jcharaoui@cmaisonneuve.qc.ca>
@@ -20,17 +29,26 @@ Markus Frosch <markus.frosch@icinga.com>
 Matthias Baur <m.baur@syseleven.de>
 Matthias Ritter <matthias.ritter@dm.de>
 Michael Friedrich <michael.friedrich@icinga.com>
+Ott, Jörn WI (Fa. Allgeier Experts / Goetzfried) <Joern.Ott@schufa.de>
 Philipp Dallig <philipp.dallig@gmail.com>
 Rowan Ruseler <rowanruseler@gmail.com>
 Rowan Ruseler <rruseler@eagleeyenetworks.com>
 Rudy Gevaert <rudy.gevaert@ugent.be>
+Simon Hoenscheid <code@simonhoenscheid.de>
+Simon Hoenscheid <sh@example42.com>
 Simon Hoenscheid <simon.hoenscheid@netways.de>
 Stefan Kleindl <stefan.kleindl@rise-world.com>
 Thomas Dalichow <thomas.dalichow@publicispixelpark.de>
+Thomas Gelf <thomas@gelf.net>
+Thorsten Kahler <kahler@hrz.uni-marburg.de>
 Till Adam <till.adam@dm.de>
+Tim Meusel <tim@bastelfreak.de>
 Tom De Vylder <tom@penumbra.be>
 Tomas Barton <barton.tomas@gmail.com>
 Wyatt Alt <wyatt.alt@gmail.com>
 Zach Leslie <xaque208@gmail.com>
+jas01 <Through github>
+markuszilch <markus.zilch@tik.uni-stuttgart.de>
 murmur <hristo.mohamed@gmail.com>
 paladox <paladox@users.noreply.github.com>
+zilchms <zilchmarkus@web.de>
diff --git a/modules/icinga2/CHANGELOG.md b/modules/icinga2/CHANGELOG.md
old mode 100755
new mode 100644
index 014ee770..812c2130
--- a/modules/icinga2/CHANGELOG.md
+++ b/modules/icinga2/CHANGELOG.md
@@ -1,5 +1,340 @@
 # Change Log
 
+## [v3.4.0](https://github.com/icinga/puppet-icinga2/tree/v3.4.0) (2022-06-27)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.3.1...v3.4.0)
+
+**Implemented enhancements:**
+
+- Tune icinga::icinga2\_attributes function call [\#704](https://github.com/Icinga/puppet-icinga2/issues/704)
+
+## [v3.3.1](https://github.com/icinga/puppet-icinga2/tree/v3.3.1) (2022-06-08)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.3.0...v3.3.1)
+
+**Fixed bugs:**
+
+- Refactor Hepler Function uitils.attributes from puppet\_x context to puppet [\#702](https://github.com/Icinga/puppet-icinga2/issues/702)
+
+## [v3.3.0](https://github.com/icinga/puppet-icinga2/tree/v3.3.0) (2022-05-30)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.2.2...v3.3.0)
+
+**Implemented enhancements:**
+
+- Finish refactoring function API 4.x [\#695](https://github.com/Icinga/puppet-icinga2/issues/695)
+
+**Fixed bugs:**
+
+- MySQL and MariaDB use different commandline options for TLS [\#700](https://github.com/Icinga/puppet-icinga2/issues/700)
+
+**Closed issues:**
+
+- Support Rocky and AlmaLinux [\#701](https://github.com/Icinga/puppet-icinga2/issues/701)
+
+**Merged pull requests:**
+
+- Enabling basic CI jobs on GitHub actions [\#698](https://github.com/Icinga/puppet-icinga2/pull/698) ([bastelfreak](https://github.com/bastelfreak))
+
+## [v3.2.2](https://github.com/icinga/puppet-icinga2/tree/v3.2.2) (2022-01-18)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.2.1...v3.2.2)
+
+**Fixed bugs:**
+
+- feature:api: Allow TLSv1.3 as minimal TLS Version [\#696](https://github.com/Icinga/puppet-icinga2/pull/696) ([bastelfreak](https://github.com/bastelfreak))
+
+**Merged pull requests:**
+
+- Cleanup puppet-lint/regenerate REFERENCE.md [\#697](https://github.com/Icinga/puppet-icinga2/pull/697) ([bastelfreak](https://github.com/bastelfreak))
+
+## [v3.2.1](https://github.com/icinga/puppet-icinga2/tree/v3.2.1) (2021-12-17)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.2.0...v3.2.1)
+
+**Fixed bugs:**
+
+- Constant in a sensitive data string are quoted [\#694](https://github.com/Icinga/puppet-icinga2/issues/694)
+- added soft-dependency for puppetlabs-chocolatey [\#692](https://github.com/Icinga/puppet-icinga2/pull/692) ([zilchms](https://github.com/zilchms))
+- Added known issues regarding environment bleed to documentation [\#693](https://github.com/Icinga/puppet-icinga2/pull/693) ([zilchms](https://github.com/zilchms))
+
+**Closed issues:**
+
+- Chocolatey missing in dependencies [\#691](https://github.com/Icinga/puppet-icinga2/issues/691)
+- Please do not force-push in HEAD branch [\#690](https://github.com/Icinga/puppet-icinga2/issues/690)
+
+## [v3.2.0](https://github.com/icinga/puppet-icinga2/tree/v3.2.0) (2021-10-23)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.1.3...v3.2.0)
+
+**Implemented enhancements:**
+
+- Accept Datatype Sensitive for Secrets [\#689](https://github.com/Icinga/puppet-icinga2/issues/689)
+- Update testing doc to use pdk validate command [\#686](https://github.com/Icinga/puppet-icinga2/issues/686)
+- Add new feature windowseventlog [\#684](https://github.com/Icinga/puppet-icinga2/issues/684)
+- Add TLS support to feature idopgsql [\#683](https://github.com/Icinga/puppet-icinga2/issues/683)
+- Add new data type for ido cleanups [\#682](https://github.com/Icinga/puppet-icinga2/issues/682)
+- Add param connect\_timeout and TLS support to feature icingadb [\#681](https://github.com/Icinga/puppet-icinga2/issues/681)
+- Add object type icingaapplication [\#680](https://github.com/Icinga/puppet-icinga2/issues/680)
+- Add TLS support to feature gelf [\#679](https://github.com/Icinga/puppet-icinga2/issues/679)
+- Add param insecure\_noverify to feature elasticsearch [\#678](https://github.com/Icinga/puppet-icinga2/issues/678)
+- Add param connect\_timeout to feature api  [\#677](https://github.com/Icinga/puppet-icinga2/issues/677)
+- Add missing params basic\_auth, ssl\_insecure\_noverify to feature influxdb [\#676](https://github.com/Icinga/puppet-icinga2/issues/676)
+- Write new feature influxdb2 [\#675](https://github.com/Icinga/puppet-icinga2/issues/675)
+- Use new hash style for facts [\#672](https://github.com/Icinga/puppet-icinga2/pull/672) ([cocker-cc](https://github.com/cocker-cc))
+
+**Fixed bugs:**
+
+- Keys are shown in Reports for features elasticsearch, idomysql and influxdb [\#687](https://github.com/Icinga/puppet-icinga2/issues/687)
+- Cannot create MySQL database tables if enable\_ssl is set without any other ssl parameter [\#685](https://github.com/Icinga/puppet-icinga2/issues/685)
+- Update to use pdk 2.x without fails [\#671](https://github.com/Icinga/puppet-icinga2/issues/671)
+
+**Closed issues:**
+
+- Check docu for deprecated parameters [\#673](https://github.com/Icinga/puppet-icinga2/issues/673)
+- Using puppet PKI is unsupported on newer Puppetmaster [\#669](https://github.com/Icinga/puppet-icinga2/issues/669)
+
+## [v3.1.3](https://github.com/icinga/puppet-icinga2/tree/v3.1.3) (2021-06-18)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.1.2...v3.1.3)
+
+**Fixed bugs:**
+
+- Attribute severity of object SyslogLogger no longer appears to be optional [\#666](https://github.com/Icinga/puppet-icinga2/issues/666)
+
+## [v3.1.2](https://github.com/icinga/puppet-icinga2/tree/v3.1.2) (2021-05-12)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.1.1...v3.1.2)
+
+**Fixed bugs:**
+
+- logonaccount breaks service on puppet \< 6 [\#664](https://github.com/Icinga/puppet-icinga2/issues/664)
+
+## [v3.1.1](https://github.com/icinga/puppet-icinga2/tree/v3.1.1) (2021-05-01)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.1.0...v3.1.1)
+
+**Fixed bugs:**
+
+- Add Integer to Icinga2::Interval type alias [\#663](https://github.com/Icinga/puppet-icinga2/pull/663) ([UiP9AV6Y](https://github.com/UiP9AV6Y))
+
+**Closed issues:**
+
+- Add Integer to Icinga2::Interval type alias [\#662](https://github.com/Icinga/puppet-icinga2/issues/662)
+
+## [v3.1.0](https://github.com/icinga/puppet-icinga2/tree/v3.1.0) (2021-04-24)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v3.0.0...v3.1.0)
+
+**Implemented enhancements:**
+
+- Add manage\_packages to replace manage\_packages [\#661](https://github.com/Icinga/puppet-icinga2/issues/661)
+- Change owner of config file to icinga [\#660](https://github.com/Icinga/puppet-icinga2/issues/660)
+- Add some words to reserve list  [\#659](https://github.com/Icinga/puppet-icinga2/issues/659)
+- Allow to send cert req without ticket [\#653](https://github.com/Icinga/puppet-icinga2/issues/653)
+- Add new parameter logon\_account [\#650](https://github.com/Icinga/puppet-icinga2/issues/650)
+- Manage owner, group and permission of config files [\#648](https://github.com/Icinga/puppet-icinga2/issues/648)
+
+**Fixed bugs:**
+
+- Added Dictionary to reserved list [\#655](https://github.com/Icinga/puppet-icinga2/pull/655) ([hp197](https://github.com/hp197))
+- Changed Integer parameters into Icinga2::Interval [\#654](https://github.com/Icinga/puppet-icinga2/pull/654) ([hp197](https://github.com/hp197))
+
+**Closed issues:**
+
+- Support conditional blocks inside objects [\#652](https://github.com/Icinga/puppet-icinga2/issues/652)
+
+**Merged pull requests:**
+
+- docs: Add comma to clustering example [\#646](https://github.com/Icinga/puppet-icinga2/pull/646) ([fionera](https://github.com/fionera))
+
+## [v3.0.0](https://github.com/icinga/puppet-icinga2/tree/v3.0.0) (2020-10-13)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.4.1...v3.0.0)
+
+**Implemented enhancements:**
+
+- Replace class repo with new class from module icinga [\#613](https://github.com/Icinga/puppet-icinga2/issues/613)
+- Add new param manage\_repos to replace manage\_repo in the future [\#643](https://github.com/Icinga/puppet-icinga2/pull/643) ([lbetz](https://github.com/lbetz))
+- add-unit-tests-for-types [\#641](https://github.com/Icinga/puppet-icinga2/pull/641) ([lbetz](https://github.com/lbetz))
+- fix \#623 change data types of all certificates and keys [\#640](https://github.com/Icinga/puppet-icinga2/pull/640) ([lbetz](https://github.com/lbetz))
+- Accepts SHA1 and SHA256 fingerprint digests [\#632](https://github.com/Icinga/puppet-icinga2/pull/632) ([thorstenk](https://github.com/thorstenk))
+
+**Fixed bugs:**
+
+- Parameter icon\_image value must not be an absolute path [\#619](https://github.com/Icinga/puppet-icinga2/issues/619)
+- Attribute parser breaks passwords [\#616](https://github.com/Icinga/puppet-icinga2/issues/616)
+- setting env vars in \#618 do not work on Windows [\#642](https://github.com/Icinga/puppet-icinga2/pull/642) ([lbetz](https://github.com/lbetz))
+- Missing parameters [\#630](https://github.com/Icinga/puppet-icinga2/pull/630) ([jas01](https://github.com/jas01))
+- Add environment variables for icinga user and group to execs [\#618](https://github.com/Icinga/puppet-icinga2/pull/618) ([joernott](https://github.com/joernott))
+
+**Closed issues:**
+
+- Accept SHA256 fingerprints \(since Icinga2 2.12.0\) [\#631](https://github.com/Icinga/puppet-icinga2/issues/631)
+- Setting up certificates does not work if user != icinga [\#617](https://github.com/Icinga/puppet-icinga2/issues/617)
+- Add unit test for type logseverity [\#639](https://github.com/Icinga/puppet-icinga2/issues/639)
+- Add unit test for type logfacility [\#638](https://github.com/Icinga/puppet-icinga2/issues/638)
+- Add unit test for type interval [\#636](https://github.com/Icinga/puppet-icinga2/issues/636)
+- Add unit test for type fingerprint  [\#635](https://github.com/Icinga/puppet-icinga2/issues/635)
+- Change all TLS certificates and keys to datatype Stdlib::Base64 [\#623](https://github.com/Icinga/puppet-icinga2/issues/623)
+
+**Merged pull requests:**
+
+- correct fixtures and metadata [\#634](https://github.com/Icinga/puppet-icinga2/pull/634) ([SimonHoenscheid](https://github.com/SimonHoenscheid))
+- changes to fix breaking tests [\#633](https://github.com/Icinga/puppet-icinga2/pull/633) ([SimonHoenscheid](https://github.com/SimonHoenscheid))
+
+## [v2.4.1](https://github.com/icinga/puppet-icinga2/tree/v2.4.1) (2020-05-05)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.4.0...v2.4.1)
+
+**Fixed bugs:**
+
+- Lost pull request \#611 [\#615](https://github.com/Icinga/puppet-icinga2/issues/615)
+
+## [v2.4.0](https://github.com/icinga/puppet-icinga2/tree/v2.4.0) (2020-04-24)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.3.4...v2.4.0)
+
+**Implemented enhancements:**
+
+- Add new icingadb feature  [\#612](https://github.com/Icinga/puppet-icinga2/issues/612)
+- Rework examples and docs [\#423](https://github.com/Icinga/puppet-icinga2/issues/423)
+- install icinga2-selinux  [\#602](https://github.com/Icinga/puppet-icinga2/pull/602) ([b3n4kh](https://github.com/b3n4kh))
+
+**Fixed bugs:**
+
+- Fix rubocop LineLength \# see https://rubocop.readthedocs.io/en/latest… [\#611](https://github.com/Icinga/puppet-icinga2/pull/611) ([thomas-merz](https://github.com/thomas-merz))
+
+## [v2.3.4](https://github.com/icinga/puppet-icinga2/tree/v2.3.4) (2020-03-25)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.3.3...v2.3.4)
+
+**Implemented enhancements:**
+
+- Remove Support for some platforms [\#610](https://github.com/Icinga/puppet-icinga2/issues/610)
+- Allow to parse a simple hash in strings [\#588](https://github.com/Icinga/puppet-icinga2/issues/588)
+- Allow to parse an array in strings [\#587](https://github.com/Icinga/puppet-icinga2/issues/587)
+- rework icinga2::repo class to a public class [\#609](https://github.com/Icinga/puppet-icinga2/pull/609) ([lbetz](https://github.com/lbetz))
+- Influxdb can be reachable via any port [\#607](https://github.com/Icinga/puppet-icinga2/pull/607) ([b3n4kh](https://github.com/b3n4kh))
+- Debian10 support [\#604](https://github.com/Icinga/puppet-icinga2/pull/604) ([lbetz](https://github.com/lbetz))
+- Enhancement/allow to get attributes from function result [\#603](https://github.com/Icinga/puppet-icinga2/pull/603) ([lbetz](https://github.com/lbetz))
+- RHEL 8 support [\#600](https://github.com/Icinga/puppet-icinga2/pull/600) ([lbetz](https://github.com/lbetz))
+- Porting functions to the modern Puppet 4.x API [\#598](https://github.com/Icinga/puppet-icinga2/pull/598) ([binford2k](https://github.com/binford2k))
+
+**Fixed bugs:**
+
+- add missing EPEL repo on RedHat [\#599](https://github.com/Icinga/puppet-icinga2/pull/599) ([lbetz](https://github.com/lbetz))
+
+## [v2.3.3](https://github.com/icinga/puppet-icinga2/tree/v2.3.3) (2020-03-16)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.3.2...v2.3.3)
+
+**Fixed bugs:**
+
+- Private keys: no diff, no backup [\#606](https://github.com/Icinga/puppet-icinga2/pull/606) ([Thomas-Gelf](https://github.com/Thomas-Gelf))
+
+**Closed issues:**
+
+- REOPEN: does not handle database host correctly [\#572](https://github.com/Icinga/puppet-icinga2/issues/572)
+
+## [v2.3.2](https://github.com/icinga/puppet-icinga2/tree/v2.3.2) (2019-12-18)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.3.1...v2.3.2)
+
+**Fixed bugs:**
+
+- Missing default in case statement for pki in feature::api [\#596](https://github.com/Icinga/puppet-icinga2/pull/596) ([lbetz](https://github.com/lbetz))
+
+## [v2.3.1](https://github.com/icinga/puppet-icinga2/tree/v2.3.1) (2019-12-17)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.3.0...v2.3.1)
+
+**Fixed bugs:**
+
+- Add Backports Repo on Debian [\#595](https://github.com/Icinga/puppet-icinga2/issues/595)
+- Rework and correct documentation of Clustering Icinga 2 [\#584](https://github.com/Icinga/puppet-icinga2/issues/584)
+
+**Closed issues:**
+
+- Cannot complete agent / client add via puppet [\#585](https://github.com/Icinga/puppet-icinga2/issues/585)
+
+## [v2.3.0](https://github.com/icinga/puppet-icinga2/tree/v2.3.0) (2019-07-26)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.2.0...v2.3.0)
+
+**Implemented enhancements:**
+
+- Add new attributes to feature api [\#581](https://github.com/Icinga/puppet-icinga2/issues/581)
+- Add new constants and keywords [\#579](https://github.com/Icinga/puppet-icinga2/issues/579)
+- Add info of new constant MaxConcurrentChecks to feature checker [\#578](https://github.com/Icinga/puppet-icinga2/issues/578)
+- New HA-aware Features [\#576](https://github.com/Icinga/puppet-icinga2/issues/576)
+
+**Fixed bugs:**
+
+- Remove OpenBSD from official support list [\#583](https://github.com/Icinga/puppet-icinga2/issues/583)
+- Add missed flapping attributes to objects host and service [\#580](https://github.com/Icinga/puppet-icinga2/issues/580)
+
+## [v2.2.0](https://github.com/icinga/puppet-icinga2/tree/v2.2.0) (2019-07-14)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.1.1...v2.2.0)
+
+**Implemented enhancements:**
+
+- Remove deprecated data\_provider [\#568](https://github.com/Icinga/puppet-icinga2/issues/568)
+- Convert to pdk [\#528](https://github.com/Icinga/puppet-icinga2/issues/528)
+- add new type for custom attributes to support also arrays [\#574](https://github.com/Icinga/puppet-icinga2/pull/574) ([lbetz](https://github.com/lbetz))
+- add feature to merge arrays and hashes by the parser [\#573](https://github.com/Icinga/puppet-icinga2/pull/573) ([lbetz](https://github.com/lbetz))
+- Extent parser to build += assignments [\#569](https://github.com/Icinga/puppet-icinga2/pull/569) ([lbetz](https://github.com/lbetz))
+- Add constants for Gentoo AMD64 [\#567](https://github.com/Icinga/puppet-icinga2/pull/567) ([ekohl](https://github.com/ekohl))
+- convert module to PDK [\#564](https://github.com/Icinga/puppet-icinga2/pull/564) ([SimonHoenscheid](https://github.com/SimonHoenscheid))
+
+**Fixed bugs:**
+
+- Downgrade restore of vars [\#575](https://github.com/Icinga/puppet-icinga2/issues/575)
+- Pin versions for travis of required puppet modules for puppet 4 [\#570](https://github.com/Icinga/puppet-icinga2/issues/570)
+- fix \#570 Pin versions for travis of required puppet modules for puppet [\#571](https://github.com/Icinga/puppet-icinga2/pull/571) ([lbetz](https://github.com/lbetz))
+- Fix Puppet4 build [\#565](https://github.com/Icinga/puppet-icinga2/pull/565) ([SimonHoenscheid](https://github.com/SimonHoenscheid))
+
+**Closed issues:**
+
+- Allow to specify both vars + config as custom vars using hash [\#566](https://github.com/Icinga/puppet-icinga2/issues/566)
+
+## [v2.1.1](https://github.com/icinga/puppet-icinga2/tree/v2.1.1) (2019-05-24)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.1.0...v2.1.1)
+
+**Implemented enhancements:**
+
+- Rework travis batch and enable check for puppet 6 [\#560](https://github.com/Icinga/puppet-icinga2/issues/560)
+
+**Fixed bugs:**
+
+- Fix and update TESTING documentation [\#561](https://github.com/Icinga/puppet-icinga2/issues/561)
+- Set default of all optional parameters in globals to undef [\#559](https://github.com/Icinga/puppet-icinga2/issues/559)
+- Fact kernel on windows has to be lower case [\#556](https://github.com/Icinga/puppet-icinga2/issues/556)
+- Fix some lint issues in api, idomysql, globals [\#553](https://github.com/Icinga/puppet-icinga2/issues/553)
+- Fix tests for Puppet 6 [\#550](https://github.com/Icinga/puppet-icinga2/issues/550)
+- Fix spec tests of icinga objects [\#549](https://github.com/Icinga/puppet-icinga2/issues/549)
+- Fix spec tests for class pki [\#548](https://github.com/Icinga/puppet-icinga2/issues/548)
+- Fix spec tests for feature idopgsql [\#547](https://github.com/Icinga/puppet-icinga2/issues/547)
+- Fix spec tests for feature idomysql [\#546](https://github.com/Icinga/puppet-icinga2/issues/546)
+- Fix spec test of feature api [\#545](https://github.com/Icinga/puppet-icinga2/issues/545)
+- fix typo in README.md [\#544](https://github.com/Icinga/puppet-icinga2/pull/544) ([bastelfreak](https://github.com/bastelfreak))
+
+**Closed issues:**
+
+- Icinga2 custom config dir \(not /etc/...\) [\#543](https://github.com/Icinga/puppet-icinga2/issues/543)
+
+## [v2.1.0](https://github.com/icinga/puppet-icinga2/tree/v2.1.0) (2019-04-30)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.0.2...v2.1.0)
+
+**Implemented enhancements:**
+
+- The puppet module does not validate the master's X.509 certificate [\#360](https://github.com/Icinga/puppet-icinga2/issues/360)
+- Set the object file owner to root [\#533](https://github.com/Icinga/puppet-icinga2/pull/533) ([ekohl](https://github.com/ekohl))
+
+**Fixed bugs:**
+
+- Path on Windows does not work [\#542](https://github.com/Icinga/puppet-icinga2/issues/542)
+- Documentation of default values for InfluxWriter is outdated [\#537](https://github.com/Icinga/puppet-icinga2/issues/537)
+- The puppet module does not validate the master's X.509 certificate [\#360](https://github.com/Icinga/puppet-icinga2/issues/360)
+
+## [v2.0.2](https://github.com/icinga/puppet-icinga2/tree/v2.0.2) (2019-03-14)
+[Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.0.1...v2.0.2)
+
+**Implemented enhancements:**
+
+- add initial support for OpenBSD [\#539](https://github.com/Icinga/puppet-icinga2/pull/539) ([trefzer](https://github.com/trefzer))
+- Add values for the Gentoo family [\#534](https://github.com/Icinga/puppet-icinga2/pull/534) ([ekohl](https://github.com/ekohl))
+
+**Fixed bugs:**
+
+- Unable to define endpoint with custom port number [\#530](https://github.com/Icinga/puppet-icinga2/issues/530)
+
+**Merged pull requests:**
+
+- fix typos in documentation [\#529](https://github.com/Icinga/puppet-icinga2/pull/529) ([aschaber1](https://github.com/aschaber1))
+
 ## [v2.0.1](https://github.com/icinga/puppet-icinga2/tree/v2.0.1) (2019-02-12)
 [Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v2.0.0...v2.0.1)
 
@@ -62,9 +397,12 @@
 - ElasticsearchWriter: Optional parameters are forced by module [\#522](https://github.com/Icinga/puppet-icinga2/issues/522)
 - fix unit test functions/attributes\_spec.rb [\#517](https://github.com/Icinga/puppet-icinga2/issues/517)
 - rework unit test for objects\_spec.rb  [\#516](https://github.com/Icinga/puppet-icinga2/issues/516)
+- Evaluation Error: Error while evaluating a Function Call, Class\[Icinga2::Globals\]: [\#504](https://github.com/Icinga/puppet-icinga2/issues/504)
+- Incomplete list of supported operatingssystems  [\#501](https://github.com/Icinga/puppet-icinga2/issues/501)
 - pki::ca require dependency to config class [\#498](https://github.com/Icinga/puppet-icinga2/issues/498)
 - Unknown variable \_ssl\_key [\#497](https://github.com/Icinga/puppet-icinga2/issues/497)
 - Unknown variable ido\_mysql\_package on debian [\#496](https://github.com/Icinga/puppet-icinga2/issues/496)
+- Missing documentation of class icinga::globals [\#494](https://github.com/Icinga/puppet-icinga2/issues/494)
 - InfluxWriter: Optional parameters are forced by module [\#491](https://github.com/Icinga/puppet-icinga2/issues/491)
 - Duplicate key HOSTDISPLAYNAME in example\_config.pp [\#480](https://github.com/Icinga/puppet-icinga2/issues/480)
 - Attribute vars of all object types can be also a string [\#474](https://github.com/Icinga/puppet-icinga2/issues/474)
@@ -81,11 +419,7 @@
 
 **Closed issues:**
 
-- Create vars.foo\["bar"\] objects in Hiera [\#520](https://github.com/Icinga/puppet-icinga2/issues/520)
 - OS facts clutter with recent ruby versions in spec tests [\#518](https://github.com/Icinga/puppet-icinga2/issues/518)
-- Evaluation Error: Error while evaluating a Function Call, Class\[Icinga2::Globals\]: [\#504](https://github.com/Icinga/puppet-icinga2/issues/504)
-- Incomplete list of supported operatingssystems  [\#501](https://github.com/Icinga/puppet-icinga2/issues/501)
-- Missing documentation of class icinga::globals [\#494](https://github.com/Icinga/puppet-icinga2/issues/494)
 - Deprecated features in 2.9: statusdata & compatlog [\#481](https://github.com/Icinga/puppet-icinga2/issues/481)
 
 **Merged pull requests:**
@@ -128,12 +462,6 @@
 - Attribute prefix for services is not documented [\#430](https://github.com/Icinga/puppet-icinga2/issues/430)
 - ido-pgsql db import fails on debian [\#500](https://github.com/Icinga/puppet-icinga2/issues/500)
 
-**Closed issues:**
-
-- Missing of if else functionality in serviceconfiguration as icinga2 would normally allow [\#444](https://github.com/Icinga/puppet-icinga2/issues/444)
-- Is there a way to purge exported resources? [\#442](https://github.com/Icinga/puppet-icinga2/issues/442)
-- overriding thresholds of individual disks [\#428](https://github.com/Icinga/puppet-icinga2/issues/428)
-
 ## [v1.3.6](https://github.com/icinga/puppet-icinga2/tree/v1.3.6) (2018-04-25)
 [Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v1.3.5...v1.3.6)
 
@@ -147,11 +475,6 @@
 - Changes on concat resource for objects does not trigger a refresh on puppet3 [\#434](https://github.com/Icinga/puppet-icinga2/issues/434)
 - don't quote null  [\#433](https://github.com/Icinga/puppet-icinga2/issues/433)
 
-**Closed issues:**
-
-- Using apply in a service causes service\_name not to be applied to service leading to duplicate resource issues [\#429](https://github.com/Icinga/puppet-icinga2/issues/429)
-- Applying services to hostgroups [\#427](https://github.com/Icinga/puppet-icinga2/issues/427)
-
 **Merged pull requests:**
 
 - Bug/do not quote null 433 [\#435](https://github.com/Icinga/puppet-icinga2/pull/435) ([lbetz](https://github.com/lbetz))
@@ -164,7 +487,7 @@
 - icinga2 binary is wrong on rhel5 [\#409](https://github.com/Icinga/puppet-icinga2/issues/409)
 - Add feature Elasticsearch [\#408](https://github.com/Icinga/puppet-icinga2/issues/408)
 - Add feature elasticsearch [\#399](https://github.com/Icinga/puppet-icinga2/issues/399)
-- Added cloudlinux to supported operating systems. Is nearly identical … [\#424](https://github.com/Icinga/puppet-icinga2/pull/424) ([Koma-Andrea](https://github.com/Koma-Andrea))
+- Added cloudlinux to supported operating systems. Is nearly identical … [\#424](https://github.com/Icinga/puppet-icinga2/pull/424) ([thekoma](https://github.com/thekoma))
 
 **Fixed bugs:**
 
@@ -172,13 +495,6 @@
 - fix \#411 Setting up Icinga 2 with a different port than default for i… [\#413](https://github.com/Icinga/puppet-icinga2/pull/413) ([lbetz](https://github.com/lbetz))
 - fix for repository.d directory on master-systems [\#412](https://github.com/Icinga/puppet-icinga2/pull/412) ([matthiasritter](https://github.com/matthiasritter))
 
-**Closed issues:**
-
-- escaping broken with double quotes? [\#416](https://github.com/Icinga/puppet-icinga2/issues/416)
-- Icinga resource doesn't create ca directory and required files [\#415](https://github.com/Icinga/puppet-icinga2/issues/415)
-- icinga2 option generates self signed certificates that are rejected by master [\#405](https://github.com/Icinga/puppet-icinga2/issues/405)
-- manage repo trough proxy [\#394](https://github.com/Icinga/puppet-icinga2/issues/394)
-
 **Merged pull requests:**
 
 - trivial copy edits [\#420](https://github.com/Icinga/puppet-icinga2/pull/420) ([wkalt](https://github.com/wkalt))
@@ -222,10 +538,6 @@
 
 - SLES should use service pack repository [\#386](https://github.com/Icinga/puppet-icinga2/issues/386)
 
-**Closed issues:**
-
-- Update docs how to pass package version [\#388](https://github.com/Icinga/puppet-icinga2/issues/388)
-
 ## [v1.3.1](https://github.com/icinga/puppet-icinga2/tree/v1.3.1) (2017-10-05)
 [Full Changelog](https://github.com/icinga/puppet-icinga2/compare/v1.3.0...v1.3.1)
 
@@ -369,6 +681,10 @@
 - ido schema import dependency [\#237](https://github.com/Icinga/puppet-icinga2/issues/237)
 - Using pki =\> "ca" can either cause incomplete deps or circular reference [\#236](https://github.com/Icinga/puppet-icinga2/issues/236)
 
+**Closed issues:**
+
+- Can't enable feature::idomysql without importing schema [\#241](https://github.com/Icinga/puppet-icinga2/issues/241)
+
 **Merged pull requests:**
 
 - enable setting of bind\_host and bind\_port for feature::api [\#243](https://github.com/Icinga/puppet-icinga2/pull/243) ([aschaber1](https://github.com/aschaber1))
diff --git a/modules/icinga2/CONTRIBUTING.md b/modules/icinga2/CONTRIBUTING.md
old mode 100755
new mode 100644
diff --git a/modules/icinga2/Gemfile b/modules/icinga2/Gemfile
old mode 100755
new mode 100644
index edb5dd76..1818b963
--- a/modules/icinga2/Gemfile
+++ b/modules/icinga2/Gemfile
@@ -1,17 +1,63 @@
-source 'https://rubygems.org'
-
-gem 'puppet', ENV.key?('PUPPET_VERSION') ? ENV['PUPPET_VERSION'].to_s : '>= 4.10', '< 6.0.0'
-
-gem 'github_changelog_generator'
-gem 'puppetlabs_spec_helper', '>= 2.0'
-gem 'puppet-lint', '>= 2.0.0'
-gem 'facter', '>= 2.4.0'
-gem 'facterdb', '>= 0.5'
-gem 'rspec-puppet-facts', '>= 1.6.0'
-gem 'serverspec'
-gem 'r10k'
-gem 'parallel_tests', '>= 2.10.0'
-gem 'metadata-json-lint'
-gem 'beaker-rspec'
-gem 'beaker-vagrant'
-gem 'beaker-puppet_install_helper'
+source ENV['GEM_SOURCE'] || 'https://rubygems.org'
+
+def location_for(place_or_version, fake_version = nil)
+  git_url_regex = %r{\A(?<url>(https?|git)[:@][^#]*)(#(?<branch>.*))?}
+  file_url_regex = %r{\Afile:\/\/(?<path>.*)}
+
+  if place_or_version && (git_url = place_or_version.match(git_url_regex))
+    [fake_version, { git: git_url[:url], branch: git_url[:branch], require: false }].compact
+  elsif place_or_version && (file_url = place_or_version.match(file_url_regex))
+    ['>= 0', { path: File.expand_path(file_url[:path]), require: false }]
+  else
+    [place_or_version, { require: false }]
+  end
+end
+
+ruby_version_segments = Gem::Version.new(RUBY_VERSION.dup).segments
+minor_version = ruby_version_segments[0..1].join('.')
+
+group :development do
+  gem "json", '= 2.0.4',                                         require: false if Gem::Requirement.create('~> 2.4.2').satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.1.0',                                         require: false if Gem::Requirement.create(['>= 2.5.0', '< 2.7.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.3.0',                                         require: false if Gem::Requirement.create(['>= 2.7.0', '< 2.8.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "puppet-module-posix-default-r#{minor_version}", '~> 1.0', require: false, platforms: [:ruby]
+  gem "puppet-module-posix-dev-r#{minor_version}", '~> 1.0',     require: false, platforms: [:ruby]
+  gem "puppet-module-win-default-r#{minor_version}", '~> 1.0',   require: false, platforms: [:mswin, :mingw, :x64_mingw]
+  gem "puppet-module-win-dev-r#{minor_version}", '~> 1.0',       require: false, platforms: [:mswin, :mingw, :x64_mingw]
+  gem "github_changelog_generator",                              require: false, git: 'https://github.com/skywinder/github-changelog-generator', ref: '20ee04ba1234e9e83eb2ffb5056e23d641c7a018' if Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('2.2.2')
+end
+group :system_tests do
+  gem "puppet-module-posix-system-r#{minor_version}", '~> 1.0', require: false, platforms: [:ruby]
+  gem "puppet-module-win-system-r#{minor_version}", '~> 1.0',   require: false, platforms: [:mswin, :mingw, :x64_mingw]
+end
+
+puppet_version = ENV['PUPPET_GEM_VERSION']
+facter_version = ENV['FACTER_GEM_VERSION']
+hiera_version = ENV['HIERA_GEM_VERSION']
+
+gems = {}
+
+gems['puppet'] = location_for(puppet_version)
+
+# If facter or hiera versions have been specified via the environment
+# variables
+
+gems['facter'] = location_for(facter_version) if facter_version
+gems['hiera'] = location_for(hiera_version) if hiera_version
+
+gems.each do |gem_name, gem_params|
+  gem gem_name, *gem_params
+end
+
+# Evaluate Gemfile.local and ~/.gemfile if they exist
+extra_gemfiles = [
+  "#{__FILE__}.local",
+  File.join(Dir.home, '.gemfile'),
+]
+
+extra_gemfiles.each do |gemfile|
+  if File.file?(gemfile) && File.readable?(gemfile)
+    eval(File.read(gemfile), binding)
+  end
+end
+# vim: syntax=ruby
diff --git a/modules/icinga2/LICENSE b/modules/icinga2/LICENSE
old mode 100755
new mode 100644
diff --git a/modules/icinga2/README.md b/modules/icinga2/README.md
old mode 100755
new mode 100644
index ddc73dd7..da69d839
--- a/modules/icinga2/README.md
+++ b/modules/icinga2/README.md
@@ -6,56 +6,48 @@
 
 #### Table of Contents
 
-1. [Overview][Overview]
-2. [Module Description - What the module does and why it is useful][Module description]
-3. [Setup - The basics of getting started with icinga2][Setup]
-    * [What Icinga 2 affects][]
-4. [Usage - Configuration options and additional functionality][Usage]
-5. [Reference - An under-the-hood peek at what the module is doing and how][Reference]
-    * [Public Classes][]
-    * [Private Classes][]
-    * [Public defined types][]
-    * [Private defined types][]
-6. [Development - Guide for contributing to the module][Development]
+1. [Overview](#overview)
+2. [Module Description - What the module does and why it is useful](#module-description)
+3. [Setup - The basics of getting started with icinga2](#setup)
+4. [Usage - Configuration options and additional functionality](#usage)
+    * [Installing Icinga](#installing-icinga)
+    * [Clustering Icinga](#clustering-icinga)
+    * [Config Objects](#config-objects)
+    * [Reading objects from hiera](#Reading-objects-from-hiera)
+    * [Apply Rules](#apply-rules)
+    * [Custom configuration](#custom-configuration)
+5. [How Configuration is parsed](#how-configuration-is-parsed)
+6. [Reference](#reference)
+7. [Release Notes](#release-notes)
 
 ## Overview
 
 Icinga 2 is a widely used open source monitoring software. This Puppet module helps with installing and managing
 configuration of Icinga 2 on multiple operating systems.
 
-### v2.0.0
-
-* Requires Icinga 2 v2.8.0 or higher.
-* Feature `api`:
-    * Default for parameter `pki` was changed to `icinga2`.
-    * Parameters `ssl_key_path`, `ssl_cert_path`, `ssl_csr_path` and `ssl_ca_path` removed.
-    * Deprecated value `ca` of parameter `pki` is removed.
-    * Parameter ssl_crl_path was renamed to ssl_crl.
-* Feature `idopgsql`
-    * Parameter `password` is required now.
-    * Parameter default for `host` is set to `localhost`
-* Feature `idomysql`
-    * Parameter `password` is required now.
-    * Parameter default for `host` is set to `localhost`
-    * Remove parameter `pki`.
-        * Puppet as key, cert or cacert source isn't supported anymore.
-        * However to use these create file resources with tag to `icinga2::config::file` and source to one of the facts icinga2_puppet_hostcert, icinga2_puppet_hostprivkey, icinga2_puppet_localcacert
-    * Key and certs now are stored into the certs directory named `IdoMysqlConnection_ido-mysql` by default.
-* Feature `elasticsearch`
-    * Remove parameter `pki`.
-        * Puppet as key, cert or cacert source isn't supported anymore.
-        * However to use these create file resources with tag to `icinga2::config::file` and source to one of the facts icinga2_puppet_hostcert, icinga2_puppet_hostprivkey, icinga2_puppet_localcacert
-    * Key and certs now are stored into the certs directory and named `ElasticsearchWriter_elasticsearch` by default.
-* Feature `influxdb`
-    * Remove parameter `pki`.
-        * Puppet as key, cert or cacert source isn't supported anymore.
-        * However to use these create file resources with tag to `icinga2::config::file` and source to one of the facts icinga2_puppet_hostcert, icinga2_puppet_hostprivkey, icinga2_puppet_localcacert
-    * Key and certs now are stored into the certs directory named `InfluxdbWriter_influxdb` by default.
-* compatlogger
-    * Object removed
-* Class `icinga2::pki::ca`
-    * Parameters `ssl_key_path`, `ssl_csr_path` and `ssl_cacert_path` removed. Now the location is at `/var/lib/icinga2/certs` on Linux hosts and `C:/ProgramData/icinga2/var/lib/icinga2/certs`.
+### What's new in version 3.4.0
 
+The internal used function `icinga_attributes` was moved to `icinga2::icinga2_attributes` with parameter changes. All direct calls of these functions are replaced with a new wrapper function `icinga2::parse`. This function has the same parameters like the old one `icinga2_attributes`.
+
+### What's new in version 3.2.0
+
+Important: Read the Known Issues section about [Environment Bleed](#environment-bleed) at the end of this document!
+
+Add Icinga 2.13.0 support includes the new influxdb2 feature.
+
+Some parameters for secrets like passwords or tokens in features or objects now allow the datatype 'Sensetive'.
+Strings set to constants or as custom variables can also use Sensitive. They are not parsed by the simple config
+parser. When you're using hashes or arrays in constants or custom variables the whole data structure can be
+secured by Sensitive.
+
+
+### What's new in version 3.0.0
+
+* The current version now uses the icinga :: repos class from the new `icinga` module for the configuration of
+repositories including EPEL on RedHat and Backports on Debian. (see https://github.com/icinga/puppet-icinga)
+* `manage_repos` will replace `manage_repo` in the future
+* `manage_packages` will replace `manage_package` in the future
+* Since Icinga v2.12.0 the fingerprint to validate certificates is a sha256 instead of a sha1. Both is supported now.
 
 ## Module Description
 
@@ -84,39 +76,35 @@ available in Icinga 2 can be enabled and configured with this module.
 
 This module supports:
 
-* [puppet] >= 4.10 < 7.0.0
+* [puppet] >= 4.10 < 8.0.0
 
 And depends on:
 
-* [puppetlabs/stdlib] >= 4.16.0 < 6.0.0
+* [puppetlabs/stdlib] >= 5.0.0 < 8.0.0
     * If Puppet 6 is used a stdlib 5.1 or higher is required, see https://github.com/Icinga/puppet-icinga2/issues/505
-* [puppetlabs/concat] >= 2.1.0 < 6.0.0
-
-Depending on your setup following modules may also be required:
-
-* [puppetlabs/apt] >= 6.0.0
-* [puppetlabs/chocolatey] >= 3.1.0
-* [puppet/zypprepo] >= 2.2.1
-
+* [puppetlabs/concat] >= 2.1.0 < 8.0.0
+* [icinga/icinga] >= 1.0.0 < 3.0.0
+    * needed if `manage_repos` is set to `true`
+* [puppetlabs/chocolatey]
+    * needed if agent os is windows and if either `manage_package` or `manage_packages` is set to `true`
 ### Limitations
 
+The use of Icinga's own CA is recommended. If you still want to use the Puppet certificates, please note that Puppet 7 uses an intermediate CA by default and Icinga cannot handle its CA certificate, see [Icinga Issue](https://github.com/Icinga/icinga2/pull/8859).
+
 This module has been tested on:
 
-* Ruby >= 1.9
-* Debian 8, 9
-* Ubuntu 16.04, 18.04
-* CentOS/RHEL 6, 7
-    * **Caution:** CentOS 6 comes with Ruby 1.8.7 by default
-* OracleLinux 7
-* FreeBSD 10, 11
-* SLES 12
-* Windows Server 2012 R2, 2016
+* Debian 10, 11
+* Ubuntu 18.04, 20.04
+* CentOS/RHEL 7, 8
+* AlmaLinux/Rocky 8
+* Fedora 32
+* Windows Server 2019
 
 Other operating systems or versions may work but have not been tested.
 
 ## Usage
 
-### Installing Icinga 2
+### Installing Icinga
 
 The default class `icinga2` installs and configures a basic installation of Icinga 2. The features `checker`, `mainlog`
 and `notification` are enabled by default.
@@ -124,46 +112,22 @@ and `notification` are enabled by default.
 By default, your distribution's packages are used to install Icinga 2. On Windows systems we use the [Chocolatey]
 package manager.
 
-Use the `manage_repo` parameter to configure the official [packages.icinga.com] repositories.
+Use the `manage_repos` parameter to configure repositories by default the official and stable [packages.icinga.com]. To configure your own
+repositories, or use the official testing or nightly snapshot stage, see https://github.com/icinga/puppet-icinga.
 
 ``` puppet
 class { '::icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 ```
 
-*Info:* If you are using the [Icinga Web 2](https://github.com/Icinga/puppet-icingaweb2/) Puppet module on the same
-server, make sure to disable the repository management for one of the modules!
-
-Since version 2.0.0 you're able via hiera to overload which repository will be used for installation, e.g. for icinga on YUM based operating systems:
-
-``` puppet
----
-icinga2::repo:
-  baseurl: 'http://myhost.example.org/epel/%{facts.os.release.major}/release/'
-  proxy: http://proxy.example.org:3128
-```
-
-You can also change or set every other parameter of the underlying resources, supported for operating system families:
-
-* RedHat, resource type: yumrepo
-* Debian, define resource: apt::source
-* SuSE, resource type: zypprepo
-    * a workaround is implemented to use a parameter proxy also to download the gpg key thru a proxy, see https://github.com/Icinga/puppet-icinga2/issues/397.
-
 If you want to manage the version of Icinga 2, you have to disable the package management of this module and handle
-packages in your own Puppet code. The attribute manage_repo is also disabled automattically and you have to manage
-a repository within icinga in front of the package resource, i.e. for a RedHat system:
+packages in your own Puppet code. The attribute `manage_repos` is disabled by default and you have to manage
+a repository within icinga in front of the package resource. You can combine this one with the section before about repositories.
 
 ``` puppet
-yumrepo { 'icinga-stable-release':
-  baseurl  => "http://packages.icinga.com/epel/${::operatingsystemmajrelease}/release/",
-  descr    => 'ICINGA (stable release for epel)',
-  enabled  => 1,
-  gpgcheck => 1,
-  gpgkey   => 'http://packages.icinga.com/icinga.key',
-  before   => Package['icinga2'],
-}
+# class of extra module icinga/icinga
+include ::icinga::repos
 
 package { 'icinga2':
   ensure => latest,
@@ -171,100 +135,15 @@ package { 'icinga2':
 }
 
 class { '::icinga2':
-  manage_package => false,
+  manage_packages => false,
 }
 ```
 
-Note: Be careful with this option: Setting `manage_package` to false means that this module will not install any package at
+Note: Be careful with this option: Setting `manage_packages` to false means that this module will not install any package at
 all, including IDO packages!
 
-### Enabling Features
-
-There are two options how you can enable features:
-
-A default set of features is set with the `features` parameter in the `::icinga2` class:
-
-``` puppet
-class { '::icinga2':
-  manage_repo => true,
-  features    => ['checker', 'mainlog', 'command'],
-}
-```
-
-To enable a feature and change its configuration, declare the specified feature class:
-
-``` puppet
-class { '::icinga2::feature::graphite':
-  host                   => '10.10.0.15',
-  port                   => 2003,
-  enable_send_thresholds => true,
-  enable_send_metadata   => true,
-}
-```
-
-Make sure that you enable features **either** in the `::icinga2` class **or** by declaring the feature class.
-
-### Setting up Icinga IDO
-
-The IDO feature can be enabled either in combination with MySQL or PostgreSQL.
-
-Depending on your database you need to enable the feature `icinga2::feature::idomysql` or `icinga2::feature::idopgsql`.
-
-Both features are capable of importing the base schema into the database, however this is disabled by default.
-Updating the database schema to another version is currently not supported.
-
-The IDO features require a pre-existing database and a user with permissions to create schema and edit data.
-
-#### MySQL
-
-When using MySQL we recommend the [puppetlabs/mysql] Puppet module to install the database server, create a database
-and manage user permissions. Here's an example how you create a MySQL database with the corresponding user with
-permissions by using the [puppetlabs/mysql] module:
-
-``` puppet
-include ::icinga2
-include ::mysql::server
-
-mysql::db { 'icinga2':
-  user     => 'icinga2',
-  password => 'supersecret',
-  host     => '127.0.0.1',
-  grant    => ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'DROP', 'CREATE VIEW', 'CREATE', 'INDEX', 'EXECUTE', 'ALTER'],
-}
-
-class{ '::icinga2::feature::idomysql':
-  user          => 'icinga2',
-  password      => 'supersecret',
-  database      => 'icinga2',
-  import_schema => true,
-  require       => Mysql::Db['icinga2'],
-}
-```
-
-#### PostgreSQL
-
-For PostgreSQL we recommend the [puppetlabs/puppetlabs-postgresql] module. You can install the server, create databases
-and manage user permissions with the module. Here's an example on how to use it in combination with Icinga 2:
-
-``` puppet
-include ::icinga2
-include ::postgresql::server
-
-postgresql::server::db { 'icinga2':
-  user     => 'icinga2',
-  password => postgresql_password('icinga2', 'supersecret'),
-}
-
-class{ '::icinga2::feature::idopgsql':
-  user          => 'icinga2',
-  password      => 'supersecret',
-  database      => 'icinga2',
-  import_schema => true,
-  require       => Postgresql::Server::Db['icinga2'],
-}
-```
 
-### Clustering Icinga 2
+### Clustering Icinga
 
 Icinga 2 can run in three different roles:
 
@@ -288,21 +167,22 @@ templates, and all features of a typical master are enabled.
 ``` puppet
 class { '::icinga2':
   confd     => false,
-  features  => ['checker','mainlog','notification','statusdata','compatlog','command'],
   constants => {
-    'ZoneName' => 'master',
+    'ZoneName'   => 'master',
+    'TicketSalt' => '5a3d695b8aef8f18452fc494593056a4',
   },
 }
 
 class { '::icinga2::feature::api':
+  pki             => 'none',
   accept_commands => true,
-  # when having multiple masters, you should enable:
-  # accept_config => true,
+  # when having multiple masters, you have to enable:
+  accept_config => true,
   endpoints       => {
     'master.example.org'    => {},
     'satellite.example.org' => {
       'host' => '172.16.2.11'
-    }
+    },
   },
   zones           => {
     'master' => {
@@ -315,6 +195,9 @@ class { '::icinga2::feature::api':
   }
 }
 
+# to enable a CA on this instance you have to declare. Only one instance is allowed to be a CA:
+include ::icinga2::pki::ca
+
 icinga2::object::zone { 'global-templates':
   global => true,
 }
@@ -332,6 +215,7 @@ a satellite or client below in the hierarchy. As parent acts either the master z
 ``` puppet
 class { '::icinga2':
   confd     => false,
+  # setting dedicated feature list to disable notification
   features  => ['checker','mainlog'],
   constants => {
     'ZoneName' => 'dmz',
@@ -341,6 +225,10 @@ class { '::icinga2':
 class { '::icinga2::feature::api':
   accept_config   => true,
   accept_commands => true,
+  ca_host         => '172.16.1.11',
+  ticket_salt     => '5a3d695b8aef8f18452fc494593056a4',
+  # to increase your security set fingerprint to validate the certificate of ca_host
+  # fingerprint     => 'D8:98:82:1B:14:8A:6A:89:4B:7A:40:32:50:68:01:D8:98:82:1B:14:8A:6A:89:4B:7A:40:32:99:3D:96:72:72',
   endpoints       => {
     'satellite.example.org' => {},
     'master.example.org'    => {
@@ -363,7 +251,7 @@ icinga2::object::zone { 'global-templates':
 }
 ```
 
-#### Client
+#### Agent
 
 Icinga 2 runs as a client usually on each of your servers. It receives config or commands from a satellite or master
 zones and runs the checks that have to be executed locally.
@@ -373,18 +261,20 @@ The client is connected to the satellite, which is the direct parent zone.
 ``` puppet
 class { '::icinga2':
   confd     => false,
-  features  => ['checker','mainlog'],
+  features  => ['mainlog'],
 }
 
 class { '::icinga2::feature::api':
-  pki             => 'none',
   accept_config   => true,
   accept_commands => true,
+  ticket_salt     => '5a3d695b8aef8f18452fc494593056a4',
+  # to increase your security set fingerprint to validate the certificate of ca_host
+  # fingerprint     => 'D8:98:82:1B:14:8A:6A:89:4B:7A:40:32:50:68:01:D8:98:82:1B:14:8A:6A:89:4B:7A:40:32:99:3D:96:72:72',
   endpoints       => {
     'NodeName'              => {},
     'satellite.example.org' => {
       'host' => '172.16.2.11',
-    }
+    },
   },
   zones           => {
     'ZoneName' => {
@@ -393,7 +283,7 @@ class { '::icinga2::feature::api':
     },
     'dmz'      => {
       'endpoints' => ['satellite.example.org'],
-    }
+    },
   }
 }
 
@@ -402,6 +292,10 @@ icinga2::object::zone { 'global-templates':
 }
 ```
 
+The parameter `fingerprint` is optional and new since v2.1.0. It's used to validate the certificate of the CA host.
+You can get the fingerprint via `openssl x509 -noout -fingerprint -sha256 -inform pem -in master.crt` on the master host. (Icinga2 versions before 2.12.0 require '-sha1' as digest algorithm.)
+
+
 ### Config Objects
 
 With this module you can create almost every object that Icinga 2 knows about. When creating objects some parameters are
@@ -443,95 +337,17 @@ icinga2::object::hostgroup { 'monitoring-hosts':
 }
 ```
 
-#### Parsing Configuration
-
-To generate a valid Icinga 2 configuration all object attributes are parsed. This simple parsing algorithm takes a
-decision for each attribute, whether part of the string is to be quoted or not, and how an array or dictionary is to be
-formatted.
-
-Parsing of a single attribute can be disabled by tagging it with -: at the front of the string.
-```
-   attr => '-:"unparsed string with quotes"'
-```
-An array, a hash or a string can be assigned to an object attribute. True and false are also valid values.
-
-Hashes and arrays are created recursively, and all parts – such as single items of an array, keys and its values
-are parsed separately as strings.
-
-Strings are parsed in chunks, by splitting the original string into separate substrings at specific keywords (operators)
-such as `+`, `-`, `in`, `&&`, `||`, etc.
-
-**NOTICE**: This splitting only works for keywords that are surrounded by whitespace, e.g.:
-```
-   attr => 'string1 + string2 - string3'
-```
-
-The algorithm will loop over the parameter and start by splitting it into 'string1' and 'string2 - string3'.
-'string1' will be passed to the sub function 'value_types' and then the algorithm will continue parsing the rest of the
-string ('string2 - string3'), splitting it, passing it to value_types, etc.
-
-Brackets are parsed for expressions:
-```
-  attr => '3 * (value1 - value2) / 2'
-```
-
-The parser also detects function calls and will parse all parameters separately.
-```
-  attr => 'function(param1, param2, ...)'
-```
-
-True and false can be used as either booleans or strings.
-```
-  attrs => true or  attr => 'true'
-```
-
-In Icinga you can write your own lambda functions with {{ ... }}. For Puppet use:
-```
-  attrs => '{{ ... }}'
-```
-
-The parser analyzes which parts of the string have to be quoted and which do not.
-
-As a general rule, all fragments are quoted except for the following:
-
-* Boolean: `true`, `false`
-* Numbers: `3` or `2.5`
-* Time Intervals: `3m` or `2.5h`  (s = seconds, m = minutes, h = hours, d = days)
-* Functions: `{{ ... }}` or function `()` `{}`
-* All constants, which are declared in the constants parameter in main class `icinga2`
-    * `NodeName`
-* Names of attributes that belong to the same type of object:
-    * e.g. `name` and `check_command` for a host object
-* All attributes or variables (custom attributes) from the host, service or user contexts:
-    * `host.name`, `service.check_command`, `user.groups`, ...
-
-###### What isn't supported?
-
-It's not currently possible to use arrays or dictionaries in a string, like
-```
-  attr => 'array1 + [ item1, item2, ... ]'
-```
-
-Assignments other than simple attribution are not currently possible either, e.g. building something like
-```
-  vars += config
-```
-but you can use the following instead:
-```
-  vars = vars + config
-```
-
-#### Reading objects from hiera data
+### Reading objects from hiera
 
-The following example is for puppet 4 and higher. It shows how icinga2 objects can be read from
+The following example shows how icinga2 objects can be read from
 a hiera datastore. See also examples/objects_from_hiera.pp.
 
 ```
 class { 'icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 
-$defaults = lookup('monitoring::defaults')
+$defaults = lookup('monitoring::defaults', undef, undef, {})
 
 lookup('monitoring::objects').each |String $object_type, Hash $content| {
   $content.each |String $object_name, Hash $object_config| {
@@ -587,7 +403,7 @@ targets a host object. All other objects need to explicitly set an
 
 Apply a SSH service to all Linux hosts:
 
-``` puppet
+```
 icinga2::object::service { 'SSH':
   target        => '/etc/icinga2/conf.d/test.conf',
   apply         => true,
@@ -600,7 +416,7 @@ icinga2::object::service { 'SSH':
 
 Apply notifications to services:
 
-``` puppet
+```
 icinga2::object::notification { 'testnotification':
   target       => '/etc/icinga2/conf.d/test.conf',
   apply        => true,
@@ -612,7 +428,7 @@ icinga2::object::notification { 'testnotification':
 ```
 
 Assign all Linux hosts to a hostgroup:
-``` puppet
+```
 icinga2::object::hostgroup { 'monitoring-hosts':
   display_name => 'Linux Servers',
   groups       => [ 'linux-servers' ],
@@ -622,7 +438,7 @@ icinga2::object::hostgroup { 'monitoring-hosts':
 ```
 
 A loop to create HTTP services for all vHosts of a host object:
-``` puppet
+```
 icinga2::object::service { 'HTTP':
   target        => '/etc/icinga2/conf.d/http.conf',
   apply         => 'http_vhost => config in host.vars_http_vhost',
@@ -632,1795 +448,224 @@ icinga2::object::service { 'HTTP':
 }
 ```
 
-### CA and Certificates
+### Custom Configuration
 
-Handling the CA and certificates is an important part of Icinga 2, because the communication between Icinga processes
-requires SSL/TLS client certificates. This module offers multiple choices to configure this.
-
-#### CA on your Icinga Master
-
-One of your Icinga masters needs to behave as a CA. With the class
-`icinga2::pki::ca` you can do the following to fulfill this requirement:
-
-* Use the `icinga2` CLI to generate a complete new CA
-``` puppet
-include ::icinga2
-class { '::icinga2::pki::ca':
-}
-```
+Sometimes it's necessary to cover very special configurations, that you cannot handle with this module. In this case you can use the `icinga2::config::file` tag on your file resource. The module collects all file resource types with this tag and triggers a reload of Icinga 2 on a file change.
 
-* Set a custom content of the CA certificate and key
-``` puppet
-include ::icinga2
-class { '::icinga2::pki::ca':
-  ca_cert => '-----BEGIN CERTIFICATE----- ...',
-  ca_key  => '-----BEGIN RSA PRIVATE KEY----- ...',
-}
 ```
-
-* Transfer a CA certificate and key from an existing CA by using the file resource:
-``` puppet
 include ::icinga2
-file { '/var/lib/icinga2/ca/ca.crt':
-  source => '...',
-  tag    => 'icinga2::config::file',
-}
 
-file { '/var/lib/icinga2/ca/ca.key':
+file { '/etc/icinga2/conf.d/for-loop.conf':
+  ensure => file,
   source => '...',
   tag    => 'icinga2::config::file',
 }
 ```
 
-* Create a new CA with the `icinga2` CLI command and a certificate signed by this new CA. This is useful especially when
-setting up a new Icinga 2 master.
-```puppet
-class { '::icinga2':
-  constants => {
-    'TicketSalt'   => '5a3d695b8aef8f18452fc494593056a4',
-  }
-}
+## How Configuration is parsed
 
-class { '::icinga2::pki::ca': }
+To generate a valid Icinga 2 configuration all object attributes are parsed. This simple parsing algorithm takes a
+decision for each attribute, whether part of the string is to be quoted or not, and how an array or dictionary is to be
+formatted.
 
-class { '::icinga2::feature::api':
-  pki             => 'none',
-  endpoints       => {
-    'localhost' => {
-      'host' => 'localhost',
-    }
-  },
-  zones           => {
-    'master' => {
-      'endpoints' => ['localhost']
-    }
-  }
-}
+Parsing of a single attribute can be disabled by tagging it with -: at the front of the string.
 ```
+   attr => '-:"unparsed string with quotes"'
+```
+An array, a hash or a string can be assigned to an object attribute. True and false are also valid values.
 
-If you are looking for an option to use your Puppet CA, have a look at the
-[Client/Satellite Certificates](#clientsatellite-certificates) section.
-
-#### Client/Satellite Certificates
+Hashes and arrays are created recursively, and all parts – such as single items of an array, keys and its values
+are parsed separately as strings.
 
-In addition to the master, each client and satellite needs valid certificates to communicate with other Icinga 2
-instances. This module offers following options to create these certificates:
+Strings are parsed in chunks, by splitting the original string into separate substrings at specific keywords (operators)
+such as `+`, `-`, `in`, `&&`, `||`, etc.
 
-* Use Puppet's CA and its client certificates. This is convenient since you don't need to maintain an additional CA.
-``` puppet
-include ::icinga2::feature::api
+**NOTICE**: This splitting only works for keywords that are surrounded by whitespace, e.g.:
 ```
-
-* Use a custom function implemented in this module to generate a certificate. This feature will do the following:
-  * Generate a key and certificate based on the FQDN of the host
-  * Save the certificate of another Icinga 2 instance, usually the Icinga master where your Icinga CA is located
-  * Generate a ticket based on the TicketSalt
-  * Request a signed certificate at your Icinga CA
-
-``` puppet
-class { '::icinga2::feature::api':
-  pki             => 'icinga2',
-  ca_host         => 'icinga2-master.example.com',
-  ticket_salt     => '5a3d695b8aef8f18452fc494593056a4',
-  accept_config   => true,
-  accept_commands => true,
-  endpoints       => {
-    'NodeName'                   => {},
-    'icinga2-master.example.com' => {
-      'host' => '192.168.56.103',
-    }
-  },
-  zones           => {
-    'NodeName' => {
-      'endpoints' => ['NodeName'],
-      'parent'    => 'master',
-    },
-    'master' => {
-      'endpoints' => ['icinga2-master.example.com']
-    }
-  }
-}
+   attr => 'string1 + string2 - string3'
 ```
 
-* Use custom file resources to transfer your own certificate and key
-``` puppet
-class { '::icinga2::feature::api':
-  pki => 'none',
-}
-
-file { "/var/lib/icinga2/certs/${::fqdn}.crt":
-  ensure => file,
-  tag    => 'icinga2::config::file',
-  source => "puppet:///modules/profiles/certificates/${::fqdn}.crt",
-}
+The algorithm will loop over the parameter and start by splitting it into 'string1' and 'string2 - string3'.
+'string1' will be passed to the sub function 'value_types' and then the algorithm will continue parsing the rest of the
+string ('string2 - string3'), splitting it, passing it to value_types, etc.
 
-file { "/var/lib/icinga2/certs/${::fqdn}.key":
-  ensure => file,
-  tag    => 'icinga2::config::file',
-  source => "puppet:///modules/profiles/private_keys/${::fqdn}.key",
-}
+Brackets are parsed for expressions:
 ```
-
-* Set a custom content for the certificate and key
-
-``` puppet
-class { '::icinga2::feature::api':
-  pki         => 'none',
-  ssl_cacert  => '-----BEGIN CERTIFICATE----- ...',
-  ssl_key     => '-----BEGIN RSA PRIVATE KEY----- ...',
-  ssl_cert    => '-----BEGIN CERTIFICATE----- ...',
-}
+  attr => '3 * (value1 - value2) / 2'
 ```
 
-* Fine tune TLS / SSL settings
-
-``` puppet
-class { '::icinga2::feature::api':
-  ssl_protocolmin => 'TLSv1.2',
-  ssl_cipher_list => 'HIGH:MEDIUM:!aNULL:!MD5:!RC4',
-}
+The parser also detects function calls and will parse all parameters separately.
+```
+  attr => 'function(param1, param2, ...)'
 ```
 
-### Custom configuration
-
-Sometimes it's necessary to cover very special configurations, that you cannot handle with this module. In this case you
-can use the `icinga2::config::file` tag on your file resource. The module collects all file resource types with this
-tag and triggers a reload of Icinga 2 on a file change.
-
-``` puppet
-include ::icinga2
-file { '/etc/icinga2/conf.d/for-loop.conf':
-  ensure => file,
-  source => '...',
-  tag    => 'icinga2::config::file',
-}
+True and false can be used as either booleans or strings.
+```
+  attrs => true or  attr => 'true'
 ```
 
-If you want to add custom configuration fragments to existing config files, you can do this with
-`icinga2::config::fragment`. It adds content into a specified target to the position you set in the order parameter.
-You can use also Puppet templates to set the content of the config fragment.
+In Icinga you can write your own lambda functions with {{ ... }}. For Puppet use:
+```
+  attrs => '{{ ... }}'
+```
 
-For example, you can add custom functions to existing config files:
+The parser analyzes which parts of the string have to be quoted and which do not.
 
-``` puppet
-include ::icinga2
+As a general rule, all fragments are quoted except for the following:
 
-icinga2::object::service { 'load':
-  display_name  => 'Load',
-  apply         => true,
-  check_command => 'load',
-  assign        => ['vars.os == Linux'],
-  target        => '/etc/icinga2/conf.d/service_load.conf',
-  order         => 30,
-}
+* Boolean: `true`, `false`
+* Numbers: `3` or `2.5`
+* Time Intervals: `3m` or `2.5h`  (s = seconds, m = minutes, h = hours, d = days)
+* Functions: `{{ ... }}` or function `()` `{}`
+* All constants, which are declared in the constants parameter in main class `icinga2`
+    * `NodeName`
+* Names of attributes that belong to the same type of object:
+    * e.g. `name` and `check_command` for a host object
+* All attributes or variables (custom attributes) from the host, service or user contexts:
+    * `host.name`, `service.check_command`, `user.groups`, ...
 
-icinga2::config::fragment { 'load-function':
-  target => '/etc/icinga2/conf.d/service_load.conf',
-  order => 10,
-  content => 'vars.load_wload1 = {{
-    if (get_time_period("backup").is_inside) {
-      return 20
-    } else {
-      return 5
-    }
-  }}',
-}
+Assignment with += and -=:
+ 
+Now it's possible to build an Icinga DSL code snippet like 
 ```
-
-## Reference
-
-- [**Public classes**](#public-classes)
-    - [Class: icinga2](#class-icinga2)
-    - [Class: icinga2::feature::checker](#class-icinga2featurechecker)
-    - [Class: icinga2::feature::mainlog](#class-icinga2featuremainlog)
-    - [Class: icinga2::feature::notification](#class-icinga2featurenotification)
-    - [Class: icinga2::feature::command](#class-icinga2featurecommand)
-    - [Class: icinga2::feature::compatlog](#class-icinga2featurecompat)
-    - [Class: icinga2::feature::graphite](#class-icinga2featuregraphite)
-    - [Class: icinga2::feature::livestatus](#class-icinga2featurelivestatus)
-    - [Class: icinga2::feature::opentsdb](#class-icinga2featureopentsdb)
-    - [Class: icinga2::feature::perfdata](#class-icinga2featureperfdata)
-    - [Class: icinga2::feature::statusdata](#class-icinga2featurestatusdata)
-    - [Class: icinga2::feature::syslog](#class-icinga2featuresyslog)
-    - [Class::icinga2::feature::debuglog](#class-icinga2featuredebuglog)
-    - [Class::icinga2::feature::elasticsearch](#class-icinga2featureelasticsearch)
-    - [Class::icinga2::feature::gelf](#class-icinga2featuregelf)
-    - [Class::icinga2::feature::influxdb](#class-icinga2featureinfluxdb)
-    - [Class::icinga2::feature::api](#class-icinga2featureapi)
-    - [Class::icinga2::feature::idopgsql](#class-icinga2featureidopgsql)
-    - [Class::icinga2::feature::idomysql](#class-icinga2featureidomysql)
-    - [Class::icinga2::pki::ca](#class-icinga2pkica)
-- [**Private classes**](#private-classes)
-    - [Class: icinga2::repo](#class-icinga2repo)
-    - [Class: icinga2::install](#class-icinga2install)
-    - [Class: icinga2::config](#class-icinga2config)
-    - [Class: icinga2::service](#class-icinga2service)
-- [**Public defined types**](#public-defined-types)
-    - [Defined type: icinga2::object::endpoint](#defined-type-icinga2objectendpoint)
-    - [Defined type: icinga2::object::zone](#defined-type-icinga2objectzone)
-    - [Defined type: icinga2::object::apiuser](#defined-type-icinga2objectapiuser)
-    - [Defined type: icinga2::object::checkcommand](#defined-type-icinga2objectcheckcommand)
-    - [Defined type: icinga2::object::host](#defined-type-icinga2objecthost)
-    - [Defined type: icinga2::object::hostgroup](#defined-type-icinga2objecthostgroup)
-    - [Defined type: icinga2::object::dependency](#defined-type-icinga2objectdependency)
-    - [Defined type: icinga2::object::timeperiod](#defined-type-icinga2objecttimeperiod)
-    - [Defined type: icinga2::object::usergroup](#defined-type-icinga2objectusergroup)
-    - [Defined type: icinga2::object::user](#defined-type-icinga2objectuser)
-    - [Defined type: icinga2::object::notificationcommand](#defined-type-icinga2objectnotificationcommand)
-    - [Defined type: icinga2::object::notification](#defined-type-icinga2objectnotification)
-    - [Defined type: icinga2::object::service](#defined-type-icinga2objectservice)
-    - [Defined type: icinga2::object::servicegroup](#defined-type-icinga2objectservicegroup)
-    - [Defined type: icinga2::object::scheduleddowntime](#defined-type-icinga2objectscheduleddowntime)
-    - [Defined type: icinga2::object::eventcommand](#defined-type-icinga2objecteventcommand)
-    - [Defined type: icinga2::object::checkresultreader](#defined-type-icinga2objectcheckresultreader)
-    - [Defined type: icinga2::config::fragment](#defined-type-icinga2configfragment)
-- [**Private defined types**](#private-defined-types)
-    - [Defined type: icinga2::feature](#defined-type-icinga2feature)
-    - [Defined type: icinga2::object](#defined-type-icinga2object)
-
-### Public Classes
-
-#### Class: `icinga2`
-
-The default class of this module. It handles the basic installation and configuration of Icinga 2. When you declare this
-class, Puppet will do the following:
-
-* Install Icinga 2
-* Place a default configuration for the Icinga 2 daemon
-* Keep the default configuration of the Icinga 2 package
-* Start Icinga 2 and enable the service
-
-This class can be declared without adjusting any parameter:
-
-``` puppet
-class { '::icinga2': }
+  vars += config
 ```
-
-**Parameters within `icinga2`:**
-
-##### `ensure`
-Defines if the service should be `running` or `stopped`. Defaults to `running`
-
-##### `enable`
-If set to `true` the Icinga 2 service will start on boot. Defaults to `true`.
-
-##### `manage_repo`
-When set to `true` this module will install the [packages.icinga.com] repository. With this official repo
-you can get the latest version of Icinga. When set to `false` the operating systems default will be used. As the Icinga
-Project does not offer a [Chocolatey] repository, you will get a warning if you enable this parameter on Windows.
-Default is `false`. NOTE: will be ignored if manage_package is set to false.
-
-##### `manage_package`
-If set to false packages aren't managed. Defaults to `true`.
-
-##### `manage_service`
-Lets you decide if the Icinga 2 daemon should be reloaded when configuration files have changed. Defaults to `true`
-
-##### `features`
-A list of features to enable by default. Defaults to `[checker, mainlog, notification]`
-
-##### `purge_features`
-Define if configuration files for features not managed by Puppet should be purged. Defaults to true.
-
-##### `constants`
-Hash of constants. Defaults are set in the params class. Your settings will be merged with the defaults.
-
-##### `plugins`
-A list of the ITL plugins to load. Defaults to `[ 'plugins', 'plugins-contrib', 'windows-plugins', 'nscp' ]`.
-
-##### `confd`
-`conf.d` is the directory where Icinga 2 stores its object configuration by default. To disable it,
-set this parameter to `false`. By default this parameter is `true`. It's also possible to assign your
-own directory. This directory and must be managed outside of this module as file resource
-with tag icinga2::config::file.
-
-#### Class: `icinga2::feature::checker`
-Enables or disables the `checker` feature.
-
-**Parameters of `icinga2::feature::checker`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `checker` should be enabled. Defaults to `present`.
-
-##### `concurrent_checks`
-The maximum number of concurrent checks. Defaults to `512`.
-
-#### Class: `icinga2::feature::mainlog`
-Enables or disables the `mainlog` feature.
-
-**Parameters of `icinga2::feature::mainlog`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `mainlog` should be enabled. Defaults to `present`.
-
-##### `severity`
-Sets the severity of the `mainlog` feature. Can be set to:
-
-* `information`
-* `notice`
-* `warning`
-* `debug`
-
-Defaults to `information`
-
-##### `path`
-Absolute path to the logging file. Default depends on platform:
-
-* Linux: `/var/log/icinga2/icinga2.log`
-* Windows: `C:/ProgramData/icinga2/var/log/icinga2/icinga2.log`
-
-#### Class: `icinga2::feature::notification`
-Enables or disables the `notification` feature.
-
-**Parameters of `icinga2::feature::notification`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `notification` should be enabled. Defaults to `present`.
-
-##### `enable_ha`
-Notifications are load-balanced amongst all nodes in a zone. By default this functionality is enabled. If your nodes should send out notifications independently from any other nodes (this will cause duplicated notifications if not properly handled!), you can set enable_ha to false.
-
-#### Class: `icinga2::feature::command`
-Enables or disables the `command` feature. Notice: The feature is deprecated and will be removed in Icinga 2 2.11.0.
-
-**Parameters of `icinga2::feature::command`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `command` should be enabled. Defaults to `present`.
-
-##### `commandpath`
-Absolute path to the command pipe. Default depends on platform:
-
-* Linux: `/var/run/icinga2/cmd/icinga2.cmd`
-* Windows: `C:/ProgramData/icinga2/var/run/icinga2/cmd/icinga2.cmd`
-
-#### Class: `icinga2::feature::compatlog`
-Enables or disables the `compatlog` feature.
-
-**Parameters of `icinga2::feature::compatlog`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `compatlog` should be enabled. Defaults to `present`.
-
-##### `commandpath`
-Absolute path to the command pipe. Default depends on platform:
-
-* Linux: `/var/run/icinga2/cmd/icinga2.cmd`
-* Windows: `C:/ProgramData/icinga2/var/run/icinga2/cmd/icinga2.cmd`
-
-##### `log_dir`
-Absolute path to the log directory. Default depends on platform:
-
-* Linux: `/var/log/icinga2/compat`
-* Windows: `C:/ProgramData/icinga2/var/log/icinga2/compat`
-
-##### `rotation_method`
-Sets how often should the log file be rotated. Valid options are:
-
-* `HOURLY`
-* `DAILY` (Icinga default)
-* `WEEKLY`
-* `MONTHLY`
-
-#### Class: `icinga2::feature::graphite`
-Enables or disables the `graphite` feature.
-
-**Parameters of `icinga2::feature::graphite`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `graphite` should be enabled. Defaults to `present`.
-
-##### `host`
-Graphite Carbon host address. Icinga defaults to `127.0.0.1`.
-
-##### `port`
-Graphite Carbon port. Icinga defaults to `2003`.
-
-##### `host_name_template`
-Template for metric path of hosts. Icinga defaults to `icinga2.$host.name$.host.$host.check_command$`.
-
-##### `service_name_template`
-Template for metric path of services. Icinga defaults to `icinga2.$host.name$.services.$service.name$.$service.check_command$`.
-
-##### `enable_send_thresholds`
-Send thresholds as metrics. Icinga defaults to false.
-
-##### `enable_send_metadata`
-Send metadata as metrics. Icinga defaults to false.
-
-#### Class: `icinga2::feature::livestatus`
-Enables or disables the `livestatus` feature.
-
-**Parameters of `icinga2::feature::livestatus`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `livestatus` should be enabled. Defaults to `present`.
-
-##### `socket_type`
-Specifies the socket type. Can be either 'tcp' or 'unix'. Icinga defaults to 'unix'
-
-##### `bind_host`
-IP address to listen for connections. Only valid when socket_type is `tcp`. Icinga defaults to `127.0.0.1`
-
-##### `bind_port`
-Port to listen for connections. Only valid when socket_type is `tcp`. Icinga defaults to `6558`
-
-##### `socket_path`
-Specifies the path to the UNIX socket file. Only valid when socket_type is `unix`. Default depends on platform:
-
-* Linux: `/var/run/icinga2/cmd/livestatus`
-* Windows: `C:/ProgramData/icinga2/var/run/icinga2/cmd/livestatus`
-
-##### `compat_log_path`
-Required for historical table queries. Requires `CompatLogger` feature to be enabled. Default depends platform:
-
-Linux: `var/icinga2/log/icinga2/compat`
-Windows: `C:/ProgramData/icinga2/var/log/icinga2/compat`
-
-#### Class: `icinga2::feature::opentsdb`
-Enables or disables the `opentsdb` feature.
-
-**Parameters of `icinga2::feature::opentsdb`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `opentsdb` should be enabled. Defaults to `present`.
-
-##### `host`
-OpenTSDB host address. Icinga defaults to `127.0.0.1`
-
-##### `port`
-OpenTSDB port. Icinga defaults to `4242`
-
-#### Class: `icinga2::feature::perfdata`
-Enables or disables the `perfdata` feature.
-
-**Parameters of `icinga2::feature::perfdata`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `perfdata` should be enabled. Defaults to `present`.
-
-##### `host_perfdata_path`
-Absolute path to the perfdata file for hosts. Default depends on platform:
-* Linux: `/var/spool/icinga2/host-perfdata`
-* Windows: `C:/ProgramData/icinga2/var/spool/icinga2/host-perfdata`
-
-##### `service_perfdata_path`
-Absolute path to the perfdata file for services. Default depends on platform:
-* Linux: `/var/spool/icinga2/service-perfdata`
-* Windows: `C:/ProgramData/icinga2/var/spool/icinga2/service-perfdata`
-
-###### `host_temp_path`
-Path to the temporary host file. Defaults depends on platform:
-* Linux: `/var/spool/icinga2/tmp/host-perfdata`
-* Windows: `C:/ProgramData/icinga2/var/spool/icinga2/tmp/host-perfdata`
-
-##### `service_temp_path`
-Path to the temporary service file. Defaults depends on platform:
-* Linux: `/var/spool/icinga2/tmp/host-perfdata`
-* Windows: `C:/ProgramData/icinga2/var/spool/icinga2/tmp/host-perfdata`
-
-##### `host_format_template`
-Host Format template for the performance data file. Icinga defaults to a template that's suitable for use with PNP4Nagios.
-
-##### `service_format_template`
-Service Format template for the performance data file. Icinga defaults to a template that's suitable for use with PNP4Nagios.
-
-##### `rotation_interval`
-Rotation interval for the files specified in `{host,service}_perfdata_path`. Can be written in minutes or seconds,
-i.e. `1m` or `15s`. Icinga defaults to `30s`
-
-#### Class: `icinga2::feature::statusdata`
-Enables or disables the `statusdata` feature. The feature is deprecated and will be removed in Icinga 2 2.11.0.
-
-**Parameters of `icinga2::feature::statusdata`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `statusdata` should be enabled. Defaults to `present`.
-
-##### `status_path`
-Absolute path to the status.dat file. Defaults depend on platform:
-* Linux: `/var/cache/icinga2/status.dat`
-* Windows: `C:/ProgramData/icinga2/var/cache/icinga2/status.dat`
-
-##### `object_path`
-Absolute path to the object.cache file. Defaults depend on platform:
-* Linux: `/var/cache/icinga2/object.cache`
-* Windows: `C:/ProgramData/icinga2/var/cache/icinga2/object.cache`
-
-##### `update_interval`
-Interval in seconds to update both status files. You can also specify it in minutes with the letter m or in seconds
-with s. Icinga defaults to `15s`
-
-#### Class: `icinga2::feature::syslog`
-Enables or disables the `syslog` feature.
-
-**Parameters of `icinga2::feature::syslog`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `syslog` should be enabled. Defaults to `present`.
-
-##### `severity`
-Set severity level for logging to syslog. Available options are:
-
-* `information`
-* `notice`
-* `warning` (Icinga default)
-* `critical`
-* `debug`
-
-##### `facility`
-Defines the facility to use for syslog entries. This can be a facility constant like FacilityDaemon.
-Available options are:
-
-* `FacilityAuth`
-* `FacilityAuthPriv`
-* `FacilityCron`
-* `FacilityDaemon`
-* `FacilityFtp`
-* `FacilityKern`
-* `FacilityLocal0`
-* `FacilityLocal1`
-* `FacilityLocal2`
-* `FacilityLocal3`
-* `FacilityLocal4`
-* `FacilityLocal5`
-* `FacilityLocal6`
-* `FacilityLocal7`
-* `FacilityLpr`
-* `FacilityMail`
-* `FacilityNews`
-* `FacilitySyslog`
-* `FacilityUser` (Icinga default)
-* `FacilityUucp`
-
-#### Class: `icinga2::feature::debuglog`
-Enables or disables the `debuglog` feature.
-
-**Parameters of `icinga2::feature::debuglog`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `debuglog` should be enabled. Defaults to `present`.
-
-##### `path`
-Absolute path to the log file. Default depends on platform:
-* Linux: `/var/log/icinga2/debug.log`
-* Windows: `C:/ProgramData/icinga2/var/log/icinga2/debug.log`
-
-
-#### Class: `icinga2::feature::elasticsearch`
-Enables or disables the `elasticsearch` feature.
-
-**Parameters of `icinga2::feature::elasticsearch`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `elasticsearch` should be enabled. Defaults to `present`.
-
-##### `host`
-Elasticsearch host address. Icinga defaults to `127.0.0.1`
-
-##### `port`
-Elasticsearch HTTP port. Icinga defaults to `9200`
-
-##### `index`
-Elasticsearch index name. Icinga defaults to `icinga2`
-
-##### `username`
-Elasticsearch user name.
-
-##### `password`
-Elasticsearch user password.
-
-##### `enable_ssl`
-Either enable or disable SSL. Other SSL parameters are only affected if this is set to `true`. Defaults to `false`.
-
-##### `ssl_ca_cert`
-CA certificate to validate the remote host.
-
-##### `ssl_cert`
-Host certificate to present to the remote host for mutual verification.
-
-##### `ssl_key`
-Host key to accompany the ssl_cert.
-
-##### `enable_send_perfdata`
-Whether to send check performance data metrics. Icinga defaults to `false`.
-
-##### `flush_interval`
-How long to buffer data points before transferring to Elasticsearch. Icinga defaults to `10s`
-
-##### `flush_threshold`
-How many data points to buffer before forcing a transfer to Elasticsearch. Icinga defaults to `1024`
-
-
-#### Class: `icinga2::feature::gelf`
-Enables or disables the `gelf` feature.
-
-**Parameters of `icinga2::feature::gelf`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `gelf` should be enabled. Defaults to `present`.
-
-##### `host`
-GELF receiver host address. Icinga defaults to `127.0.0.1`
-
-##### `port`
-GELF receiver port. Icinga defaults to `12201`
-
-##### `source`
-Source name for this instance. Icinga defaults to `icinga2`
-
-##### `enable_send_perfdata`
-Enable performance data for *CHECK RESULT* events. Icinga defaults to `false`.
-
-#### Class: `icinga2::feature::influxdb`
-Enables or disables the `influxdb` feature.
-
-**Parameters of `icinga2::feature::influxdb`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `influxdb` should be enabled. Defaults to `present`.
-
-##### `host`
-InfluxDB host address. Icinga defaults to `127.0.0.1`.
-
-##### `port`
-InfluxDB HTTP port. Icinga defaults to `8086`.
-
-##### `database`
-InfluxDB database name. Icinga defaults to `icinga2`.
-
-##### `username`
-InfluxDB user name.
-
-##### `password`
-InfluxDB user password.
-
-##### `enable_ssl`
-Either enable or disable SSL. Other SSL parameters are only affected if this is set to `true`. Icinga defaults to `false`.
-
-##### `ssl_ca_cert`
-CA certificate to validate the remote host.
-
-##### `ssl_cert`
-Host certificate to present to the remote host for mutual verification.
-
-##### `ssl_key`
-Host key to accompany the ssl_cert.
-
-##### `host_measurement`
-The value of this is used for the measurement setting in host_template. Icinga defaults to `$host.check_command$`.
-
-##### `host_tags`
-Tags defined in this hash will be set in the host_template.
-
-``` puppet
-class { '::icinga2::feature::influxdb':
-  host_measurement => '$host.check_command$',
-  host_tags        => { hostname => '$host.name$' },
-}
+simply use a string with the prefix '+ ', e.g.
 ```
-
-##### `service_measurement`
-The value of this is used for the measurement setting in host_template. Icinga defaults to `$service.check_command$`.
-
-##### `service_tags`
-Tags defined in this hash will be set in the service_template.
-
-``` puppet
-class { '::icinga2::feature::influxdb':
-  service_measurement => '$service.check_command$',
-  service_tags        => { hostname => '$host.name$', service => '$service.name$' },
-}
+  vars => '+ config',
 ```
+The blank between + and the proper string 'config' is imported for the parser because numbers 
+```
+  attr => '+ -14',
+```
+are also possible now. For numbers -= can be built, too:
+```
+  attr => '- -14',
+```
+Arrays can also be marked to merge with '+' or reduce by '-' as the first item of the array:
+```
+  attr => [ '+', item1, item2, ... ]
+```
+Result: attr += [ item1, item2, ... ]
+```
+  attr => [ '-', item1, item2, ... ]
+```
+Result: attr -= [ item1, item2, ... ]
 
-##### `enable_send_thresholds`
-Whether to send warn, crit, min & max tagged data. Icinga defaults to `false`.
-
-##### `enable_send_metadata`
-Whether to send check metadata e.g. states, execution time, latency etc. Icinga defaults to `false`.
-
-##### `flush_interval`
-How long to buffer data points before transferring to InfluxDB. Icinga defaults to `10s`.
-
-##### `flush_threshold`
-How many data points to buffer before forcing a transfer to InfluxDB. Icinga defaults to `1024`.
-
-
-#### Class: `icinga2::feature::api`
-Enables or disables the `api` feature.
-
-**Parameters of `icinga2::feature::api`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `api` should be enabled. Defaults to `present`.
-
-##### `pki`
-Provides multiple sources for the certificate and key.
-
-* `puppet` Copies the key, cert and CA cert from the Puppet ssl directory to the Icinga cert directory.
-  * Linux: `/var/lib/icinga2/certs`
-  * Windows: `C:/ProgramData/icinga2/var/lib/icinga2/certs`
-* `icinga2` Uses the icinga2 CLI to generate a Certificate and Key The ticket is generated on the Puppet master by using
-the configured 'ticket_salt' in a custom function.
-* `none` Does nothing and you either have to manage the files yourself as file resources or use the `ssl_key`, `ssl_cert`, `ssl_cacert` parameters.
-
-Defaults to `icinga2`
-
-##### `ssl_crl`
-Optional location of the certificate revocation list.
-
-##### `accept_config`
-Accept zone configuration. Defaults to `false`
-
-##### `accept_commands`
-Accept remote commands. Defaults to `false`
-
-##### `ca_host`
-This host will be connected to request the certificate. Set this if you use the `icinga2` pki.
-
-##### `ca_port`
-Port of the 'ca_host'. Defaults to `5665`
-
-##### `ticket_salt`
-Salt to use for ticket generation. The salt is stored to api.conf if `none` or `ca` is chosen for `pki`.
-Defaults to constant `TicketSalt`.
-
-##### `endpoints`
-Hash to configure endpoint objects. Defaults to `{ 'NodeName' => {} }`. `NodeName` is a Icinga 2 constant.
-
-##### `zones`
-Hash to configure zone objects. Defaults to `{ 'ZoneName' => {'endpoints' => ['NodeName']} }`. `ZoneName` and `NodeName`
-are Icinga 2 constants.
-
-##### `ssl_protocolmin`
-Minimal TLS version to require. Default undef (e.g. `TLSv1.2`)
-
-##### `ssl_cipher_list`
-List of allowed TLS ciphers, to fine tune encryption. Default undef (e.g. `HIGH:MEDIUM:!aNULL:!MD5:!RC4`)
-
-##### `bind_host`
-The IP address the api listener will be bound to. (e.g. 0.0.0.0)
-
-##### `bind_port`
-The port the api listener will be bound to. (e.g. 5665)
-
-##### `access_control_allow_origin`
-Specifies an array of origin URLs that may access the API.
-
-##### `access_control_allow_credentials`
-Indicates whether or not the actual request can be made using credentials. Defaults to `true`.
-
-##### `access_control_allow_headers`
-Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.
-Defaults to `Authorization`.
-
-##### `access_control_allow_methods`
-Used in response to a preflight request to indicate which HTTP methods can be used when making the actual request.
-Defaults to `GET, POST, PUT, DELETE`.
-
-#### Class: `icinga2::feature::idopgsql`
-Enables or disables the `ido-pgsql` feature.
-
-**Parameters of `icinga2::feature::idopgsql`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `ido-pgsql` should be enabled. Defaults to `present`.
-
-##### `host`
-PostgreSQL database host address. Defaults to `localhost`.
-
-##### `port`
-PostgreSQL database port. Defaults to `5432`.
-
-##### `user`
-PostgreSQL database user with read/write permission to the icinga database. Icinga defaults to `icinga`.
-
-##### `password`
-PostgreSQL database user's password.
-
-##### `database`
-PostgreSQL database name. Icinga defaults to `icinga`
-
-##### `table_prefix`
-PostgreSQL database table prefix. Icinga defaults to `icinga_`
-
-##### `import_schema`
-Whether to import the PostgreSQL schema or not. Defaults to `false`
-
-#### Class: `icinga2::feature::idomysql`
-Enables or disables the `gelf` feature.
-
-**Parameters of `icinga2::feature::idomysql`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature `ido-mysql` should be enabled. Defaults to `present`.
-
-##### `host`
-MySQL database host address. Icinga defaults to `localhost`.
-
-##### `port`
-MySQL database port. Icinga defaults to `3306`.
-
-##### `socket_path`
-MySQL socket path.
-
-##### `user`
-MySQL database user with read/write permission to the icinga database. Icinga defaults to `icinga`.
-
-##### `password`
-MySQL database user's password.
-
-##### `database`
-MySQL database name. Icinga defaults to `icinga`.
-
-##### `enable_ssl`
-Either enable or disable SSL. Other SSL parameters are only affected if this is set to 'true'.
-Icinga defaults to 'false'.
-
-##### `ssl_key`
-MySQL SSL client key file path. Only valid if ssl is set to `none`.
-
-##### `ssl_cert`
-MySQL SSL certificate file path. Only valid if ssl is set to `none`.
-
-##### `ssl_ca`
-MySQL SSL certificate authority certificate file path. Only valid if ssl is set to `none`.
-
-##### `ssl_capath`
-MySQL SSL trusted SSL CA certificates in PEM format directory path. Only valid if ssl is enabled.
-
-##### `ssl_cipher`
-MySQL SSL list of allowed ciphers. Only valid if ssl is enabled.
-
-##### `table_prefix`
-MySQL database table prefix. Icinga defaults to `icinga_`.
-
-##### `instance_name`
-Unique identifier for the local Icinga 2 instance. Icinga defaults to `default`.
-
-##### `instance_description`
-Description for the Icinga 2 instance.
-
-##### `enable_ha`
-Enable the high availability functionality. Only valid in a cluster setup. Icinga defaults to `true`.
-
-##### `failover_timeout`
-Set the fail-over timeout in a HA cluster. Must not be lower than 60s. Icinga defaults to `60s`.
-
-##### `cleanup`
-Hash with items for historical table cleanup.
-
-##### `categories`
-Array of information types that should be written to the database.
-
-##### `import_schema`
-Whether to import the MySQL schema or not. Defaults to `false`.
-
-#### Class: `icinga2::pki::ca`
-This class provides multiple ways to create the CA used by Icinga 2. By default it will create a CA by using the
-Icinga 2 CLI. If you want to use your own CA you will either have to transfer it by using a file resource or you can
-set the content of your certificate and key in this class.
-
-**Parameters of `icinga2::pki::ca`:**
-
-##### `ca_cert`
-Content of the CA certificate. If this is unset, a certificate will be generated with the Icinga 2 CLI.
-
-##### `ca_key`
-Content of the CA key. If this is unset, a key will be generated with the Icinga 2 CLI.
-
-### Private Classes
-
-#### Class: `icinga2::repo`
-Installs the [packages.icinga.com] repository. Depending on your operating system [puppetlabs/apt] or
-[puppetlabs/chocolatey] are required.
-
-#### Class: `icinga2::install`
-Handles the installation of the Icinga 2 package.
-
-#### Class: `icinga2::config`
-Installs basic configuration files required to run Icinga 2.
+That all works for attributes and custom attributes!
 
-#### Class: `icinga2::service`
-Starts/stops and enables/disables the service.
+Finally dictionaries can be merged when a key '+' is set:
+```
+  attr => {
+    '+'    => true,
+    'key1' => 'val1',
+  }
+```
+Result:
+```
+  attr += {
+    "key1" = "val1"
+  }
+```
+If 'attr' is a custom attribute this just works since level 3 of the dictionary:
+```
+  vars => {
+    'level1' => {
+      'level2' => {
+        'level3' => {
+          '+' => true,
+          ...
+        },
+      },
+    },
+  },
+```
+Parsed to:
+```
+  vars.level1["level2"] += level3
+```
+Now it's also possible to add multiple custom attributes:
+```
+  vars => [
+    {
+      'a' => '1',
+      'b' => '2', 
+    },
+    'config',
+    { 
+      'c' => { 
+        'd' => { 
+          '+' => true,
+          'e' => '5',
+        },
+      },
+    },
+  ],
+```
+And you'll get:
+```
+  vars.a = "1"
+  vars.b = "2"
+  vars += config
+  vars.c["d"] += {
+    "e" = "5"
+  }
+```
+Note: Using an Array always means merge '+=' all items to vars.
 
-### Public defined types
+##### What isn't supported?
 
-#### Defined type: `icinga2::object::endpoint`
+It's not currently possible to use dictionaries in a string WITH nested array or hash, like
+```
+  attr1 => 'hash1 + { item1 => value1, item2 => [ value1, value2 ], ... ]'
+  attr2 => 'hash2 + { item1 => value1, item2 => { ... },... }'
+```
 
-##### `ensure`
-Set to present enables the endpoint object, absent disables it. Defaults to present.
+## Reference
 
-##### `endpoint_name`
-Set the Icinga 2 name of the endpoint object. Defaults to title of the define resource.
+See [REFERENCE.md](https://github.com/Icinga/puppet-icinga2/blob/master/REFERENCE.md)
+
+## Known Issues
+
+### Environment Bleed
+
+Due to a long known bug in puppet known as environment bleed, upgrading this module from versions <3.2.0 to a version >=3.2.0 may present some issues. The handling of new datatypes introduced in the 3.2.0 update of this module may result in configuration file contents with the following line:
+```
+password = "Sensitive [value redacted]"
+```
+This may affect configuration files which are influenced by the following puppet code pieces:
+- icinga2::feature::api::ticket\_salt
+- icinga2::feature::api::ticket\_id
+- icinga2::feature::elasticsearch::password
+- icinga2::feature::icingadb::password
+- icinga2::feature::idomysql::password
+- icinga2::feature::idopgsql::password
+- icinga2::feature::influxdb::password
+- icinga2::feature::influxdb::basic\_auth['password']
+- icinga2::feature::influxdb2::auth\_token
+- icinga2::object::apiuser::password
+
+This may be fixed by doing the following steps in order:
+1. Update all environments containing this module to the latest version
+2. Regenerate all resource types in case you are using environment isolation
+	- 2.1 Delete old resource types for each environment
+		```
+		rm -rf /etc/puppetlabs/code/environment/xxx/.resource\_types/
+		```
+	- 2.2 Generate new resource types for each environment
+		```
+		puppet generate types --environment xxx
+		```
+3. Restart the puppetserver service
 
-##### `host`
-Optional. The IP address of the remote Icinga 2 instance.
+## Release Notes
 
-##### `port`
-The service name/port of the remote Icinga 2 instance. Defaults to 5665.
+When releasing new versions we refer to [SemVer 1.0.0] for version numbers. All steps required when creating a new
+release are described in [RELEASE.md](https://github.com/Icinga/puppet-icinga2/blob/master/RELEASE.md)
 
-##### `log_duration`
-Duration for keeping replay logs on connection loss. Defaults to `1d` (86400 seconds). Attribute is specified in seconds.
-If `log_duration` is set to `0`, replaying logs is disabled. You could also specify the value in human readable format
-like `10m` for 10 minutes or `1h` for one hour.
-
-##### `target`
-Destination config file to store in this object. File will be declared at the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 40.
-
-#### Defined type: `icinga2::object::zone`
-
-##### `ensure`
-Set to present enables the zone object, absent disables it. Defaults to `present`
-
-##### `zone_name`
-Set the name of the zone object. Defaults to the title of the define resource.
-
-##### `endpoints`
-List of endpoints that belong to this zone.
-
-##### `parent`
-Parent zone to this zone.
-
-##### `global`
-If set to `true`, a global zone is defined and the parameter endpoints and parent are ignored. Defaults to `false`.
-
-##### `target`
-Destination config file to store in this object. File will be declared at the first time.
-
-##### `order`
-String or integer to control the position in the target file, sorted alpha numeric. Defauts to 45.
-
-#### Defined type: `icinga2::object::apiuser`
-
-##### `ensure`
-Set to present enables the apiuser object, absent disables it. Defaults to present.
-
-##### `apiuser_name`
-Set the name of the apiuser object. Defaults to title of the define resource.
-
-##### `password`
-Password string.
-
-##### `client_cn`
-Optional. Client Common Name (CN).
-
-##### `permissions`
-Array of permissions. Either as string or dictionary with the keys permission and filter. The latter must be specified
-as function.
-
-##### `target`
-Destination config file to store in this object. File will be declared at the first time.
-
-##### `order`
-String or integer to control the position in the target file, sorted alpha numeric. Defaults to 30.
-
-###### Examples
-
-```
-permissions = [ "*" ]
-```
-
-```
-permissions = [ "objects/query/Host", "objects/query/Service" ]
-```
-
-```
-permissions = [
-  {
-    permission = "objects/query/Host"
-    filter = {{ regex("^Linux", host.vars.os) }}
-  },
-  {
-    permission = "objects/query/Service"
-    filter = {{ regex("^Linux", service.vars.os) }}
-  }
-]
-```
-
-#### Defined type: `icinga2::object::checkcommand`
-
-##### `ensure`
-Set to present enables the checkcommand object, absent disables it. Defaults to present.
-
-##### `checkcommand_name`
-Title of the CheckCommand object.
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `command`
-The command. This can either be an array of individual command arguments. Alternatively a string can be specified in
-which case the shell interpreter (usually /bin/sh) takes care of parsing the command. When using the `arguments`
-attribute this must be an array. Can be specified as function for advanced implementations.
-
-##### `env`
-A dictionary of macros which should be exported as environment variables prior to executing the command.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this command.
-
-##### `timeout`
-The command timeout in seconds. Defaults to `60` seconds.
-
-##### `arguments`
-A dictionary of command arguments.
-
-##### `target`
-Destination config file to store in this object. File will be declared the
-first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 15.
-
-#### Defined type: `icinga2::object::host`
-
-##### `ensure`
-Set to present enables the host object, absent disables it. Defaults to present.
-
-##### `host_name`
-Hostname of the Host object.
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `display_name`
-A short description of the host (e.g. displayed by external interfaces instead of the name if set).
-
-##### `address`
-The host's address v4.
-
-##### `address6`
-The host's address v6.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this host.
-
-##### `groups`
-A list of host groups this host belongs to.
-
-##### `check_command`
-The name of the check command.
-
-##### `max_check_attempts`
-The number of times a host is re-checked before changing into a hard state. Defaults to `3`
-
-##### `check_period`
-The name of a time period which determines when this host should be checked. Not set by default.
-
-##### `check_timeout`
-Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.
-
-##### `check_interval`
-The check interval (in seconds). This interval is used for checks when the host is in a HARD state. Defaults to `5` minutes.
-
-##### `retry_interval`
-The retry interval (in seconds). This interval is used for checks when the host is in a SOFT state. Defaults to `1` minute.
-
-##### `enable_notifications`
-Whether notifications are enabled. Defaults to `true`
-
-##### `enable_active_checks`
-Whether active checks are enabled. Defaults to `true`
-
-##### `enable_passive_checks`
-Whether passive checks are enabled. Defaults to `true`
-
-##### `enable_event_handle`
-Enables event handlers for this host. Defaults to `true`
-
-##### `enable_flapping`
-Whether flap detection is enabled. Defaults to `false`
-
-##### `enable_perfdata`
-Whether performance data processing is enabled. Defaults to `true`
-
-##### `event_command`
-The name of an event command that should be executed every time the host's state changes or the host is in a SOFT state.
-
-##### `flapping_threshold`
-The flapping threshold in percent when a host is considered to be flapping.
-
-##### `volatile`
-The volatile setting enables always HARD state types if NOT-OK state changes occur.
-
-##### `zone`
-The zone this object is a member of.
-
-##### `command_endpoint`
-The endpoint where commands are executed on.
-
-##### `notes`
-Notes for the host.
-
-##### `notes_url`
-Url for notes for the host (for example, in notification commands).
-
-##### `action_url`
-Url for actions for the host (for example, an external graphing tool).
-
-##### `icon_image`
-Icon image for the host. Used by external interfaces only.
-
-##### `icon_image_alt`
-Icon image description for the host. Used by external interface only.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 50.
-
-#### Defined type: `icinga2::object::hostgroup`
-
-##### `ensure`
-Set to present enables the hostgroup object, absent disables it. Defaults to present.
-
-##### `display_name`
-A short description of the host group.
-
-##### `groups`
-An array of nested group names.
-
-##### `assign`
-Assign host group members using the group assign rules.
-
-##### `target`
-Destination config file to store in this object. File will be declared at the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 55.
-
-#### Defined type: `icinga2::object::dependency`
-
-##### `ensure`
-Set to present enables the dependency object, absent disabled it. Defaults to `present`
-
-##### `dependency_name`
-Set the Icinga 2 name of the dependency object. Defaults to `title` of the define resource.
-
-##### `parent_host_name`
-The parent host.
-
-##### `parent_service_name`
-The parent service. If omitted, this dependency object is treated as host dependency.
-
-##### `child_host_name`
-The child host.
-
-##### `child_service_name`
-The child service. If omitted, this dependency object is treated as host dependency.
-
-##### `disable_checks`
-Whether to disable checks when this dependency fails. Defaults to `false`
-
-##### `disable_notifications`
-Whether to disable notifications when this dependency fails. Defaults to `true`
-
-##### `ignore_soft_states`
-Whether to ignore soft states for the reachability calculation. Defaults to `true`
-
-##### `period`
-Time period during which this dependency is enabled.
-
-##### `states`
-A list of state filters when this dependency should be OK. Defaults to [ OK, Warning ] for services and [ Up ] for hosts.
-
-##### `apply`
-Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-
-##### `prefix`
-Set dependency_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
-
-##### `apply_target`
-An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
-
-##### `assign`
-Assign user group members using the group assign rules.
-
-##### `ignore`
-Exclude users using the group ignore rules.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 70.
-
-#### Defined type: `icinga2::object::timeperiod`
-
-##### `ensure`
-Set to present enables the timeperiod object, absent disabled it. Defaults to `present`
-
-##### `timeperiod_name`
-Set the Icinga 2 name of the timeperiod object. Defaults to `title` of the define resource.
-
-##### `display_name`
-A short description of the time period.
-
-##### `import`
-Sorted List of templates to include. Defaults to [ "legacy-timeperiod" ].
-
-##### `ranges`
-A dictionary containing information which days and durations apply to this timeperiod.
-
-##### `prefer_includes`
-Boolean whether to prefer timeperiods includes or excludes. Default to `true`
-
-##### `excludes`
-An array of timeperiods, which should exclude from your timerange.
-
-##### `includes`
-An array of timeperiods, which should include into your timerange
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `target`
-Destination config file to store this object in. File will be declared on the first run.
-
-##### `order`
-String or integer to control the position in the target file, sorted alpha numeric. Defaults to 35.
-
-#### Defined type: `icinga2::object::usergroup`
-
-##### `ensure`
-Set to present enables the usergroup object, absent disables it. Defaults to `present`
-
-##### `usergroup_name`
-Set the Icinga 2 name of the usergroup object. Defaults to `title` of the define resource.
-
-##### `user_name`
-Set the Icinga 2 name of the user object. Defaults to title of the define resource.
-
-##### `display_name`
-A short description of the service group.
-
-##### `groups`
-An array of nested group names.
-
-##### `assign`
-Assign user group members using the group assign rules.
-
-##### `ignore`
-Exclude users using the group ignore rules.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 80.
-
-#### Defined type: `icinga2::object::user`
-
-##### `ensure`
-Set to present enables the user object, absent disables it. Defaults to `present`
-
-##### `display_name`
-A short description of the user.
-
-##### `email`
-An email string for this user. Useful for notification commands.
-
-##### `pager`
-A pager string for this user. Useful for notification commands.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this user.
-
-##### `groups`
-An array of group names.
-
-##### `enable_notifications`
-Whether notifications are enabled for this user.
-
-##### `period`
-The name of a time period which determines when a notification for this user should be triggered. Not set by default.
-
-##### `types`
-A set of type filters when this notification should be triggered. By default everything is matched.
-
-##### `states`
-A set of state filters when this notification should be triggered. By default everything is matched.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 75.
-
-#### Defined type: `icinga2::object::notificationcommand`
-
-##### `ensure`
-Set to present enables the notificationcommand object, absent disabled it. Defaults to present.
-
-##### `notificationcommand_name`
-Set the Icinga 2 name of the notificationcommand object. Defaults to `title` of the define resource.
-
-##### `execute`
-The "execute" script method takes care of executing the notification. The default template "plugin-notification-command"
-which is imported into all CheckCommand objects takes care of this setting.
-
-##### `command`
-The command. This can either be an array of individual command arguments. Alternatively a string can be specified in
-which case the shell interpreter (usually /bin/sh) takes care of parsing the command.
-
-##### `env`
-A dictionary of macros which should be exported as environment variables prior to executing the command.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this command.
-
-##### `timeout`
-The command timeout in seconds. Defaults to `60` seconds.
-
-##### `arguments`
-A dictionary of command arguments.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 25.
-
-#### Defined type: `icinga2::object::notification`
-
-##### `ensure`
-Set to present enables the notification object, absent disables it. Defaults to `present`
-
-##### `notification_name`
-Set the Icinga 2 name of the notification object. Defaults to `title` of the define resource.
-
-##### `host_name`
-The name of the host this notification belongs to.
-
-##### `service_name`
-The short name of the service this notification belongs to. If omitted, this notification object is treated as host
-notification.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this notification object.
-
-##### `users`
-A list of user names who should be notified.
-
-##### `user_groups`
-A list of user group names who should be notified.
-
-##### `times`
-A dictionary containing begin and end attributes for the notification.
-
-##### `command`
-The name of the notification command which should be executed when the notification is triggered.
-
-##### `interval`
-The notification interval (in seconds). This interval is used for active notifications. Defaults to `30` minutes. If set
-to 0, re-notifications are disabled.
-
-##### `period`
-The name of a time period which determines when this notification should be triggered. Not set by default.
-
-##### `zone`
-The zone this object is a member of.
-
-##### `types`
-A list of type filters when this notification should be triggered. By default everything is matched.
-
-##### `states`
-A list of state filters when this notification should be triggered. By default everything is matched.
-
-##### `apply`
-Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-
-##### `prefix`
-Set notification_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
-
-##### `apply_target`
-An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 85.
-
-#### Defined type: `icinga2::object::service`
-
-##### `ensure`
-Set to present enables the service object, absent disables it. Defaults to `present`
-
-##### `service_name`
-Set the Icinga 2 name of the service object. Defaults to `title` of the define resource.
-
-##### `display_name`
-A short description of the service.
-
-##### `host_name`
-The host this service belongs to. There must be a Host object with that name.
-
-##### `name`
-The service name. Must be unique on a per-host basis (Similar to the service_description attribute in Icinga 1.x).
-
-##### `groups`
-The service groups this service belongs to.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this service.
-
-##### `check_command`
-The name of the check command.
-
-##### `max_check_attempts`
-The number of times a service is re-checked before changing into a hard state. Defaults to `3`
-
-##### `check_period`
-The name of a time period which determines when this service should be checked. Not set by default.
-
-##### `check_timeout`
-Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.
-
-##### `check_interval`
-The check interval (in seconds). This interval is used for checks when the service is in a HARD state.
-Defaults to `5` minutes.
-
-##### `retry_interval`
-The retry interval (in seconds). This interval is used for checks when the service is in a SOFT state.
-Defaults to `1` minute.
-
-##### `enable_notifications`
-Whether notifications are enabled. Defaults to `true`
-
-##### `enable_active_checks`
-Whether active checks are enabled. Defaults to `true`
-
-##### `enable_passive_checks`
-Whether passive checks are enabled. Defaults to `true`
-
-##### `enable_event_handler`
-Enables event handlers for this host. Defaults to `true`
-
-##### `enable_flapping`
-Whether flap detection is enabled. Defaults to `false`
-
-##### `enable_perfdata`
-Whether performance data processing is enabled. Defaults to `true`
-
-##### `event_command`
-The name of an event command that should be executed every time the service's state changes or the service is in a SOFT
-state.
-
-##### `flapping_threshold`
-The flapping threshold in percent when a service is considered to be flapping.
-
-##### `volatile`
-The volatile setting enables always HARD state types if NOT-OK state changes occur.
-
-##### `zone`
-The zone this object is a member of.
-
-##### `command_endpoint`
-The endpoint where commands are executed on.
-
-##### `notes`
-Notes for the service.
-
-##### `notes_url`
-Url for notes for the service (for example, in notification commands).
-
-##### `action_url`
-Url for actions for the service (for example, an external graphing tool).
-
-##### `icon_image`
-Icon image for the service. Used by external interfaces only.
-
-##### `icon_image_alt`
-Icon image description for the service. Used by external interface only.
-
-##### `apply`
-Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-
-##### `prefix`
-Set service_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
-
-##### `assign`
-Assign user group members using the group assign rules.
-
-##### `ignore`
-Exclude users using the group ignore rules.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 60.
-
-#### Defined type: `icinga2::object::servicegroup`
-
-##### `ensure`
-Set to present enables the servicegroup object, absent disables it. Defaults to `present`
-
-##### `servicegroup_name`
-Set the Icinga 2 name of the servicegroup object. Defaults to `title` of the define resource.
-
-##### `display_name`
-A short description of the service group.
-
-##### `groups`
-An array of nested group names.
-
-##### `assign`
-Assign user group members using the group assign rules.
-
-##### `ignore`
-Exclude users using the group ignore rules.
-
-##### `template`
-Set to true creates a template instead of an object. Defaults to `false`
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 55.
-
-#### Defined type: `icinga2::object::scheduleddowntime`
-
-##### `ensure`
-Set to present enables the scheduleddowntime object, absent disables it. Defaults to `present`
-
-##### `scheduleddowntime_name`
-Set the Icinga 2 name of the scheduleddowntime object. Defaults to `title` of the define resource.
-
-##### `host_name`
-The name of the host this comment belongs to.
-
-##### `service_name`
-The short name of the service this comment belongs to. If omitted, this comment object is treated as host comment.
-
-##### `author`
-The author's name.
-
-##### `comment`
-The comment text.
-
-##### `fixed`
-Whether this is a fixed downtime. Defaults to `true`
-
-##### `duration`
-The duration as number.
-
-##### `ranges`
-A dictionary containing information which days and durations apply to this timeperiod.
-
-##### `apply`
-Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-
-##### `prefix`
-Set scheduleddowntime_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
-
-##### `apply_target`
-An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
-
-##### `assign`
-Assign user group members using the group assign rules.
-
-##### `ignore`
-Exclude users using the group ignore rules.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 90.
-
-#### Defined type: `icinga2::object::eventcommand`
-
-##### `ensure`
-Set to present enables the eventcommand object, absent disables it. Defaults to `present`
-
-##### `eventcommand_name`
-Set the Icinga 2 name of the eventcommand object. Defaults to `title` of the define resource.
-
-##### `execute`
-The "execute" script method takes care of executing the event handler. In virtually all cases you should import the
-"plugin-event-command" template to take care of this setting.
-
-##### `command`
-The command. This can either be an array of individual command arguments. Alternatively a string can be specified in
-which case the shell interpreter (usually /bin/sh) takes care of parsing the command.
-
-##### `env`
-A dictionary of macros which should be exported as environment variables prior to executing the command.
-
-##### `vars`
-A dictionary containing custom attributes that are specific to this command.
-
-##### `timeout`
-The command timeout in seconds. Defaults to 60 seconds.
-
-##### `arguments`
-A dictionary of command arguments.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `import`
-Sorted List of templates to include. Defaults to an empty list.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 20.
-
-#### Defined type: `icinga2::object::checkresultreader`
-
-##### `ensure`
-Set to present enables the checkresultreader object, absent disables it. Defaults to `present`
-
-##### `checkresultreader_name`
-Set the Icinga 2 name of the checkresultreader object. Defaults to `title` of the define resource.
-
-##### `spool_dir`
-The directory which contains the check result files. Defaults to `LocalStateDir + "/lib/icinga2/spool/checkresults/"`
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to `05`.
-
-
-### Private defined types
-
-#### Defined type: `icinga2::feature`
-This defined type is used by all feature defined types as basis. It can generally enable or disable features.
-
-**Parameters of `icinga2::feature`:**
-
-##### `ensure`
-Either `present` or `absent`. Defines if the feature should be enabled. Defaults to `present`.
-
-##### `feature`
-Name of the feature. This name is used for the corresponding configuration file.
-
-#### Defined type: `icinga2::object`
-This defined type is used by all object defined types as bases. In can generally create Icinga 2 objects.
-
-##### `ensure`
-Set to present enables the object, absent disabled it. Defaults to present.
-
-##### `object_name`
-Set the icinga2 name of the object. Defaults to title of the define resource.
-
-##### `template`
-Set to true will define a template otherwise an object. Defaults to false.
-
-##### `apply`
-Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
-
-##### `apply_target`
-Optional fo an object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
-
-##### `import`
-A sorted list of templates to import in this object. Defaults to an empty array.
-
-##### `attrs`
-Hash for the attributes of this object. Keys are the attributes and values are there values. Defaults to an empty Hash.
-
-##### `object_type`
-Icinga 2 object type for this object.
-
-##### `target`
-Destination config file to store in this object. File will be declared the first time.
-
-##### `order`
-String or integer to set the position in the target file, sorted alpha numeric. Defaults to 10.
-
-
-## Development
-A roadmap of this project is located at https://github.com/Icinga/puppet-icinga2/milestones. Please consider
-this roadmap when you start contributing to the project.
-
-### Contributing
-When contributing several steps such as pull requests and proper testing implementations are required.
-Find a detailed step by step guide in [CONTRIBUTING.md].
-
-### Testing
-Testing is essential in our workflow to ensure a good quality. We use RSpec as well as Serverspec to test all components
-of this module. For a detailed description see [TESTING.md].
-
-## Release Notes
-When releasing new versions we refer to [SemVer 1.0.0] for version numbers. All steps required when creating a new
-release are described in [RELEASE.md]
-
-See also [CHANGELOG.md]
-
-## Authors
-[AUTHORS] is generated on each release.
-
-[Overview]: #overview
-[Module description]: #module-description
-[Setup]: #setup
-[What Icinga 2 affects]: #what-icinga2-affects
-[Usage]: #usage
-[Reference]: #reference
-[Public Classes]: #public-classes
-[Private Classes]: #private-classes
-[Public Defined Types]: #public-defined-types
-[Private Defined Types]: #private-defined-types
-[Limitations]: #limitations
-[Development]: #development
+See also [CHANGELOG.md](https://github.com/Icinga/puppet-icinga2/blob/master/CHANGELOG.md)
 
 [distributed monitoring]: http://docs.icinga.com/icinga2/latest/doc/module/icinga2/chapter/distributed-monitoring
-[examples]: examples
 [puppetlabs/stdlib]: https://github.com/puppetlabs/puppetlabs-stdlib
 [puppetlabs/concat]: https://github.com/puppetlabs/puppetlabs-concat
 [puppetlabs/apt]: https://github.com/puppetlabs/puppetlabs-apt
diff --git a/modules/icinga2/RELEASE.md b/modules/icinga2/RELEASE.md
old mode 100755
new mode 100644
index 0af7ba36..64f4888f
--- a/modules/icinga2/RELEASE.md
+++ b/modules/icinga2/RELEASE.md
@@ -3,7 +3,17 @@ Before submitting a new release, make sure all relevant pull requests and local
 branch. All tests must pass before a release is tagged.
 
 
-## 1. AUTHORS
+## 1. Puppet Development Kit
+If not installed, please install the PDK and do a 'bundle install'.
+``` bash
+pdk bundle install
+```
+Or if already installed do an update.
+``` bash
+pdk bundle update
+```
+
+## 2. AUTHORS
 Update the [AUTHORS] and [.mailmap] file
 
 ``` bash
@@ -12,10 +22,24 @@ git log --use-mailmap | grep ^Author: | cut -f2- -d' ' | sort | uniq > AUTHORS
 git commit -am "Update AUTHORS"
 ```
 
-## 2. Changelog
+## 3. Reference
+If it is not installed [puppet-strings]:
+``` bash
+gem install puppet-strings --no-ri --no-rdoc
+```
+Generate [REFERENCE.md] via [Puppet Strings]
+``` bash
+puppet strings generate --format markdown --out ./REFERENCE.md
+```
+
+## 4. Version
+Version numbers are incremented regarding the [SemVer 1.0.0] specification. 
+Update the version number in `metadata.json`.
+
+## 5. Changelog
 Install [github-changelog-generator]
 ```bash
-gem install github_changelog_generator
+gem install github_changelog_generator -v 1.13.2
 ```
 
 Generate [CHANGELOG.md]
@@ -23,11 +47,7 @@ Generate [CHANGELOG.md]
 github_changelog_generator -t <github-access-token> --future-release=v1.0.0 -u icinga -p puppet-icinga2
 ```
 
-## 3. Version
-Version numbers are incremented regarding the [SemVer 1.0.0] specification. 
-Update the version number in `metadata.json`.
-
-## 4. Git Tag
+## 6. Git Tag
 Commit all changes to the `master` branch
 
 ``` bash
@@ -47,11 +67,14 @@ Push tags
 git push --tags
 ```
 
-
-## Puppet Forge
-The module is uploaded automatically to Puppet Forge by TravisCI when a new tag is set.
+## 7. Build and Upload
+``` bash
+pdk build
+```
+Upload the tarball to Puppet Forge.
 
 [github-changelog-generator]: https://github.com/skywinder/github-changelog-generator
+[Puppet Strings]: https://puppet.com/docs/puppet/5.5/puppet_strings.html
 [SemVer 1.0.0]: http://semver.org/spec/v1.0.0.html
 [CHANGELOG.md]: CHANGELOG.md
 [AUTHORS]: AUTHORS
diff --git a/modules/icinga2/Rakefile b/modules/icinga2/Rakefile
old mode 100755
new mode 100644
index 20d1b86b..4f9be33c
--- a/modules/icinga2/Rakefile
+++ b/modules/icinga2/Rakefile
@@ -1,28 +1,90 @@
+# frozen_string_literal: true
+
+require 'bundler'
+require 'puppet_litmus/rake_tasks' if Bundler.rubygems.find_name('puppet_litmus').any?
 require 'puppetlabs_spec_helper/rake_tasks'
-require 'puppet-lint/tasks/puppet-lint'
+require 'puppet-syntax/tasks/puppet-syntax'
+require 'puppet_blacksmith/rake_tasks' if Bundler.rubygems.find_name('puppet-blacksmith').any?
+require 'github_changelog_generator/task' if Bundler.rubygems.find_name('github_changelog_generator').any?
+require 'puppet-strings/tasks' if Bundler.rubygems.find_name('puppet-strings').any?
 
-PuppetLint.configuration.log_format = '%{path}:%{line}:%{check}:%{KIND}:%{message}'
-PuppetLint.configuration.fail_on_warnings = true
-PuppetLint.configuration.send('disable_80chars')
-PuppetLint.configuration.send('disable_140chars')
-PuppetLint.configuration.send('disable_class_inherits_from_params_class')
-PuppetLint.configuration.send('disable_selector_inside_resource')
-PuppetLint.configuration.send('disable_only_variable_string')
-
-exclude_paths = %w(
-  spec/**/*
-  serverspec/**/*
-  pkg/**/*
-  examples/**/*
-  vendor/**/*
-  .vendor/**/*
-)
-
-PuppetLint::RakeTask.new :lint do |config|
-  config.ignore_paths = exclude_paths
+def changelog_user
+  return unless Rake.application.top_level_tasks.include? "changelog"
+  returnVal = nil || JSON.load(File.read('metadata.json'))['author']
+  raise "unable to find the changelog_user in .sync.yml, or the author in metadata.json" if returnVal.nil?
+  puts "GitHubChangelogGenerator user:#{returnVal}"
+  returnVal
+end
+
+def changelog_project
+  return unless Rake.application.top_level_tasks.include? "changelog"
+
+  returnVal = nil
+  returnVal ||= begin
+    metadata_source = JSON.load(File.read('metadata.json'))['source']
+    metadata_source_match = metadata_source && metadata_source.match(%r{.*\/([^\/]*?)(?:\.git)?\Z})
+
+    metadata_source_match && metadata_source_match[1]
+  end
+
+  raise "unable to find the changelog_project in .sync.yml or calculate it from the source in metadata.json" if returnVal.nil?
+
+  puts "GitHubChangelogGenerator project:#{returnVal}"
+  returnVal
+end
+
+def changelog_future_release
+  return unless Rake.application.top_level_tasks.include? "changelog"
+  returnVal = "v%s" % JSON.load(File.read('metadata.json'))['version']
+  raise "unable to find the future_release (version) in metadata.json" if returnVal.nil?
+  puts "GitHubChangelogGenerator future_release:#{returnVal}"
+  returnVal
 end
 
-PuppetSyntax.exclude_paths = exclude_paths
+PuppetLint.configuration.send('disable_140chars')
+PuppetLint.configuration.send('disable_relative')
+
+
+if Bundler.rubygems.find_name('github_changelog_generator').any?
+  GitHubChangelogGenerator::RakeTask.new :changelog do |config|
+    raise "Set CHANGELOG_GITHUB_TOKEN environment variable eg 'export CHANGELOG_GITHUB_TOKEN=valid_token_here'" if Rake.application.top_level_tasks.include? "changelog" and ENV['CHANGELOG_GITHUB_TOKEN'].nil?
+    config.user = "#{changelog_user}"
+    config.project = "#{changelog_project}"
+    config.future_release = "#{changelog_future_release}"
+    config.exclude_labels = ['maintenance']
+    config.header = "# Change log\n\nAll notable changes to this project will be documented in this file. The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/) and this project adheres to [Semantic Versioning](http://semver.org)."
+    config.add_pr_wo_labels = true
+    config.issues = false
+    config.merge_prefix = "### UNCATEGORIZED PRS; LABEL THEM ON GITHUB"
+    config.configure_sections = {
+      "Changed" => {
+        "prefix" => "### Changed",
+        "labels" => ["backwards-incompatible"],
+      },
+      "Added" => {
+        "prefix" => "### Added",
+        "labels" => ["enhancement", "feature"],
+      },
+      "Fixed" => {
+        "prefix" => "### Fixed",
+        "labels" => ["bug", "documentation", "bugfix"],
+      },
+    }
+  end
+else
+  desc 'Generate a Changelog from GitHub'
+  task :changelog do
+    raise <<EOM
+The changelog tasks depends on recent features of the github_changelog_generator gem.
+Please manually add it to your .sync.yml for now, and run `pdk update`:
+---
+Gemfile:
+  optional:
+    ':development':
+      - gem: 'github_changelog_generator'
+        version: '~> 1.15'
+        condition: "Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('2.3.0')"
+EOM
+  end
+end
 
-desc 'Run validate, parallel_spec, lint'
-task test: %w(metadata_lint validate parallel_spec lint)
diff --git a/modules/icinga2/TESTING.md b/modules/icinga2/TESTING.md
old mode 100755
new mode 100644
index 184cd392..d9a4d5c4
--- a/modules/icinga2/TESTING.md
+++ b/modules/icinga2/TESTING.md
@@ -1,31 +1,29 @@
 # TESTING
+# TESTING
 
 ## Prerequisites
-Before starting any test, you should make sure you have installed all dependent puppet modules. Find a list of all
-dependencies in [README.md] or [metadata.json].
+Before starting any test, you should make sure you have installed the Puppet PDK and Bolt,
+also Vagrant and VirtualBox have to be installed for acceptance tests.
 
 Required gems are installed with `bundler`:
 ```
 cd puppet-icinga2
-bundle install
+pdk bundle install
 ```
 
-## Validation tests
-Validation tests will check all manifests, templates and ruby files against syntax violations and style guides .
-
-Run validation tests:
+Or just do an update:
 ```
 cd puppet-icinga2
-rake validate
+pdk bundle update
 ```
 
-## Puppet lint
-With puppet-lint we test if our manifests conform to the recommended style guides from Puppet.
+## Validation tests
+Validation tests will check all manifests, templates and ruby files against syntax violations and style guides .
 
-Run lint tests:
+Run validation tests:
 ```
 cd puppet-icinga2
-rake lint
+pdk validate
 ```
 
 ## Unit tests
@@ -34,50 +32,55 @@ For unit testing we use [RSpec]. All classes, defined resource types and functio
 Run unit tests:
 ```
 cd puppet-icinga2
-rake parallel_spec
+pdk test unit
 ```
 
-## Integration tests
-With integration tests this module is tested on multiple platforms to check the complete installation process. We define
-these tests with [ServerSpec] and run them on VMs by using [Vagrant].
-### Prerequisites
-In addition to Vagrant, you need to install all dependent modules to run the tests properly. Those modules are listed in
-`serverspec/environments/production/Puppetfile` and can be installed with [r10k]
-
+Or dedicated tests:
 ```
-cd puppet-icinga2/serverspec/environments/production
-r10k puppetfile install -v
+pdk test unit --tests=spec/classes/icinga2_spec.rb,spec/classes/api_spec.rb
 ```
 
+
+## Acceptence tests
+With integration tests this module is tested on multiple platforms to check the complete installation process. We define
+these tests with [Beaker] and run them on VMs by using [Vagrant].
+
 ### Run tests
-All available ServerSpec tests are listed in the `serverspec/spec` directory, where each instance has its own directory.
+All available Beaker acceptance tests are listed in the `spec/acceptance` directory.
 
 Run all integraion tests:
+```
+cd puppet-icinga2
+pdk bundle exec rake beaker
+```
 
+Run integration tests for a single platform:
 ```
-cd puppet-icinga2/serverspec
-rake spec
+cd puppet-icinga2
+pdk bundle exec rake beaker:centos-6-x64
 ```
 
-List all available tasks/platforms:
+To choose a specific Puppet version for your tests set the environment variable, e.g.
 ```
-cd puppet-icinga2/serverspec
-rake --task
+BEAKER_PUPPET_AGENT_VERSION="6.4.2"
 ```
 
-Run integration tests for a single platform:
+Debugging: Does not destroy a virtual machine after a test fails is done by setting:
+
+```
+BEAKER_destroy=no
 ```
-cd puppet-icinga2/serverspec
-rake spec:i2debian7puppet4
+
+Logging in virtual machine, e.g.
+```
+cd puppet-icinga2
+pdk bundle exec rake beaker:ssh:centos-6-x64
 ```
 
-### Windows / SLES
-Since we don't want to violate any licenses of Microsoft or SUSE, Windows and SLES boxes are not available publicly.
+or in the default machine:
+
+```
+cd puppet-icinga2
+pdk bundle exec rake beaker:ssh:default
+```
 
-[README.md]: README.md
-[puppet-lint]: http://puppet-lint.com/
-[metadata.json]: metadata.json
-[RSpec]: http://rspec-puppet.com/
-[Serverspec]: http://serverspec.org/
-[Vagrant]: https://www.vagrantup.com/
-[R10k]: https://github.com/puppetlabs/r10k
diff --git a/modules/icinga2/data/Debian-family.yaml b/modules/icinga2/data/Debian-family.yaml
old mode 100755
new mode 100644
index 60aa2389..c25a56b0
--- a/modules/icinga2/data/Debian-family.yaml
+++ b/modules/icinga2/data/Debian-family.yaml
@@ -2,10 +2,3 @@
 icinga2::globals::user: nagios
 icinga2::globals::group: nagios
 icinga2::globals::icinga2_bin: /usr/sbin/icinga2
-icinga2::repo:
-  location: http://packages.icinga.com/debian
-  release: 'icinga-%{facts.os.distro.codename}'
-  repos: main
-  key: 
-    id: F51A91A5EE001AA5D77D53C4C6E319C334410682
-    source: http://packages.icinga.com/icinga.key
diff --git a/modules/icinga2/data/Fedora.yaml b/modules/icinga2/data/Fedora.yaml
deleted file mode 100755
index efbde8a5..00000000
--- a/modules/icinga2/data/Fedora.yaml
+++ /dev/null
@@ -1,3 +0,0 @@
----
-icinga2::repo:
-  baseurl: 'http://packages.icinga.com/fedora/%{facts.os.release.major}/release/'
diff --git a/modules/icinga2/data/FreeBSD-kernel.yaml b/modules/icinga2/data/FreeBSD-kernel.yaml
old mode 100755
new mode 100644
index ea2aa2ac..371325eb
--- a/modules/icinga2/data/FreeBSD-kernel.yaml
+++ b/modules/icinga2/data/FreeBSD-kernel.yaml
@@ -4,9 +4,7 @@ icinga2::globals::service_name: icinga2
 icinga2::globals::service_reload: service icinga2 reload
 icinga2::globals::user: icinga
 icinga2::globals::group: icinga
-icinga2::globals::ido_mysql_package_name: null
 icinga2::globals::ido_mysql_schema: /usr/local/share/icinga2-ido-mysql/schema/mysql.sql
-icinga2::globals::ido_pgsql_package_name: null
 icinga2::globals::ido_pgsql_schema: /usr/local/share/icinga2-ido-pgsql/schema/pgsql.sql
 icinga2::globals::icinga2_bin: /usr/local/sbin/icinga2
 icinga2::globals::conf_dir: /usr/local/etc/icinga2
@@ -17,3 +15,6 @@ icinga2::globals::spool_dir: /var/spool/icinga2
 icinga2::globals::cache_dir: /var/cache/icinga2
 icinga2::globals::cert_dir: /var/lib/icinga2/certs
 icinga2::globals::ca_dir: /var/lib/icinga2/ca
+icinga2::globals::constants:
+  PluginDir: '/usr/local/libexec/nagios'
+  PluginContribDir: '/usr/local/libexec/nagios'
diff --git a/modules/icinga2/data/Linux-kernel.yaml b/modules/icinga2/data/Linux-kernel.yaml
old mode 100755
new mode 100644
diff --git a/modules/icinga2/data/OpenSuSE.yaml b/modules/icinga2/data/OpenSuSE.yaml
deleted file mode 100755
index 1d3a5cda..00000000
--- a/modules/icinga2/data/OpenSuSE.yaml
+++ /dev/null
@@ -1,3 +0,0 @@
----
-icinga2::repo:
-  baseurl: 'http://packages.icinga.com/openSUSE/%{facts.os.release.full}/release/'
diff --git a/modules/icinga2/data/RedHat-family-5.yaml b/modules/icinga2/data/RedHat-family-5.yaml
old mode 100755
new mode 100644
index afd3e638..bded087d
--- a/modules/icinga2/data/RedHat-family-5.yaml
+++ b/modules/icinga2/data/RedHat-family-5.yaml
@@ -1,2 +1,3 @@
 ---
 icinga2::globals::icinga2_bin: /usr/sbin/icinga2
+icinga2::manage_selinux: false
diff --git a/modules/icinga2/data/RedHat-family-6.yaml b/modules/icinga2/data/RedHat-family-6.yaml
old mode 100755
new mode 100644
index afd3e638..bded087d
--- a/modules/icinga2/data/RedHat-family-6.yaml
+++ b/modules/icinga2/data/RedHat-family-6.yaml
@@ -1,2 +1,3 @@
 ---
 icinga2::globals::icinga2_bin: /usr/sbin/icinga2
+icinga2::manage_selinux: false
diff --git a/modules/icinga2/data/RedHat-family.yaml b/modules/icinga2/data/RedHat-family.yaml
old mode 100755
new mode 100644
index 370ca34a..d8b22fc8
--- a/modules/icinga2/data/RedHat-family.yaml
+++ b/modules/icinga2/data/RedHat-family.yaml
@@ -2,9 +2,4 @@
 icinga2::globals::user: icinga
 icinga2::globals::group: icinga
 icinga2::globals::icinga2_bin: /sbin/icinga2
-icinga2::repo:
-  baseurl: 'http://packages.icinga.com/epel/%{facts.os.release.major}/release/'
-  descr: ICINGA (stable release for epel)
-  enabled: 1
-  gpgcheck: 1
-  gpgkey: http://packages.icinga.com/icinga.key
+icinga2::globals::selinux_package_name: icinga2-selinux
diff --git a/modules/icinga2/data/RedHat-x86_64-family.yaml b/modules/icinga2/data/RedHat-x86_64-family.yaml
old mode 100755
new mode 100644
diff --git a/modules/icinga2/data/Suse-family.yaml b/modules/icinga2/data/Suse-family.yaml
old mode 100755
new mode 100644
index 420e45b1..47efca72
--- a/modules/icinga2/data/Suse-family.yaml
+++ b/modules/icinga2/data/Suse-family.yaml
@@ -2,8 +2,3 @@
 icinga2::globals::user: icinga
 icinga2::globals::group: icinga
 icinga2::globals::icinga2_bin: /usr/sbin/icinga2
-icinga2::repo:
-  baseurl: 'http://packages.icinga.com/SUSE/%{facts.os.release.full}/release/'
-  enabled: 1
-  gpgcheck: 1
-  gpgkey: http://packages.icinga.com/icinga.key
diff --git a/modules/icinga2/data/Ubuntu.yaml b/modules/icinga2/data/Ubuntu.yaml
deleted file mode 100755
index fdb8faf8..00000000
--- a/modules/icinga2/data/Ubuntu.yaml
+++ /dev/null
@@ -1,3 +0,0 @@
----
-icinga2::repo:
-  location: http://packages.icinga.com/ubuntu
diff --git a/modules/icinga2/data/Windows-kernel.yaml b/modules/icinga2/data/Windows-kernel.yaml
old mode 100755
new mode 100644
index b0371f78..b847848a
--- a/modules/icinga2/data/Windows-kernel.yaml
+++ b/modules/icinga2/data/Windows-kernel.yaml
@@ -1,12 +1,7 @@
 ---
 icinga2::globals::package_name: icinga2
 icinga2::globals::service_name: icinga2
-icinga2::globals::service_reload: null
-icinga2::globals::user: null
-icinga2::globals::group: null
-icinga2::globals::ido_mysql_package_name: null
 icinga2::globals::ido_mysql_schema: C:/Program Files/icinga2/usr/share/icinga2-ido-mysql/schema/mysql.sql
-icinga2::globals::ido_pgsql_package_name: null
 icinga2::globals::ido_pgsql_schema: C:/Program Files/icinga2/usr/share/icinga2-ido-pgsql/schema/pgsql.sql
 icinga2::globals::icinga2_bin: C:/Program Files/icinga2/sbin/icinga2.exe
 icinga2::globals::conf_dir: C:/ProgramData/icinga2/etc/icinga2
diff --git a/modules/icinga2/data/common.yaml b/modules/icinga2/data/common.yaml
old mode 100755
new mode 100644
index 2ad557b6..6697d94a
--- a/modules/icinga2/data/common.yaml
+++ b/modules/icinga2/data/common.yaml
@@ -12,24 +12,36 @@ icinga2::globals::constants:
   NodeName: '%{facts.networking.fqdn}'
   ZoneName: '%{facts.networking.fqdn}'
   TicketSalt: ''
-  MaxConcurrentChecks: 1
 icinga2::globals::reserved:
   - Acknowledgement
+  - ApiBindHost
+  - ApiBindPort
+  - ApiEnvironment
   - ApplicationType
+  - Array
   - AttachDebugger
   - BuildCompilerName
   - BuildCompilerVersion
   - BuildHostName
+  - Checkable
+  - Command
   - Concurrency
+  - ConfigObject
+  - Configuration
   - Critical
   - Custom
+  - CustomVarObject
+  - DateTime
   - Deprecated
+  - Dictionary
   - Down
   - DowntimeEnd
   - DowntimeRemoved
   - DowntimeStart
+  - Environment
   - FlappingEnd
   - FlappingStart
+  - Function
   - HostDown
   - HostUp
   - IncludeConfDir
@@ -38,14 +50,18 @@ icinga2::globals::reserved:
   - LocalStateDir
   - LogCritical
   - LogDebug
+  - Logger
   - LogInformation
   - LogNotice
   - LogWarning
   - Math
+  - MaxConcurrentChecks
   - ModAttrPath
+  - Namespace
   - NodeName
   - OK
   - ObjectsPath
+  - PerfdataValue
   - PidPath
   - PkgDataDir
   - PlatformArchitecture
@@ -56,6 +72,7 @@ icinga2::globals::reserved:
   - PrefixDir
   - Problem
   - Recovery
+  - Reference
   - RunAsGroup
   - RunAsUser
   - RunDir
@@ -64,8 +81,10 @@ icinga2::globals::reserved:
   - ServiceUnknown
   - ServiceWarning
   - StatePath
+  - StreamLogger
   - SysconfDir
   - System
+  - Type
   - Types
   - Unknown
   - Up
diff --git a/modules/icinga2/examples/apply_service.pp b/modules/icinga2/examples/apply_service.pp
old mode 100755
new mode 100644
diff --git a/modules/icinga2/examples/example2/hieradata/nodes/agent.local.yaml b/modules/icinga2/examples/example2/hieradata/nodes/agent.local.yaml
deleted file mode 100755
index 9c1d3cba..00000000
--- a/modules/icinga2/examples/example2/hieradata/nodes/agent.local.yaml
+++ /dev/null
@@ -1,30 +0,0 @@
----
-icinga2::manage_repo: true
-icinga2::confd: false
-icinga2::features:
-  - 'api'
-  - 'mainlog'
-icinga2::constants:
-  NodeName: "%{::fqdn}"
-  ZoneName: 'satellite'
-icinga2::feature::api::endpoints:
-  'agent.local': {}
-  'satellite.local':
-    host: 192.168.33.57
-icinga2::feature::api::zones:
-  satellite:
-    endpoints:
-      - 'satellite.local'
-  agent:
-    endpoints:
-      - 'agent.local'
-    parent: 'satellite'
-profiles::icinga2::icinga_agent::os_independent_zones:
-  'global-templates':
-    global: true
-profiles::icinga2::icinga_agent::windows_zones:
-  'windows-commands':
-    global: true
-profiles::icinga2::icinga_agent::linux_zones:
-  'linux-commands':
-    global: true
diff --git a/modules/icinga2/examples/example2/hieradata/nodes/master.local.yaml b/modules/icinga2/examples/example2/hieradata/nodes/master.local.yaml
deleted file mode 100755
index 0f98a166..00000000
--- a/modules/icinga2/examples/example2/hieradata/nodes/master.local.yaml
+++ /dev/null
@@ -1,62 +0,0 @@
----
-icinga2::manage_repo: true
-icinga2::confd: false
-icinga2::features:
-  - 'api'
-  - 'checker'
-  - 'mainlog'
-  - 'notification'
-  - 'statusdata'
-  - 'compatlog'
-  - 'command'
-  - 'idomysql'
-icinga2::constants:
-  NodeName: "%{::fqdn}"
-  ZoneName: 'master'
-icinga2::feature::api::endpoints:
-  'master.local': {}
-  'satellite.local':
-    host: 192.168.33.57
-icinga2::feature::api::zones:
-  master:
-    endpoints:
-      - 'master.local'
-  satellite:
-    endpoints:
-      - 'satellite.local'
-    parent: 'master'
-icinga2::feature::idomysql::user: 'icinga'
-icinga2::feature::idomysql::password: 'icingapassword'
-icinga2::feature::idomysql::database: 'icinga'
-icinga2::feature::idomysql::import_schema: true
-profiles::icinga2::icinga_master::zones:
-  'global-templates':
-    global: true
-  'windows-commands':
-    global: true
-  'linux-commands':
-    global: true
-mysql::server::root_password: 'supersecure' 
-mysql::server::databases:
-  icinga:
-    ensure: 'present'
-mysql::server::users:
-  'icinga@localhost':
-    ensure: 'present'
-    password_hash: '*C78C76985162B449CDE1FA2732002C8ACB175936' #icingapassword
-mysql::server::grants:
-  'icinga@localhost/icinga.*':
-    ensure: 'present'
-    privileges:
-      - 'ALTER'
-      - 'CREATE'
-      - 'SELECT'
-      - 'INSERT'
-      - 'UPDATE'
-      - 'DELETE'
-      - 'DROP'
-      - 'CREATE VIEW'
-      - 'INDEX'
-      - 'EXECUTE'
-    table: 'icinga.*'
-    user: 'icinga@localhost'
diff --git a/modules/icinga2/examples/example2/hieradata/nodes/satellite.local.yaml b/modules/icinga2/examples/example2/hieradata/nodes/satellite.local.yaml
deleted file mode 100755
index 3b4b52ea..00000000
--- a/modules/icinga2/examples/example2/hieradata/nodes/satellite.local.yaml
+++ /dev/null
@@ -1,29 +0,0 @@
----
-icinga2::manage_repo: true
-icinga2::confd: false
-icinga2::features:
-  - 'api'
-  - 'checker'
-  - 'mainlog'
-icinga2::constants:
-  NodeName: "%{::fqdn}"
-  ZoneName: 'satellite'
-icinga2::feature::api::endpoints:
-  'satellite.local': {}
-  'master.local':
-    host: 192.168.33.56
-icinga2::feature::api::zones:
-  master:
-    endpoints:
-      - 'master.local'
-  satellite:
-    endpoints:
-      - 'satellite.local'
-    parent: 'master'
-profiles::icinga2::icinga_satellite::zones:
-  'global-templates':
-    global: true
-  'windows-commands':
-    global: true
-  'linux-commands':
-    global: true
diff --git a/modules/icinga2/examples/example3/README.md b/modules/icinga2/examples/example3/README.md
deleted file mode 100755
index 8aa1bb51..00000000
--- a/modules/icinga2/examples/example3/README.md
+++ /dev/null
@@ -1,85 +0,0 @@
-## Example 3 – Using virtual resources and collection in a master-agent set-up.
-
-This is an (almost) complete example for a master-agent set-up using virtual resources in Puppet.
-
-__Note:__ If you're getting "_Error 400 on SERVER: "puppet.domain.tld" is not an Array. It looks to be a String at […]/modules/icinga2/manifests/object/zone.pp:51 on node node.domain.tld_" issues while applying this configuration on your nodes, you're most likely running into a [known bug in the Puppet parser](https://tickets.puppetlabs.com/browse/PUP-1299). In order to make this work, you will need to switch to the [Future Parser](https://docs.puppet.com/puppet/3.8/experiments_future.html):
-
-
-```
-# environment.conf
-manifest = site.pp
-modulepath = modules:site
-parser = future
-```
-
-### Manifests
-
-All nodes that should be monitored inherit from the _monitorednode_ role, thus applying the `profile::icinga::agent` class.
-
-Each monitored node exports itself as an endpoint and a zone. This information is then automatically collected on the master to generate the necessary configuration files.
-
-Agents also export a `Host` object (`@@icinga2::object::host`) and use hiera_hash() to get and assemble host properties from the respective hiera files throughout the hiera hierarchy.
-
-#### A word of caution on services and apply rules
-
-This set-up does not use any "manually" created `Service` objects, but _applies_ services to hosts based on their vars exclusively. The result is a much simplier Icinga2 configuration, among other things.
-
-There are two things to note here about `Apply Rules`:
-
-1. We don't use `icinga2::object::service` to define the apply rules, since the current version (0.7.1) of this Puppet module does not yet support the entire range of available functions and macros. Instead, we use `file` resources from a custom, dedicated module, together with the _icinga2::config::file_ tag. The tag makes sure the files will be put in place at the correct point in time and the icinga2 service restarted afterwards (see the module's [README](https://github.com/Icinga/puppet-icinga2#custom-configuration) for more information).
-
-An example for one such apply rule file would be:
-
-```
-apply Service "nginx-status" to Host {
-    import "generic-service"
-
-    vars += host.vars.checks["nginx-status"]
-    check_command = "nginx_status"
-    command_endpoint = host.vars.client_endpoint
-
-    assign where host.vars.os == "Linux" && host.vars.checks["nginx-status"]
-    ignore where !host.address || !host.vars.client_endpoint || !host.vars.checks
-}
-```
-
-2. Most apply rules are defined on the master and not on the individual nodes. Although it would be preferable to define apply rules as exported resources on the individual nodes – so that they are created only as additional services (profiles) are added to a node, this is not possible when you have more than one node with the same services in your infrastructure since it will lead to duplicate resource definitions.
-
-Compare the `profile::backuppc::server` manifest to the `profile::nginx` profile. In the first, you will find the apply rule definition is exported as a file resource to be collected in `profile::icinga::applyrules` at the very bottom, whereas the second does not contain any `Service` object at all.
-Apply rules for the _nginx_ profile have been defined in `profile::icinga::applyrules` since there are several nodes using this same profile.
-
-The nginx profile, however, additionally installs a check script that does not come with any of the _monitoring-plugins-*_ packages on Debian.
-
-### Hiera
-
-With a hiera hierarchy as the following (simplified), all nodes will consume both common.yaml and their dedicated yaml file, if they have one:
-
-```yaml
----
-:backends:
-  - yaml
-:hierarchy:
-  - "nodes/%{::fqdn}"
-  - common
-```
-
-In common.yaml, we define host vars valid for all hosts throughout the infrastructure, while in the respective nodes' yaml files, we define further checks and vars that apply to that host only.
-
-The icingamaster.yaml file contains most of the config necessary for the master configuration.
-
-It's important that we set empty endpoints and zones in this file, so they will not be automatically generated by the icinga2 module, which uses defaults if the values are not set.
-
-```yaml
-icinga2::feature::api::endpoints: {}
-icinga2::feature::api::zones: {}
-```
-
-We use hiera_array() and hiera_hash() lookup functions from the manifests in order to merge arrays and hashes from the various levels in our hierarchy, something that Puppet does not support with automatically looked up values (cf. https://tickets.puppetlabs.com/browse/HI-233)
-
-### Notes
-
-The example is not 100% complete, some of the profile classes that are not relevant to illustrate a master-agent set-up using virtual resources in Puppet are not included and are left as an exercise to the reader.
-
-### Disclaimer
-
-This example does not claim to be a perfect setup. You might have improvements to suggest and those are of course welcome.
diff --git a/modules/icinga2/examples/example3/hieradata/common.yaml b/modules/icinga2/examples/example3/hieradata/common.yaml
deleted file mode 100755
index 8bab8cc1..00000000
--- a/modules/icinga2/examples/example3/hieradata/common.yaml
+++ /dev/null
@@ -1,12 +0,0 @@
----
-classes:
- - 'profile::base'
-
-icinga_vars:
-  os: Linux
-  cores: "%{::processorcount}"
-  virtual_machine: "%{::is_virtual}"
-  distro: "%{::operatingsystem}"
-  disks:
-    'disk /':
-      disk_partitions: '/'
diff --git a/modules/icinga2/examples/example3/hieradata/nodes/icingamaster.yaml b/modules/icinga2/examples/example3/hieradata/nodes/icingamaster.yaml
deleted file mode 100755
index ec5e1658..00000000
--- a/modules/icinga2/examples/example3/hieradata/nodes/icingamaster.yaml
+++ /dev/null
@@ -1,31 +0,0 @@
----
-icinga2::manage_repo: true
-icinga2::confd: true
-icinga2::constants:
-  NodeName: "%{::fqdn}"
-  ZoneName: 'master'
-icinga2::features:
-  - 'api'
-  - 'checker'
-  - 'mainlog'
-  - 'notification'
-  - 'statusdata'
-  - 'compatlog'
-  - 'command'
-  - 'idomysql'
-  - 'graphite'
-  # - 'debuglog'
-
-icinga2::feature::api::accept_commands: true
-icinga2::feature::api::endpoints: {}
-icinga2::feature::api::zones: {}
-
-icinga2::feature::graphite::host: '192.168.1.8'
-icinga2::feature::graphite::port: '2003'
-icinga2::feature::graphite::enable_send_tresholds: true
-icinga2::feature::graphite::enable_send_metadata: true
-
-icinga2::feature::idomysql::database: icinga2
-icinga2::feature::idomysql::user: icinga2
-icinga2::feature::idomysql::password: "*************"
-icinga2::feature::idomysql::import_schema: true
diff --git a/modules/icinga2/examples/example3/hieradata/nodes/webserver.yaml b/modules/icinga2/examples/example3/hieradata/nodes/webserver.yaml
deleted file mode 100755
index 902e2600..00000000
--- a/modules/icinga2/examples/example3/hieradata/nodes/webserver.yaml
+++ /dev/null
@@ -1,17 +0,0 @@
----
-classes:
-  - 'role::webserver'
-
-icinga_vars:
-  client_endpoint: "%{::fqdn}"
-  role: http-server
-  vhosts:
-    sub.domain.tld:
-      uri: '/ping'
-  checks:
-    'nginx-status':
-      nginx_status_host_address: '127.0.0.1'
-      nginx_status_port: '8433'
-      nginx_status_url: '/nginx-status'
-      nginx_status_warn: '100,50,100'
-      nginx_status_critical: '200,100,200'
diff --git a/modules/icinga2/examples/example3/site.pp b/modules/icinga2/examples/example3/site.pp
deleted file mode 100755
index 7959e7b1..00000000
--- a/modules/icinga2/examples/example3/site.pp
+++ /dev/null
@@ -1 +0,0 @@
-hiera_include('classes')
diff --git a/modules/icinga2/examples/example3/site/profile/manifests/backuppc/server.pp b/modules/icinga2/examples/example3/site/profile/manifests/backuppc/server.pp
deleted file mode 100755
index d779221c..00000000
--- a/modules/icinga2/examples/example3/site/profile/manifests/backuppc/server.pp
+++ /dev/null
@@ -1,54 +0,0 @@
-class profile::backuppc::server {
-    class { '::backuppc::server': }
-    create_resources('backuppc::server::user', hiera('backuppc_users', []))
-
-    # Icinga CheckCommand and Apply Rules
-    @@icinga2::object::checkcommand { 'backuppc':
-        import      => [
-            'plugin-check-command',
-        ],
-        command     => [
-            'sudo', '-u', 'backuppc',
-            'PluginContribDir + /check_backuppc',
-        ],
-        arguments   => {
-            '-w' => '$backuppc_wtime$',
-            '-c' => '$backuppc_ctime$',
-            '-H' => {
-                'value' => '$backuppc_desired$',
-                'set_if' => '$backuppc_desired$',
-            },
-            '-x' => {
-                'value' => '$backuppc_exclude$',
-                'set_if' => '$backuppc_exclude$',
-            },
-            '-V' => {
-                'set_if' => '$backuppc_version$'
-            },
-            '-a' => {
-                'set_if' => '$backuppc_archiveonly$',
-            },
-            '-b' => {
-                'set_if' => '$backuppc_backuponly$',
-            },
-            '-s' => {
-                'set_if' => '$backuppc_statusonly$',
-            },
-        },
-        vars        => {
-            'backuppc_wtime' => '2',
-            'backuppc_ctime' => '4',
-        },
-        target      => '/etc/icinga2/zones.d/global-templates/backuppc-command.conf',
-    }
-
-    @@file { '/etc/icinga2/conf.d/services/backuppc.conf':
-        ensure  => file,
-        owner   => 'nagios',
-        group   => 'nagios',
-        tag     => 'icinga2::config::exported',
-        source => [
-            "puppet:///modules/1024/icinga/services/backuppc.conf",
-        ],
-    }
-}
diff --git a/modules/icinga2/examples/example3/site/profile/manifests/icinga/agent.pp b/modules/icinga2/examples/example3/site/profile/manifests/icinga/agent.pp
deleted file mode 100755
index ca9b3142..00000000
--- a/modules/icinga2/examples/example3/site/profile/manifests/icinga/agent.pp
+++ /dev/null
@@ -1,57 +0,0 @@
-class profile::icinga::agent {
-
-    # By default, the icinga module only installs monitoring-plugins-base
-    ensure_packages([
-        'monitoring-plugins-standard',
-        'nagios-plugins-contrib',
-        'libmonitoring-plugin-perl',
-    ], {
-        install_options => ['--no-install-recommends'],
-    })
-
-    # Options valid for all agents, thus defined inside the manifest
-    class { '::icinga2':
-        manage_repo => true,
-        confd       => false,
-        features    => [ 'mainlog' ],
-    }
-
-    # Leave this here or put it in a yaml file common
-    # to icinga agent nodes only.
-    class { '::icinga2::feature::api':
-        pki             => 'puppet',
-        accept_config   => true,
-        accept_commands => true,
-        endpoints       => {},
-        zones           => {},
-    }
-
-    icinga2::object::zone { 'global-templates':
-        global => true,
-    }
-
-    # All nodes export resources for icinga monitoring
-    # The vars (set in the various nodes hiera files) are used to Apply Services
-    # to these hosts. (See profile::icinga::server)
-    @@::icinga2::object::host { $::fqdn:
-        display_name            => $::fqdn,
-        address                 => $::ipaddress_eth0,
-        check_command           => 'hostalive',
-        vars                    => hiera_hash('icinga_vars', {}),
-        target                  => "/etc/icinga2/zones.d/master/${::fqdn}.conf"
-    }
-
-    # Create virtual resources for this agent node
-    @@::icinga2::object::endpoint { "$::fqdn":
-        host => "$::ipaddress_eth0",
-    }
-
-    @@::icinga2::object::zone { "$::fqdn":
-        endpoints => [ "$::fqdn", ],
-        parent    => 'master',
-    }
-
-    # Collect and realize info about self and master, but no other nodes.
-    Icinga2::Object::Endpoint <<| title == $::fqdn or title == 'master.sub.domain.tld' |>> { }
-    Icinga2::Object::Zone <<| title == $::fqdn or title == 'master' |>> { }
-}
diff --git a/modules/icinga2/examples/example3/site/profile/manifests/icinga/applyrules.pp b/modules/icinga2/examples/example3/site/profile/manifests/icinga/applyrules.pp
deleted file mode 100755
index 73b61096..00000000
--- a/modules/icinga2/examples/example3/site/profile/manifests/icinga/applyrules.pp
+++ /dev/null
@@ -1,53 +0,0 @@
-class profile::icinga::applyrules {
-
-    # Global apply rules
-    # We attempt to export them with the respective services where possible.
-    # However, that only works if the service is unique on the infrastructure and would
-    # not lead to duplicate resources.
-    #
-    # All multi-use (apply) services are defined here.
-    #
-    # We do not use "icinga2::object::service" but files with the "icinga2::config::file" tag. See the
-    # example's README on why this is the case.
-
-    file { '/etc/icinga2/conf.d/services/nginx.conf':
-        ensure  => file,
-        owner   => 'nagios',
-        group   => 'nagios',
-        tag     => 'icinga2::config::file',
-        source => [
-            "puppet:///modules/1024/icinga/services/nginx.conf",
-        ],
-    }
-
-    file { '/etc/icinga2/conf.d/services/postgres.conf':
-        ensure  => file,
-        owner   => 'nagios',
-        group   => 'nagios',
-        tag     => 'icinga2::config::file',
-        source => [
-            "puppet:///modules/1024/icinga/services/postgres.conf",
-        ],
-    }
-
-    file { '/etc/icinga2/conf.d/services/elasticsearch.conf':
-        ensure  => file,
-        owner   => 'nagios',
-        group   => 'nagios',
-        tag     => 'icinga2::config::file',
-        source => [
-            "puppet:///modules/1024/icinga/services/elasticsearch.conf",
-        ],
-    }
-
-    # Collect any files exported and tagged elsewhere (can be created inside
-    # services or master zone)
-    # We need to use a different tag then icinga itself (icinga2::config::file)
-    # or the agent will try to collect any resources tagged so on himself.
-    File <<| ensure != 'directory' and tag == 'icinga2::config::exported' |>> {
-        require => [
-            File['icinga2_masterzone'],
-            File['icinga2_services'],
-        ],
-    }
-}
diff --git a/modules/icinga2/examples/example3/site/profile/manifests/icinga/server.pp b/modules/icinga2/examples/example3/site/profile/manifests/icinga/server.pp
deleted file mode 100755
index 66ec15fb..00000000
--- a/modules/icinga2/examples/example3/site/profile/manifests/icinga/server.pp
+++ /dev/null
@@ -1,81 +0,0 @@
-class profile::icinga::server {
-
-    class { '::icinga2': }
-
-    icinga2::object::zone { 'global-templates':
-        global => true,
-    }
-
-    file { 'icinga2_global_templates':
-        path    => '/etc/icinga2/zones.d/global-templates',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    File <<| ensure != 'directory' and tag == 'icinga2::scripts::file' |>> { }
-
-    # Collect all hosts into their respective directories.
-    file { 'icinga2_masterzone':
-        path    => '/etc/icinga2/zones.d/master',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    file { 'icinga2_hosts':
-        path    => '/etc/icinga2/conf.d/hosts',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    Icinga2::Object::Host <<| |>> { }
-
-    # Export master zone and endpoint for all agents to collect
-    @@icinga2::object::zone { 'master':
-        endpoints => [ "$::fqdn", ],
-    }
-    @@icinga2::object::endpoint { "$::fqdn":
-        host => "$::ipaddress_eth0",
-    }
-
-    # Collect and realize all agent zones and endpoints
-    Icinga2::Object::Endpoint <<| |>> { }
-    Icinga2::Object::Zone <<| |>> { }
-
-    # Collect services and notifications exported on agent nodes
-    # (and not created by the Apply Rules included below)
-    file { 'icinga2_services':
-        path    => '/etc/icinga2/conf.d/services',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    Icinga2::Object::Service <<| |>> { }
-
-    file { 'icinga2_notifications':
-        path    => '/etc/icinga2/conf.d/notifications',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    Icinga2::Object::Notification <<| |>> { }
-
-    # Collect check and notification commands that are not created by Apply
-    file { 'icinga2_commands':
-        path    => '/etc/icinga2/conf.d/commands',
-        ensure  => directory,
-        purge   => true,
-        recurse => true,
-    }->
-    Icinga2::Object::Checkcommand <<| |>> { }->
-    Icinga2::Object::NotificationCommand <<| |>> { }
-
-    # Define apply rules that
-    contain profile::icinga::applyrules
-
-    # Note: these manifests are not included in this example
-    contain profile::icinga::hostgroups
-    contain profile::icinga::users
-    contain profile::icinga::timeperiods
-    contain profile::icinga::notifications
-    contain profile::icinga::checkcommands
-}
diff --git a/modules/icinga2/examples/example3/site/profile/manifests/nginx.pp b/modules/icinga2/examples/example3/site/profile/manifests/nginx.pp
deleted file mode 100755
index dc58bdcd..00000000
--- a/modules/icinga2/examples/example3/site/profile/manifests/nginx.pp
+++ /dev/null
@@ -1,25 +0,0 @@
-class profile::nginx {
-
-    # This profile can be used by many nodes and thus the node configuration is
-    # in the hiera file for the respective node!
-    class { '::nginx':
-        manage_repo => true,
-        package_source => 'nginx-stable'
-    }->
-    class { '::collectd::plugin::nginx':
-        url => 'http://localhost:8433/nginx-status',
-    }
-
-    # Icinga: install check into PluginContribDir
-    # (PluginContribDir could be a fact "icinga2 variable get PluginContribDir",
-    # but for that to work, puppet would probably have to run twice…)
-    file { '/usr/lib/nagios/plugins/check_nginx_status.pl':
-        ensure  => file,
-        mode    => '+x',
-        source => [
-            'puppet:///modules/1024/icinga/plugins/check_nginx_status.pl',
-        ],
-        require => Package['monitoring-plugins-standard'],
-    }
-
-}
diff --git a/modules/icinga2/examples/example3/site/role/manifests/icingamaster.pp b/modules/icinga2/examples/example3/site/role/manifests/icingamaster.pp
deleted file mode 100755
index b5ab919e..00000000
--- a/modules/icinga2/examples/example3/site/role/manifests/icingamaster.pp
+++ /dev/null
@@ -1,9 +0,0 @@
-class role::icingamaster {
-    contain profile::hosts
-    contain profile::letsencrypt
-    contain profile::nginx
-    contain profile::php
-    contain profile::mysqlserver
-    contain profile::icinga::server
-    contain profile::graylog::collector_sidecar
-}
diff --git a/modules/icinga2/examples/example3/site/role/manifests/monitorednode.pp b/modules/icinga2/examples/example3/site/role/manifests/monitorednode.pp
deleted file mode 100755
index 7f39fdc0..00000000
--- a/modules/icinga2/examples/example3/site/role/manifests/monitorednode.pp
+++ /dev/null
@@ -1,4 +0,0 @@
-class role::monitorednode {
-    contain profile::icinga::agent
-    contain profile::graylog::collector_sidecar
-}
diff --git a/modules/icinga2/examples/example3/site/role/manifests/webserver.pp b/modules/icinga2/examples/example3/site/role/manifests/webserver.pp
deleted file mode 100755
index 429f1ded..00000000
--- a/modules/icinga2/examples/example3/site/role/manifests/webserver.pp
+++ /dev/null
@@ -1,4 +0,0 @@
-class role::webserver inherits role::monitorednode {
-    contain profile::php
-    contain profile::nginx
-}
diff --git a/modules/icinga2/examples/example4/README.md b/modules/icinga2/examples/example4/README.md
deleted file mode 100755
index eaffa984..00000000
--- a/modules/icinga2/examples/example4/README.md
+++ /dev/null
@@ -1,12 +0,0 @@
-NOTICE: This example is for Puppet 4 only.
-
-The following syntax that's used in profile::icinga2::agent and profile::icinga2::slave is for Puppet 4.
-```
-  @@::icinga2::object::host { $::fqdn:
-    * => merge({
-      display_name => $::hostname,
-      address      => $agent_ip,
-      target       => "/etc/icinga2/zones.d/${parent_zone}/${::hostname}.conf",
-    }, hiera_hash(icinga2::host)),
-  }
-```
diff --git a/modules/icinga2/examples/example4/hiera.yaml b/modules/icinga2/examples/example4/hiera.yaml
deleted file mode 100755
index d0c9f101..00000000
--- a/modules/icinga2/examples/example4/hiera.yaml
+++ /dev/null
@@ -1,12 +0,0 @@
----
-:backends:
-  - yaml
-:hierarchy:
-  - "nodes/%{::trusted.certname}"
-  - "%{::domain}"
-  - "%{::kernel}"
-  - common
-:merge_behavior: deeper
-
-:yaml:
-  :datadir:
diff --git a/modules/icinga2/examples/example4/hieradata/Linux.yaml b/modules/icinga2/examples/example4/hieradata/Linux.yaml
deleted file mode 100755
index befa1e37..00000000
--- a/modules/icinga2/examples/example4/hieradata/Linux.yaml
+++ /dev/null
@@ -1,9 +0,0 @@
----
-icinga2::host:
-  vars:
-    os: Linux
-    disks:
-      'disk /':
-        disk_partition: /
-  import:
-    - linux-host
diff --git a/modules/icinga2/examples/example4/hieradata/example.local.yaml b/modules/icinga2/examples/example4/hieradata/example.local.yaml
deleted file mode 100755
index 6aabf16a..00000000
--- a/modules/icinga2/examples/example4/hieradata/example.local.yaml
+++ /dev/null
@@ -1,5 +0,0 @@
----
-profile::icinga2::agent::parent_endpoints:
-  'master.example.local':
-    host: 172.16.1.11
-profile::icinga2::agent::parent_zone: master
diff --git a/modules/icinga2/examples/example4/hieradata/example.org.yaml b/modules/icinga2/examples/example4/hieradata/example.org.yaml
deleted file mode 100755
index eb691ec9..00000000
--- a/modules/icinga2/examples/example4/hieradata/example.org.yaml
+++ /dev/null
@@ -1,5 +0,0 @@
----
-profile::icinga2::agent::parent_endpoints:
-  'slave.example.org':
-    host: 172.16.2.11
-profile::icinga2::agent::parent_zone: dmz
diff --git a/modules/icinga2/examples/example4/hieradata/nodes/example.domain.org.yaml b/modules/icinga2/examples/example4/hieradata/nodes/example.domain.org.yaml
deleted file mode 100755
index 76fdb81f..00000000
--- a/modules/icinga2/examples/example4/hieradata/nodes/example.domain.org.yaml
+++ /dev/null
@@ -1,9 +0,0 @@
----
-icinga2::host:
-  vars:
-    disks:
-      'disk /':
-        disk_wfree: 10%
-        disk_cfree: 5%
-  import:
-    - postgres-dbms
diff --git a/modules/icinga2/examples/example4/hieradata/nodes/slave.example.org.yaml b/modules/icinga2/examples/example4/hieradata/nodes/slave.example.org.yaml
deleted file mode 100755
index b8a295ae..00000000
--- a/modules/icinga2/examples/example4/hieradata/nodes/slave.example.org.yaml
+++ /dev/null
@@ -1,4 +0,0 @@
----
-profile::icinga2::slave::slave_zone: dmz
-profile::icinga2::slave::parent_endpoints:
-  - 'master.example.org'
diff --git a/modules/icinga2/examples/example4/profile/files/icinga2/templates.conf b/modules/icinga2/examples/example4/profile/files/icinga2/templates.conf
deleted file mode 100755
index 791f5521..00000000
--- a/modules/icinga2/examples/example4/profile/files/icinga2/templates.conf
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Generic template examples.
- */
-
-
-/**
- * Provides default settings for hosts. By convention
- * all hosts should import this template.
- *
- * The CheckCommand object `hostalive` is provided by
- * the plugin check command templates.
- * Check the documentation for details.
- */
-template Host "generic-host" {
-  max_check_attempts = 3
-  check_interval = 1m
-  retry_interval = 30s
-
-  check_command = "hostalive"
-}
-
-template Host "linux-host" {
-  import "generic-host"
-
-  vars.os = "Linux"
-  vars.disks["disk /"] = {
-    disk_partition = "/"
-  }
-}
-
-template Host "postgres-dbms" {
-}
-
-/**
- * Provides default settings for services. By convention
- * all services should import this template.
- */
-template Service "generic-service" {
-  max_check_attempts = 5
-  check_interval = 1m
-  retry_interval = 30s
-}
-
-/**
- * Provides default settings for users. By convention
- * all users should inherit from this template.
- */
-
-template User "generic-user" {
-
-}
-
-/**
- * Provides default settings for host notifications.
- * By convention all host notifications should import
- * this template.
- */
-template Notification "mail-host-notification" {
-  command = "mail-host-notification"
-
-  states = [ Up, Down ]
-  types = [ Problem, Acknowledgement, Recovery, Custom,
-            FlappingStart, FlappingEnd,
-            DowntimeStart, DowntimeEnd, DowntimeRemoved ]
-
-  period = "24x7"
-}
-
-/**
- * Provides default settings for service notifications.
- * By convention all service notifications should import
- * this template.
- */
-template Notification "mail-service-notification" {
-  command = "mail-service-notification"
-
-  states = [ OK, Warning, Critical, Unknown ]
-  types = [ Problem, Acknowledgement, Recovery, Custom,
-            FlappingStart, FlappingEnd,
-            DowntimeStart, DowntimeEnd, DowntimeRemoved ]
-
-  period = "24x7"
-}
diff --git a/modules/icinga2/examples/example4/profile/manifests/agent.pp b/modules/icinga2/examples/example4/profile/manifests/agent.pp
deleted file mode 100755
index e0db31bf..00000000
--- a/modules/icinga2/examples/example4/profile/manifests/agent.pp
+++ /dev/null
@@ -1,57 +0,0 @@
-# Notice: this code contains Puppet 4 syntax! It doesn't run on Puppet 3.
-class profile::icinga2::agent(
-  Hash                       $parent_endpoints,
-  String                     $parent_zone,
-  Stdlib::Compat::Ip_address $agent_ip = $::ipaddress,
-) {
-
-  contain ::profile::icinga2::plugins
-
-  class { '::icinga2':
-    manage_repo => true,
-    confd       => false,
-    features    => ['mainlog'],
-  }
-
-  # Feature: api
-  class { '::icinga2::feature::api':
-    accept_config   => true,
-    accept_commands => true,
-    zones           => {
-      'ZoneName' => {
-        'endpoints' => [ 'NodeName' ],
-        'parent'    => $parent_zone,
-      },
-    },
-  }
-
-  ::icinga2::object::zone { 'linux-commands':
-    global => true,
-    order  => '47',
-  }
-
-  create_resources('icinga2::object::endpoint', $parent_endpoints)
-
-  ::icinga2::object::zone { $parent_zone:
-    endpoints => keys($parent_endpoints),
-  }
-
-  @@::icinga2::object::endpoint { $::fqdn:
-    target => "/etc/icinga2/zones.d/${parent_zone}/${::hostname}.conf",
-  }
-
-  @@::icinga2::object::zone { $::fqdn:
-    endpoints => [ $::fqdn ],
-    parent    => $parent_zone,
-    target    => "/etc/icinga2/zones.d/${parent_zone}/${::hostname}.conf",
-  }
-
-  @@::icinga2::object::host { $::fqdn:
-    # Puppet 4 syntax
-    * => merge({
-      display_name => $::hostname,
-      address      => $agent_ip,
-      target       => "/etc/icinga2/zones.d/${parent_zone}/${::hostname}.conf",
-    }, hiera_hash(icinga2::host)),
-  }
-}
diff --git a/modules/icinga2/examples/example4/profile/manifests/master.pp b/modules/icinga2/examples/example4/profile/manifests/master.pp
deleted file mode 100755
index af9525cd..00000000
--- a/modules/icinga2/examples/example4/profile/manifests/master.pp
+++ /dev/null
@@ -1,92 +0,0 @@
-class profile::icinga2::master {
-
-  contain ::profile::icinga2::plugins
-
-  class { '::icinga2':
-    manage_repo    => true,
-    purge_features => false,
-    confd          => false,
-    constants      => {
-      'ZoneName' => 'master',
-    }
-  }
-
-  # Feature: api
-  class { '::icinga2::feature::api':
-    accept_commands => true,
-    accept_config   => true,
-  }
-
-  icinga2::object::zone { ['global-templates', 'windows-commands', 'linux-commands']:
-    global => true,
-    order  => '47',
-  }
-
-  # Zone directories
-  file { ['/etc/icinga2/zones.d/master',
-    '/etc/icinga2/zones.d/windows-commands',
-    '/etc/icinga2/zones.d/linux-commands',
-    '/etc/icinga2/zones.d/global-templates']:
-    ensure => directory,
-    owner  => 'icinga',
-    group  => 'icinga',
-    mode   => '0750',
-    tag    => 'icinga2::config::file',
-  }
-
-  File <<| tag == "icinga2::slave::zone" |>>
-
-  # Static Icinga 2 objects
-  ::icinga2::object::service { 'ping4':
-    import        => ['generic-service'],
-    apply         => true,
-    check_command => 'ping',
-    assign        => ['host.address'],
-    target        => '/etc/icinga2/zones.d/global-templates/services.conf',
-  }
-
-  ::icinga2::object::service { 'cluster zone':
-    import        => ['generic-service'],
-    apply         => true,
-    check_command => 'cluster-zone',
-    assign        => ['host.vars.os == Linux || host.vars.os == Windows'],
-    ignore        => ['host.vars.noagent'],
-    target        => '/etc/icinga2/zones.d/global-templates/services.conf',
-  }
-
-  ::icinga2::object::service { 'linux_load':
-    import           => ['generic-service'],
-    service_name     => 'load',
-    apply            => true,
-    check_command    => 'load',
-    command_endpoint => 'host.name',
-    assign           => ['host.vars.os == Linux'],
-    ignore           => ['host.vars.noagent'],
-    target           => '/etc/icinga2/zones.d/global-templates/services.conf',
-  }
-
-  ::icinga2::object::service { 'linux_disks':
-    import           => ['generic-service'],
-    apply            => 'disk_name => config in host.vars.disks',
-    check_command    => 'disk',
-    command_endpoint => 'host.name',
-    vars             => 'vars + config',
-    assign           => ['host.vars.os == Linux'],
-    ignore           => ['host.vars.noagent'],
-    target           => '/etc/icinga2/zones.d/global-templates/services.conf',
-  }
-
-  # Collect objects
-  ::Icinga2::Object::Endpoint <<| |>>
-  ::Icinga2::Object::Zone <<| |>>
-  ::Icinga2::Object::Host <<| |>>
-
-  # Static config files
-  file { '/etc/icinga2/zones.d/global-templates/templates.conf':
-    ensure => file,
-    owner  => 'icinga',
-    group  => 'icinga',
-    mode   => '0640',
-    source => 'puppet:///modules/profile/icinga2/templates.conf',
-  }
-}
diff --git a/modules/icinga2/examples/example4/profile/manifests/plugins.pp b/modules/icinga2/examples/example4/profile/manifests/plugins.pp
deleted file mode 100755
index 932c9a4c..00000000
--- a/modules/icinga2/examples/example4/profile/manifests/plugins.pp
+++ /dev/null
@@ -1,9 +0,0 @@
-class profile::icinga2::plugins {
-
-  case $::kernel {
-    'linux': {
-      package { 'nagios-plugins-all': }
-    }
-  }
-
-}
diff --git a/modules/icinga2/examples/example4/profile/manifests/slave.pp b/modules/icinga2/examples/example4/profile/manifests/slave.pp
deleted file mode 100755
index bd793e52..00000000
--- a/modules/icinga2/examples/example4/profile/manifests/slave.pp
+++ /dev/null
@@ -1,77 +0,0 @@
-# Notice: this code contains Puppet 4 syntax! It doesn't run on Puppet 3.
-class profile::icinga2::slave(
-  String                     $slave_zone,
-  Array                      $parent_endpoints,
-  String                     $parent_zone = 'master',
-  Stdlib::Compat::Ip_address $slave_ip = $::ipaddress,
-) {
-
-  contain ::profile::icinga2::plugins
-
-  class { '::icinga2':
-    manage_repo => true,
-    confd       => false,
-    features    => ['checker','mainlog'],
-    constants   => {
-      'ZoneName' => $slave_zone,
-    },
-  }
-
-  # Feature: api
-  class { '::icinga2::feature::api':
-    accept_config   => true,
-    accept_commands => true,
-    zones           => {
-      'ZoneName' => {
-        'endpoints' => [ 'NodeName' ],
-        'parent'    => $parent_zone,
-      },
-    },
-  }
-
-  ::icinga2::object::endpoint { $parent_endpoints: }
-
-  ::icinga2::object::zone { $parent_zone:
-    endpoints => $parent_endpoints,
-  }
-
-  ::icinga2::object::zone { ['global-templates', 'windows-commands', 'linux-commands']:
-    global => true,
-    order  => '47',
-  }
-
-  @@::icinga2::object::endpoint { $::fqdn:
-    host => $slave_ip,
-    tag  => "icinga2::parent::${parent_zone}",
-  }
-
-  @@::icinga2::object::zone { $slave_zone:
-    endpoints => [ $::fqdn ],
-    parent    => $parent_zone,
-    tag       => "icinga2::parent::${parent_zone}",
-  }
-
-  @@file { "/etc/icinga2/zones.d/${slave_zone}":
-    ensure => directory,
-    owner  => 'icinga',
-    group  => 'icinga',
-    mode   => '0750',
-    tag    => 'icinga2::slave::zone',
-  }
-
-  ::Icinga2::Object::Endpoint <<| tag == "icinga2::parent::${slave_zone}" |>>
-  ::Icinga2::Object::Zone <<| tag == "icinga2::parent::${slave_zone}" |>>
-
-  @@::icinga2::object::host { $::fqdn:
-    # Puppet 4 syntax
-    * => deep_merge({
-      display_name => $::hostname,
-      address      => $slave_ip,
-      target       => "/etc/icinga2/zones.d/${slave_zone}/${::hostname}.conf",
-      zone         => $parent_zone,
-      vars         => {
-        'cluster_zone' => $slave_zone,
-      },
-    }, hiera_hash(icinga2::host)),
-  }
-}
diff --git a/modules/icinga2/examples/example_config.pp b/modules/icinga2/examples/example_config.pp
old mode 100755
new mode 100644
index decccc4e..5482b45f
--- a/modules/icinga2/examples/example_config.pp
+++ b/modules/icinga2/examples/example_config.pp
@@ -1,17 +1,19 @@
 class { '::icinga2':
-  manage_repo => true,
-  confd       => 'example.d',
+  manage_repos => true,
+  confd        => 'example.d',
 }
 
 file { '/etc/icinga2/example.d':
-  ensure => directory,
-  tag    => 'icinga2::config::file',
+  ensure  => directory,
+  tag     => 'icinga2::config::file',
+  purge   => true,
+  recurse => true,
 }
 
 
-/*
- * Hosts
- */
+#
+# Hosts
+#
 ::icinga2::object::host { 'generic-host':
   template           => true,
   target             => '/etc/icinga2/example.d/templates.conf',
@@ -26,16 +28,16 @@ file { '/etc/icinga2/example.d':
   import   => [ 'generic-host' ],
   address  => '127.0.0.1',
   address6 => '::1',
-  vars           => {
+  vars     => {
     os           => 'Linux',
     http_vhosts  => {
       http       => {
         http_uri => '/',
       },
     },
-    disks              => {
-      disk             => {},
-      'disk /'         => {
+    disks        => {
+      disk     => {},
+      'disk /' => {
         disk_partition => '/',
       },
     },
@@ -59,9 +61,9 @@ file { '/etc/icinga2/example.d':
   assign       => [ 'host.vars.os == Windows' ],
 }
 
-/*
- * Services
- */
+#
+# Services
+#
 ::icinga2::object::service { 'generic-service':
   template           => true,
   target             => '/etc/icinga2/example.d/templates.conf',
@@ -99,15 +101,15 @@ file { '/etc/icinga2/example.d':
   apply         => 'vhost => config in host.vars.http_vhosts',
   import        => [ 'generic-service' ],
   check_command => 'http',
-  vars          => 'vars + config',
+  vars          => '+ config',
 }
 
 ::icinga2::object::service { 'disk':
   target        => '/etc/icinga2/example.d/services.conf',
-  apply         => 'fs => config in host.vars.disks',
+  apply         => 'disk => config in host.vars.disks',
   import        => [ 'generic-service' ],
-  check_command => 'disk',
-  vars          => 'vars + config',
+  check_command => '-:"disk"',
+  vars          => '+ config',
 }
 
 ::icinga2::object::service { 'icinga':
@@ -119,11 +121,11 @@ file { '/etc/icinga2/example.d':
 }
 
 ::icinga2::object::service { 'load':
-  target            => '/etc/icinga2/example.d/services.conf',
-  apply             => true,
-  import            => [ 'generic-service' ],
-  check_command     => 'load',
-  vars              => {
+  target        => '/etc/icinga2/example.d/services.conf',
+  apply         => true,
+  import        => [ 'generic-service' ],
+  check_command => 'load',
+  vars          => {
     backup_downtime => '02:00-03:00',
   },
   assign        => [ 'host.name == NodeName' ],
@@ -164,9 +166,9 @@ file { '/etc/icinga2/example.d':
 }
 
 
-/*
- * Users
- */
+#
+# Users
+#
 ::icinga2::object::user { 'generic-user':
   template => true,
   target   => '/etc/icinga2/example.d/templates.conf',
@@ -186,7 +188,7 @@ file { '/etc/icinga2/example.d':
   apply_target => 'Service',
   author       => 'icingaadmin',
   comment      => 'Scheduled downtime for backup',
-  ranges   => {
+  ranges       => {
     monday    => 'service.vars.backup_downtime',
     tuesday   => 'service.vars.backup_downtime',
     wednesday => 'service.vars.backup_downtime',
@@ -195,7 +197,7 @@ file { '/etc/icinga2/example.d':
     saturday  => 'service.vars.backup_downtime',
     sunday    => 'service.vars.backup_downtime',
   },
-  assign => [ 'service.vars.backup_downtime' ],
+  assign       => [ 'service.vars.backup_downtime' ],
 }
 
 ::icinga2::object::user { 'icingaadmin':
@@ -212,9 +214,9 @@ file { '/etc/icinga2/example.d':
 }
 
 
-/*
- * Notifications
- */
+#
+# Notifications
+#
 ::icinga2::object::notificationcommand { 'mail-host-notification':
   target  => '/etc/icinga2/example.d/commands.conf',
   command => [ 'SysconfDir + /icinga2/scripts/mail-host-notification.sh' ],
@@ -292,9 +294,9 @@ file { '/etc/icinga2/example.d':
 }
 
 
-/*
- * Timeperiods
- */
+#
+# Timeperiods
+#
 ::icinga2::object::timeperiod { '24x7':
   target       => '/etc/icinga2/example.d/timeperiods.conf',
   import       => [ 'legacy-timeperiod' ],
diff --git a/modules/icinga2/examples/example_service_mysql.pp b/modules/icinga2/examples/example_service_mysql.pp
old mode 100755
new mode 100644
index 9aec3da0..f5efb202
--- a/modules/icinga2/examples/example_service_mysql.pp
+++ b/modules/icinga2/examples/example_service_mysql.pp
@@ -19,28 +19,27 @@
 #   Example:
 #   mysql_health_name => '-:"SELECT COUNT(*) FROM t1;"'
 #
-/*
- * Icinga2
- */
 class { '::icinga2':
-  manage_repo => true,
-  confd       => 'example.d',
+  manage_repos => true,
+  confd        => 'example.d',
 }
 
 file { '/etc/icinga2/example.d':
-  ensure => directory,
-  tag    => 'icinga2::config::file',
+  ensure  => directory,
+  tag     => 'icinga2::config::file',
+  purge   => true,
+  recurse => true,
 }
 
-/*
- * MySQL
- */
+#
+# MySQL
+#
 class { '::mysql::server':
   root_password           => 'secret',
   remove_default_accounts => true,
 }
 
-mysq::db { 'icinga2':
+mysql::db { 'icinga2':
   user     => 'icinga2',
   password => 'icinga2',
   host     => 'localhost',
@@ -50,9 +49,9 @@ mysq::db { 'icinga2':
   ],
 }
 
-/*
- * Hosts
- */
+#
+# Hosts
+#
 ::icinga2::object::host { 'generic-host':
   template           => true,
   target             => '/etc/icinga2/example.d/templates.conf',
@@ -89,24 +88,31 @@ mysq::db { 'icinga2':
   },
 }
 
-/*
- * Services
- */
+#
+# Services
+#
+::icinga2::object::service { 'generic-service':
+  template           => true,
+  target             => '/etc/icinga2/example.d/templates.conf',
+  check_interval     => '1m',
+  retry_interval     => '30s',
+  max_check_attempts => 5,
+}
+
 ::icinga2::object::service { 'mysql':
   target        => '/etc/icinga2/example.d/services.conf',
   apply         => 'mysql => config in host.vars.mysql',
   import        => ['generic-service'],
-  check_command => 'mysql',
+  check_command => '-:"mysql"',
   assign        => ['host.vars.mysql'],
   vars          => 'vars + config',
 }
 
 ::icinga2::object::service { 'mysql_health':
-  target           => '/etc/icinga2/example.d/services.conf',
-  apply            => 'mysql_health => config in host.vars.mysql_health',
-  import           => ['generic-service'],
-  check_command    => 'mysql_health',
-  command_endpoint => 'host.vars.client_endpoint',
-  assign           => ['host.vars.mysql_health'],
-  vars             => 'vars + config',
+  target        => '/etc/icinga2/example.d/services.conf',
+  apply         => 'mysql_health => config in host.vars.mysql_health',
+  import        => ['generic-service'],
+  check_command => '-:"mysql_health"',
+  assign        => ['host.vars.mysql_health'],
+  vars          => 'vars + config',
 }
diff --git a/modules/icinga2/examples/hostgroup.pp b/modules/icinga2/examples/hostgroup.pp
old mode 100755
new mode 100644
diff --git a/modules/icinga2/examples/init.pp b/modules/icinga2/examples/init.pp
old mode 100755
new mode 100644
diff --git a/modules/icinga2/examples/init_api.pp b/modules/icinga2/examples/init_api.pp
old mode 100755
new mode 100644
index c2250a6f..1ff420ac
--- a/modules/icinga2/examples/init_api.pp
+++ b/modules/icinga2/examples/init_api.pp
@@ -1,6 +1,4 @@
-class { 'icinga2':
-  manage_repo => true,
-}
+class { 'icinga2': }
 
 class { '::icinga2::feature::api':
   pki => none,
@@ -17,14 +15,14 @@ include ::icinga2::pki::ca
 
 ::icinga2::object::apiuser { 'icingaweb2':
   ensure      => present,
-  password    => '12e2ef553068b519',
+  password    => Sensitive('read(write'),
   permissions => [ 'status/query', 'actions/*', 'objects/modify/*', 'objects/query/*' ],
   target      => '/etc/icinga2/conf.d/api-users.conf',
 }
 
 ::icinga2::object::apiuser { 'read':
   ensure      => present,
-  password    => 'read',
+  password    => 'rea)d',
   permissions => [
     {
       permission => 'objects/query/Host',
diff --git a/modules/icinga2/examples/init_command.pp b/modules/icinga2/examples/init_command.pp
old mode 100755
new mode 100644
diff --git a/modules/icinga2/examples/init_confd.pp b/modules/icinga2/examples/init_confd.pp
old mode 100755
new mode 100644
index 20e13f4f..a9151996
--- a/modules/icinga2/examples/init_confd.pp
+++ b/modules/icinga2/examples/init_confd.pp
@@ -1,5 +1,4 @@
 class { 'icinga2':
-  manage_repo => true,
   confd       => '/etc/icinga2/local.d',
 }
 
diff --git a/modules/icinga2/examples/init_file.pp b/modules/icinga2/examples/init_file.pp
old mode 100755
new mode 100644
diff --git a/modules/icinga2/examples/init_idomysql.pp b/modules/icinga2/examples/init_idomysql.pp
old mode 100755
new mode 100644
index e7fa498d..f9eaea3e
--- a/modules/icinga2/examples/init_idomysql.pp
+++ b/modules/icinga2/examples/init_idomysql.pp
@@ -1,21 +1,28 @@
+$password = Sensitive('super(secret')
+
 include ::mysql::server
 
 mysql::db { 'icinga2':
   user     => 'icinga2',
-  password => 'supersecret',
+  password => $password,
   host     => 'localhost',
   grant    => ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'DROP', 'CREATE VIEW', 'CREATE', 'INDEX', 'EXECUTE', 'ALTER'],
 }
 
 class { '::icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 
+notice($password)
+
 class{ '::icinga2::feature::idomysql':
   user          => 'icinga2',
-  password      => 'supersecret',
+  password      => $password,
   database      => 'icinga2',
   import_schema => true,
   require       => Mysql::Db['icinga2'],
+  cleanup       => {
+    hostchecks_age    => '3m',
+    servicechecks_age => '36h',
+  },
 }
-
diff --git a/modules/icinga2/examples/init_idomysql_ssl.pp b/modules/icinga2/examples/init_idomysql_ssl.pp
old mode 100755
new mode 100644
index 05f17ebb..74f1aa7a
--- a/modules/icinga2/examples/init_idomysql_ssl.pp
+++ b/modules/icinga2/examples/init_idomysql_ssl.pp
@@ -97,14 +97,14 @@ mysql::db { 'icinga':
 }
 
 class { '::icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 
 class{ '::icinga2::feature::idomysql':
   user            => 'icinga',
   password        => 'supersecret',
   database        => 'icinga',
-  import_schema   => true,
+  import_schema   => $::mysql::params::provider,
   enable_ssl      => true,
   ssl_key_path    => '/etc/mysql/server-key.pem',
   ssl_cert_path   => '/etc/mysql/server-cert.pem',
diff --git a/modules/icinga2/examples/init_idopgsql.pp b/modules/icinga2/examples/init_idopgsql.pp
old mode 100755
new mode 100644
index 687f5dee..ef7452b1
--- a/modules/icinga2/examples/init_idopgsql.pp
+++ b/modules/icinga2/examples/init_idopgsql.pp
@@ -1,18 +1,22 @@
+$password = Sensitive('super(secret')
+
 include ::postgresql::server
 
 postgresql::server::db { 'icinga2':
   user     => 'icinga2',
-  password => postgresql_password('icinga2', 'supersecret'),
+  password => postgresql::postgresql_password('icinga2', $password.unwrap),
 }
 
 class{ 'icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 
+notice($password)
+
 class{ 'icinga2::feature::idopgsql':
-  user          => "icinga2",
-  password      => "supersecret",
-  database      => "icinga2",
+  user          => 'icinga2',
+  password      => $password,
+  database      => 'icinga2',
   import_schema => true,
   require       => Postgresql::Server::Db['icinga2'],
 }
diff --git a/modules/icinga2/examples/init_influxdb.pp b/modules/icinga2/examples/init_influxdb.pp
old mode 100755
new mode 100644
index 52334a37..67db40ee
--- a/modules/icinga2/examples/init_influxdb.pp
+++ b/modules/icinga2/examples/init_influxdb.pp
@@ -1,5 +1,11 @@
 class { 'icinga2':
-  manage_repo => true,
+  manage_repos => true,
 }
 
-include icinga2::feature::influxdb
+class { '::icinga2::feature::influxdb':
+  password   => Sensitive('super(secret'),
+  basic_auth => {
+    username => 'icinga2',
+    password => Sensitive('super(secret'),
+  },
+}
diff --git a/modules/icinga2/examples/init_master.pp b/modules/icinga2/examples/init_master.pp
deleted file mode 100755
index f522c3cc..00000000
--- a/modules/icinga2/examples/init_master.pp
+++ /dev/null
@@ -1,20 +0,0 @@
-class { '::icinga2':
-  manage_repo => true,
-  constants   => {
-    'NodeName'   => 'master.localdomain',
-    'ZoneName'   => 'master',
-    'TicketSalt' => '5a3d695b8aef8f18452fc494593056a4',
-  }
-}
-
-class { '::icinga2::feature::api':
-  pki             => 'none',
-  zones           => {
-    'master' => {
-      'endpoints' => [ 'NodeName' ],
-    },
-  }
-}
-
-class { '::icinga2::pki::ca': }
-
diff --git a/modules/icinga2/examples/init_package.pp b/modules/icinga2/examples/init_package.pp
old mode 100755
new mode 100644
index 99bc634f..9af5ff4c
--- a/modules/icinga2/examples/init_package.pp
+++ b/modules/icinga2/examples/init_package.pp
@@ -1,7 +1,10 @@
+include ::icinga2::repo
+
 package { 'icinga2':
   ensure => latest,
+  notify => Class['icinga2'],
 }
-~>
+
 class { '::icinga2':
-  manage_package => false,
+  manage_packages => false,
 }
diff --git a/modules/icinga2/examples/init_package_idomysql.pp b/modules/icinga2/examples/init_package_idomysql.pp
old mode 100755
new mode 100644
index bb977d37..db7f6b8f
--- a/modules/icinga2/examples/init_package_idomysql.pp
+++ b/modules/icinga2/examples/init_package_idomysql.pp
@@ -1,9 +1,12 @@
+include ::icinga2::repo
+
 package { ['icinga2', 'icinga2-ido-mysql']:
   ensure => latest,
+  notify => Class['icinga2'],
 }
-~>
+
 class { 'icinga2':
-  manage_package => false,
+  manage_packages => false,
 }
 
 include icinga2::feature::idomysql
diff --git a/modules/icinga2/examples/init_package_idopgsql.pp b/modules/icinga2/examples/init_package_idopgsql.pp
old mode 100755
new mode 100644
index 1f47eee2..88f57891
--- a/modules/icinga2/examples/init_package_idopgsql.pp
+++ b/modules/icinga2/examples/init_package_idopgsql.pp
@@ -1,15 +1,18 @@
+include ::icinga2::repo
+
 package { ['icinga2', 'icinga2-ido-pgsql']:
   ensure => latest,
+  notify => Class['icinga2'],
 }
-~>
+
 class{ 'icinga2':
-  manage_package => false,
+  manage_packages => false,
 }
 
 class{ 'icinga2::feature::idopgsql':
-  host => "127.0.0.1",
-  user => "icinga2",
-  password => "icinga2",
-  database => "icinga2",
-  import_schema => true
+  host          => '127.0.0.1',
+  user          => 'icinga2',
+  password      => 'icinga2',
+  database      => 'icinga2',
+  import_schema => true,
 }
diff --git a/modules/icinga2/examples/init_plugins.pp b/modules/icinga2/examples/init_plugins.pp
old mode 100755
new mode 100644
index aa52becf..eae3b37c
--- a/modules/icinga2/examples/init_plugins.pp
+++ b/modules/icinga2/examples/init_plugins.pp
@@ -1,4 +1,3 @@
 class { 'icinga2':
-  manage_repo => true,
   plugins     => [ 'plugins', 'plugins-contrib', 'windows-plugins', 'nscp' ]
 }
diff --git a/modules/icinga2/examples/init_repo.pp b/modules/icinga2/examples/init_repo.pp
deleted file mode 100755
index 295433d2..00000000
--- a/modules/icinga2/examples/init_repo.pp
+++ /dev/null
@@ -1,3 +0,0 @@
-class { 'icinga2':
-  manage_repo => true,
-}
diff --git a/modules/icinga2/examples/init_slave.pp b/modules/icinga2/examples/init_slave.pp
deleted file mode 100755
index 6cc4ec19..00000000
--- a/modules/icinga2/examples/init_slave.pp
+++ /dev/null
@@ -1,32 +0,0 @@
-$master_cert = 'master.localdomain'
-$master_ip   = '192.168.5.16'
-
-class { '::icinga2':
-  manage_repo  => true,
-  constants    => {
-    'NodeName' => 'slave.localdomain',
-  },
-}
-
-class { '::icinga2::feature::api':
-  pki             => 'icinga2',
-  ca_host         => $master_ip,
-  ticket_salt     => '5a3d695b8aef8f18452fc494593056a4',
-  accept_config   => true,
-  accept_commands => true,
-  endpoints       => {
-    'NodeName'       => {},
-    "${master_cert}" => {
-      'host' => $master_ip,
-    }
-  },
-  zones           => {
-    'ZoneName' => {
-      'endpoints' => [ 'NodeName' ],
-      'parent'    => 'master',
-    },
-    'master' => {
-      'endpoints' => [ $master_cert ],
-    },
-  }
-}
diff --git a/modules/icinga2/examples/init_syslog.pp b/modules/icinga2/examples/init_syslog.pp
old mode 100755
new mode 100644
index ad148faa..a0244155
--- a/modules/icinga2/examples/init_syslog.pp
+++ b/modules/icinga2/examples/init_syslog.pp
@@ -1,6 +1,4 @@
-class { 'icinga2':
-  manage_repo => true,
-}
+include icinga2
 
 class { '::icinga2::feature::syslog':
   severity => 'critical',
diff --git a/modules/icinga2/examples/objects_from_hiera.pp b/modules/icinga2/examples/objects_from_hiera.pp
old mode 100755
new mode 100644
index b87dc8af..56543273
--- a/modules/icinga2/examples/objects_from_hiera.pp
+++ b/modules/icinga2/examples/objects_from_hiera.pp
@@ -27,10 +27,7 @@
 #      - generic-service
 #    target: /etc/icinga2/conf.d/services.conf
 
-
-class { 'icinga2':
-  manage_repo => true,
-}
+include icinga2
 
 $defaults = lookup('monitoring::defaults')
 
diff --git a/modules/icinga2/examples/ticket_id.pp b/modules/icinga2/examples/ticket_id.pp
old mode 100755
new mode 100644
index db23754a..e9ade411
--- a/modules/icinga2/examples/ticket_id.pp
+++ b/modules/icinga2/examples/ticket_id.pp
@@ -1,6 +1,6 @@
 class { 'icinga2':
-  confd     => false,
-  features  => ['checker','mainlog'],
+  confd    => false,
+  features => ['checker','mainlog'],
 }
 
 class { 'icinga2::feature::api':
@@ -10,7 +10,7 @@ class { 'icinga2::feature::api':
   accept_config   => true,
   accept_commands => true,
   endpoints       => {
-    'NodeName' => {},
+    'NodeName'                   => {},
     'icinga2-master.example.com' => {
       'host' => '192.168.56.103',
     }
@@ -18,9 +18,9 @@ class { 'icinga2::feature::api':
   zones           => {
     'NodeName' => {
       'endpoints' => ['NodeName'],
-      'parent' => 'master',
+      'parent'    => 'master',
     },
-    'master' => {
+    'master'   => {
       'endpoints' => ['icinga2-master.example.com']
     }
   }
diff --git a/modules/icinga2/hiera.yaml b/modules/icinga2/hiera.yaml
old mode 100755
new mode 100644
diff --git a/modules/icinga2/lib/facter/icinga2_puppet.rb b/modules/icinga2/lib/facter/icinga2_puppet.rb
old mode 100755
new mode 100644
diff --git a/modules/icinga2/lib/puppet/parser/functions/icinga2_attributes.rb b/modules/icinga2/lib/puppet/parser/functions/icinga2_attributes.rb
deleted file mode 100755
index 20000776..00000000
--- a/modules/icinga2/lib/puppet/parser/functions/icinga2_attributes.rb
+++ /dev/null
@@ -1,27 +0,0 @@
-require File.join(File.dirname(__FILE__), '../../..', 'puppet_x/icinga2/utils.rb')
-
-module Puppet::Parser::Functions
-  newfunction(:icinga2_attributes, :type => :rvalue) do |args|
-    raise Puppet::ParseError, 'icinga2_atributes(): Must provide at least one argument.' if args.length > 4 || args.length < 1
-
-    if args[1]
-      indent = args[1]
-    else
-      indent = 0
-    end
-
-    if args[2]
-      globals = args[2].concat(lookupvar('::icinga2::_reserved'))
-    else
-      globals = lookupvar('::icinga2::_reserved')
-    end
-
-    if args[3]
-      constants = args[3].merge(lookupvar('::icinga2::_constants'))
-    else
-      constants = lookupvar('::icinga2::_constants')
-    end
-
-    Puppet::Icinga2::Utils.attributes(args[0], globals, constants, indent)
-  end
-end
diff --git a/modules/icinga2/lib/puppet/parser/functions/icinga2_ticket_id.rb b/modules/icinga2/lib/puppet/parser/functions/icinga2_ticket_id.rb
deleted file mode 100755
index 9435793f..00000000
--- a/modules/icinga2/lib/puppet/parser/functions/icinga2_ticket_id.rb
+++ /dev/null
@@ -1,21 +0,0 @@
-require File.join(File.dirname(__FILE__), '../../..', 'puppet_x/icinga2/pbkdf2.rb')
-
-module Puppet::Parser::Functions
-  newfunction(:icinga2_ticket_id, :type => :rvalue) do |args|
-    raise Puppet::ParseError, 'Must provide exactly two arguments to icinga2_ticket_id' if args.length != 2
-
-    if !args[0] or args[0] == ''
-      raise Puppet::ParseError, 'first argument (cn) can not be empty for icinga2_ticket_id'
-    end
-    if !args[1] or args[1] == ''
-      raise Puppet::ParseError, 'second argument (salt) can not be empty for icinga2_ticket_id'
-    end
-
-    PBKDF2.new(
-      :password => args[0],
-      :salt => args[1],
-      :iterations => 50000,
-      :hash_function => OpenSSL::Digest.new("sha1")
-    ).hex_string
-  end
-end
diff --git a/modules/icinga2/lib/puppet_x/icinga2/pbkdf2.rb b/modules/icinga2/lib/puppet_x/icinga2/pbkdf2.rb
old mode 100755
new mode 100644
index 03019ce6..e26891bc
--- a/modules/icinga2/lib/puppet_x/icinga2/pbkdf2.rb
+++ b/modules/icinga2/lib/puppet_x/icinga2/pbkdf2.rb
@@ -24,11 +24,12 @@
 #
 require 'openssl'
 
+# PBKDF2
 class PBKDF2
-  VERSION = '0.2.2'
+  VERSION = '0.2.2'.freeze
 
-  def initialize(opts={})
-    @hash_function = OpenSSL::Digest.new("sha256")
+  def initialize(opts = {})
+    @hash_function = OpenSSL::Digest.new('sha256')
 
     # override with options
     opts.each_key do |k|
@@ -45,15 +46,15 @@ class PBKDF2
     @key_length ||= @hash_function.size
 
     # make sure the relevant things got set
-    raise ArgumentError, "password not set" if @password.nil?
-    raise ArgumentError, "salt not set" if @salt.nil?
-    raise ArgumentError, "iterations not set" if @iterations.nil?
+    raise ArgumentError, 'password not set' if @password.nil?
+    raise ArgumentError, 'salt not set' if @salt.nil?
+    raise ArgumentError, 'iterations not set' if @iterations.nil?
   end
   attr_reader :key_length, :hash_function, :iterations, :salt, :password
 
   def key_length=(l)
-    raise ArgumentError, "key too short" if l < 1
-    raise ArgumentError, "key too long" if l > ((2**32 - 1) * @hash_function.size)
+    raise ArgumentError, 'key too short' if l < 1
+    raise ArgumentError, 'key too long' if l > ((2**32 - 1) * @hash_function.size)
     @value = nil
     @key_length = l
   end
@@ -87,18 +88,18 @@ class PBKDF2
   alias bin_string value
 
   def hex_string
-    bin_string.unpack("H*").first
+    bin_string.unpack('H*').first
   end
 
   # return number of milliseconds it takes to complete one iteration
-  def benchmark(iters = 400000)
+  def benchmark(iters = 400_000)
     iter_orig = @iterations
-    @iterations=iters
+    @iterations = iters
     start = Time.now
     calculate!
     time = Time.now - start
     @iterations = iter_orig
-    return (time/iters)
+    time / iters
   end
 
   protected
@@ -106,23 +107,23 @@ class PBKDF2
   # finds and instantiates, if necessary, a hash function
   def find_hash(hash)
     case hash
-      when Class
-        # allow people to pass in classes to be instantiated
-        # (eg, pass in OpenSSL::Digest::SHA1)
-        hash = find_hash(hash.new)
-      when Symbol
-        # convert symbols to strings and see if OpenSSL::Digest can make sense of
-        hash = find_hash(hash.to_s)
-      when String
-        # if it's a string, first strip off any leading 'hmacWith' (which is implied)
-        hash.gsub!(/^hmacWith/i,'')
-        # see if the OpenSSL lib understands it
-        hash = OpenSSL::Digest.new(hash)
-      when OpenSSL::Digest
-      when OpenSSL::Digest::Digest
-        # ok
-      else
-        raise TypeError, "Unknown hash type: #{hash.class}"
+    when Class
+      # allow people to pass in classes to be instantiated
+      # (eg, pass in OpenSSL::Digest::SHA1)
+      hash = find_hash(hash.new)
+    when Symbol
+      # convert symbols to strings and see if OpenSSL::Digest can make sense of
+      hash = find_hash(hash.to_s)
+    when String
+      # if it's a string, first strip off any leading 'hmacWith' (which is implied)
+      hash.gsub!(%r{^hmacWith}i, '')
+      # see if the OpenSSL lib understands it
+      hash = OpenSSL::Digest.new(hash)
+    when OpenSSL::Digest
+    when OpenSSL::Digest::Digest
+      # ok
+    else
+      raise TypeError, "Unknown hash type: #{hash.class}"
     end
     hash
   end
@@ -135,14 +136,14 @@ class PBKDF2
   # this is a translation of the helper function "F" defined in the spec
   def calculate_block(block_num)
     # u_1:
-    u = prf(salt+[block_num].pack("N"))
+    u = prf(salt + [block_num].pack('N'))
     ret = u
     # u_2 through u_c:
     2.upto(@iterations) do
       # calculate u_n
       u = prf(u)
       # xor it with the previous results
-      ret = ret^u
+      ret = ret ^ u
     end
     ret
   end
@@ -152,22 +153,22 @@ class PBKDF2
     # how many blocks we'll need to calculate (the last may be truncated)
     blocks_needed = (@key_length.to_f / @hash_function.size).ceil
     # reset
-    @value = ""
+    @value = ''
     # main block-calculating loop:
     1.upto(blocks_needed) do |block_num|
       @value << calculate_block(block_num)
     end
     # truncate to desired length:
-    @value = @value.slice(0,@key_length)
+    @value = @value.slice(0, @key_length)
     @value
   end
 end
 
-
+# Class: String
 class String
-  if RUBY_VERSION >= "1.9"
+  if RUBY_VERSION >= '1.9'
     def xor_impl(other)
-      result = "".encode("ASCII-8BIT")
+      result = ''.encode('ASCII-8BIT')
       o_bytes = other.bytes.to_a
       bytes.each_with_index do |c, i|
         result << (c ^ o_bytes[i])
@@ -176,8 +177,8 @@ class String
     end
   else
     def xor_impl(other)
-      result = (0..self.length-1).collect { |i| self[i] ^ other[i] }
-      result.pack("C*")
+      result = (0..self.length - 1).collect { |i| self[i] ^ other[i] }
+      result.pack('C*')
     end
   end
 
@@ -185,7 +186,7 @@ class String
 
   def ^(other)
     raise ArgumentError, "Can't bitwise-XOR a String with a non-String" \
-      unless other.kind_of? String
+      unless other.is_a? String
     raise ArgumentError, "Can't bitwise-XOR strings of different length" \
       unless self.length == other.length
 
diff --git a/modules/icinga2/lib/puppet_x/icinga2/utils.rb b/modules/icinga2/lib/puppet_x/icinga2/utils.rb
old mode 100755
new mode 100644
index 187f08fe..8ae09a83
--- a/modules/icinga2/lib/puppet_x/icinga2/utils.rb
+++ b/modules/icinga2/lib/puppet_x/icinga2/utils.rb
@@ -61,180 +61,302 @@
 #   - all attributes or variables (custom attributes) from the host, service or user contexts:
 #       host.name, service.check_command, user.groups, ...
 #
-# === What isn't supported?
+# Assignment with += and -=:
+#
+# Now it's possible to build an Icinga DSL code snippet like
+#
+#  vars += config
+#
+# simply use a string with the prefix '+ ', e.g.
+#
+#  vars => '+ config',
+#
+# The blank between + and the proper string 'config' is imported for the parser because numbers
+#
+#   attr => '+ -14',
+#
+# are also possible now. For numbers -= can be built, too:
+#
+#   attr => '- -14',
+#
+# Arrays can also be marked to merge with '+' or reduce by '-' as the first item of the array:
+#
+#   attr => [ '+', item1, item2, ... ]
+#
+# Result: attr += [ item1, item2, ... ]
+#
+#   attr => [ '-' item1, item2, ... ]
+#
+# Result: attr -= [ item1, item2, ... ]
+#
+# That all works for attributes and custom attributes!
+#
+# Finally dictionaries can be merged when a key '+' is set:
+#
+#   attr => {
+#     '+'    => true,
+#     'key1' => 'val1',
+#   }
+#
+# Result:
+#
+#   attr += {
+#     "key1" = "val1"
+#   }
 #
-# It's not currently possible to use arrays or dictionaries in a string, like
+# If 'attr' is a custom attribute this just works since level 3 of the dictionary:
 #
-#   attr => 'array1 + [ item1, item2, ... ]' or attr => 'hash1 + { item1, ... }'
+#   vars => {
+#     'level1' => {
+#       'level2' => {
+#         'level3' => {
+#           '+' => true,
+#           ...
+#         },
+#       },
+#     },
+#   },
 #
-# Assignments other than simple attribution are not currently possible either, e.g. building something like
+# Parsed to:
 #
+#   vars.level1["level2"] += level3
+#
+# Now it's also possible to add multiple custom attributes:
+#
+#   vars => [
+#     {
+#       'a' => '1',
+#       'b' => '2',
+#     },
+#     'config',
+#     {
+#       'c' => {
+#         'd' => {
+#           '+' => true,
+#           'e' => '5',
+#         },
+#       },
+#     },
+#   ],
+#
+# And you'll get:
+#
+#   vars.a = "1"
+#   vars.b = "2"
 #   vars += config
+#   vars.c["d"] += {
+#     "e" = "5"
+#   }
+#
+# Note: Using an Array always means merge '+=' all items to vars.
 #
-# but you can use the following instead:
+# === What isn't supported?
+#
+# It's not currently possible to use dictionaries in a string WITH nested array or hash, like
 #
-#   vars = vars + config
+#   attr1 => 'hash1 + { item1 => value1, item2 => [ value1, value2 ], ... ]'
+#   attr2 => 'hash2 + { item1 => value1, item2 => { ... },... }'
 #
 #
 require 'puppet'
 
-module Puppet
-  module Icinga2
-    module Utils
-
-      def self.attributes(attrs, globals, consts, indent=2)
-
-        def self.value_types(value)
+module Puppet::Icinga2
+  # Module: Utils with methods to parse Icinga 2 DSL config
+  module Utils
+    def self.value_types(value)
+      if value.match?(%r{^(-?\d+\.?\d*[dhms]?|true|false|null|\{{2}.*\}{2})$|^!?(host|service|user)\.}) || @constants.index { |x| @hash_attrs.include?(x) ? value =~ %r{^!?(#{x})(\..+$|$)} : value =~ %r{^!?#{x}$} }
+        value
+      else
+        value.dump
+      end
+    end
 
-          if value =~ /^-?\d+\.?\d*[dhms]?$/ || value =~ /^(true|false|null)$/ || value =~ /^!?(host|service|user)\./ || value =~ /^\{{2}.*\}{2}$/
-            result = value
-          else
-            if $constants.index { |x| if $hash_attrs.include?(x) then value =~ /^!?(#{x})(\..+$|$)/ else value =~ /^!?#{x}$/ end }
-              result = value
-            else
-              result = value.dump
-            end
-          end
+    def self.attribute_types(attr)
+      if %r{^[a-zA-Z0-9_]+$}.match?(attr)
+        attr
+      else
+        "\"#{attr}\""
+      end
+    end
 
-          return result
-        end
+    def self.parse(row)
+      result = ''
 
+      # parser is disabled
+      if row =~ %r{^-:(.*)$}m
+        return Regexp.last_match(1)
+      end
 
-        def self.attribute_types(attr)
-          if attr =~ /^[a-zA-Z0-9_]+$/
-            result = attr
-          else
-            result = "\"#{attr}\""
-          end
+      if row =~ %r{^\{{2}(.+)\}{2}$}m
+        # scan function
+        result += '{{%{expr}}}' % { expr: Regexp.last_match(1) }
+      elsif row =~ %r{^(.+)\s([\+-]|\*|\/|==|!=|&&|\|{2}|in)\s\{{2}(.+)\}{2}$}m
+        # scan expression + function (function should contain expressions, but we donno parse it)
+        result += '%{expr} %{op} {{%{fct}}}' % { expr: parse(Regexp.last_match(1)), op: Regexp.last_match(2), fct: Regexp.last_match(3) }
+      elsif row =~ %r{^(.+)\s([\+-]|\*|\/|==|!=|&&|\|{2}|in)\s(.+)$}
+        # scan expression
+        result += '%{expr1} %{op} %{expr2}' % { expr1: parse(Regexp.last_match(1)), op: Regexp.last_match(2), expr2: parse(Regexp.last_match(3)) }
+      elsif row =~ %r{^(.+)\((.*)$}
+        result += '%{fct}(%{param}' % { fct: Regexp.last_match(1), param: Regexp.last_match(2).split(',').map { |x| parse(x.lstrip) }.join(', ') }
+      elsif row =~ %r{^(.*)\)(.+)?$}
+        # closing bracket ) with optional access of an attribute e.g. '.arguments'
+        result += '%{param})%{expr}' % { param: Regexp.last_match(1).split(',').map { |x| parse(x.lstrip) }.join(', '), expr: Regexp.last_match(2) }
+      elsif row =~ %r{^\((.*)$}
+        result += '(%{expr}' % { expr: parse(Regexp.last_match(1)) }
+      elsif row =~ %r{^\s*\[\s*(.*)\s*\]\s?(.+)?$}
+        # parse array
+        result += '[ %{lst}]' % { lst: process_array(Regexp.last_match(1).split(',')) }
+        result += ' %{expr}' % { expr: parse(Regexp.last_match(2)) } if Regexp.last_match(2)
+      elsif row =~ %r{^\s*\{\s*(.*)\s*\}\s?(.+)?$}
+        # parse hash
+        result += "{\n%{expr}}" % { expr: process_hash(Hash[Regexp.last_match(1).gsub(%r{\s*=>\s*|\s*,\s*}, ',').split(',').each_slice(2).to_a]) }
+        result += ' %{expr}' % { expr: parse(Regexp.last_match(2)) } if Regexp.last_match(2)
+      else
+        result += value_types(row.to_s.strip)
+      end
+      result.gsub(%r{" in "}, ' in ')
+    end
 
-          return result
+    def self.process_array(items, indent = 2)
+      result = ''
+      items.each do |value_frozen|
+        value = value_frozen.dup
+        if value.is_a?(Puppet::Pops::Types::PSensitiveType::Sensitive)
+          value = value.unwrap
+          value = '-:"' + value + '"' if value.is_a?(String)
         end
+        if value.is_a?(Hash)
+          result += "\n%{ind1}{\n%{expr}%{ind2}}, " % { ind1: ' ' * indent, expr: process_hash(value, indent + 2), ind2: ' ' * indent }
+        elsif value.is_a?(Array)
+          result += '[ %{lst}], ' % { lst: process_array(value, indent + 2) }
+        else
+          result += '%{expr}, ' % { expr: parse(value) } if value
+        end
+      end
+      result
+    end
 
-
-        def self.parse(row)
-          result = ''
-
-          # parser is disabled
-          if row =~ /^-:(.*)$/m
-            return $1
-          end
-
-          # scan function
-          if row =~ /^\{{2}(.+)\}{2}$/m
-            result += "{{%s}}" % [ $1 ]
-          # scan expression + function (function should contain expressions, but we donno parse it)
-          elsif row =~ /^(.+)\s([\+-]|\*|\/|==|!=|&&|\|{2}|in)\s\{{2}(.+)\}{2}$/m
-            result += "%s %s {{%s}}" % [ parse($1), $2, $3 ]
-          # scan expression
-          elsif row =~ /^(.+)\s([\+-]|\*|\/|==|!=|&&|\|{2}|in)\s(.+)$/
-            result += "%s %s %s" % [ parse($1), $2, parse($3) ]
-          else
-            if row =~ /^(.+)\((.*)$/
-              result += "%s(%s" % [ $1, $2.split(',').map {|x| parse(x.lstrip)}.join(', ') ]
-            elsif row =~ /^(.*)\)$/
-              result += "%s)" % [ $1.split(',').map {|x| parse(x.lstrip)}.join(', ') ]
-            elsif row =~ /^\((.*)$/
-              result += "(%s" % [ parse($1) ]
-            else
-              result += value_types(row.to_s)
-            end
-          end
-
-          return result.gsub(/" in "/, ' in ')
+    def self.process_hash(attrs, indent = 2, level = 3, prefix = ' ' * indent)
+      result = ''
+      attrs.each do |attr, value_frozen|
+        value = value_frozen.dup
+        if value.is_a?(Puppet::Pops::Types::PSensitiveType::Sensitive)
+          value = value.unwrap
+          value = '-:"' + value + '"' if value.is_a?(String)
         end
+        result += if value.is_a?(Hash)
+                    op = '+' if value.delete('+')
+                    if value.empty?
+                      case level
+                      when 1 then
+                        "%{pre}%{att} #{op}= {}\n" % { pre: prefix, att: attribute_types(attr) }
+                      when 2 then
+                        "%{pre}[\"%{att}\"] #{op}= {}\n" % { pre: prefix, att: attr }
+                      else
+                        "%{pre}%{att} #{op}= {}\n" % { pre: prefix, att: attribute_types(attr) }
+                      end
+                    else
+                      case level
+                      when 1 then
+                        process_hash(value, indent, 2, '%{pre}%{att}' % { pre: prefix, att: attr })
+                      when 2 then
+                        "%{pre}[\"%{att}\"] #{op}= {\n%{lst}%{ind}}\n" % { pre: prefix, att: attr, lst: process_hash(value, indent), ind: ' ' * (indent - 2) }
+                      else
+                        "%{pre}%{att} #{op}= {\n%{lst}%{ind}}\n" % { pre: prefix, att: attribute_types(attr), lst: process_hash(value, indent + 2), ind: ' ' * indent }
+                      end
+                    end
+                  elsif value.is_a?(Array)
+                    op = value.delete_at(0) if value[0] == '+' || value[0] == '-'
+                    case level
+                    when 2 then
+                      "%{pre}[\"%{att}\"] #{op}= [ %{lst}]\n" % { pre: prefix, att: attribute_types(attr), lst: process_array(value) }
+                    else
+                      "%{pre}%{att} #{op}= [ %{lst}]\n" % { pre: prefix, att: attribute_types(attr), lst: process_array(value) }
+                    end
+                  else
+                    # String: attr = '+ value' -> attr += 'value'
+                    if value =~ %r{^([\+,-])\s+}
+                      operator = "#{Regexp.last_match(1)}="
+                      value = value.sub(%r{^[\+,-]\s+}, '')
+                    else
+                      operator = '='
+                    end
+                    if level == 3
+                      "%{pre}%{att} #{operator} %{val}\n" % { pre: prefix, att: attribute_types(attr), val: parse(value) } if value != :nil
+                    elsif level > 1
+                      "%{pre}[\"%{att}\"] #{operator} %{val}\n" % { pre: prefix, att: attr, val: parse(value) } if value != :nil
+                    else
+                      "%{pre}%{att} #{operator} %{val}\n" % { pre: prefix, att: attr, val: parse(value) } if value != :nil
+                    end
+                  end
+      end
+      result
+    end
 
+    def self.attributes(attrs, globals, consts, indent = 2)
+      # globals (params.pp) and all keys of attrs hash itselfs must not quoted
+      @constants = globals.concat(consts.keys) << 'name'
 
-        def self.process_array(items, indent=2)
-          result = ''
+      # select all attributes and constants if there value is a hash
+      @hash_attrs = attrs.merge(consts).select { |_x, y| y.is_a?(Hash) }.keys
 
-          items.each do |value|
-            if value.is_a?(Hash)
-              result += "\n%s{\n%s%s}, " % [ ' ' * indent, process_hash(value, indent + 2), ' ' * indent ]
-            elsif value.is_a?(Array)
-              result += "[ %s], " % [ process_array(value, indent+2) ]
-            else
-              result += "%s, " % [ parse(value) ] if value
-            end
-          end
+      # initialize returned configuration
+      config = ''
 
-          return result
+      attrs.each do |attr, value_frozen|
+        value = value_frozen.dup
+        if value.is_a?(Puppet::Pops::Types::PSensitiveType::Sensitive)
+          value = value.unwrap
+          value = '-:"' + value + '"' if value.is_a?(String) && !@constants.include?(value)
         end
 
-
-        def self.process_hash(attrs, indent=2, level=3, prefix=' '*indent)
-          result = ''
-          attrs.each do |attr, value|
-            if value.is_a?(Hash)
-              if value.empty?
-                result += case level
-                  when 1 then "%s%s = {}\n" % [ prefix, attribute_types(attr) ]
-                  when 2 then "%s[\"%s\"] = {}\n" % [ prefix, attr ]
-                  else "%s%s = {}\n" % [ prefix, attribute_types(attr) ]
-                end
-              else
-                result += case level
-                  when 1 then process_hash(value, indent, 2, "%s%s" % [ prefix, attr ])
-                  when 2 then "%s[\"%s\"] = {\n%s%s}\n" % [ prefix, attr, process_hash(value, indent), ' ' * (indent-2) ]
-                  else "%s%s = {\n%s%s}\n" % [ prefix, attribute_types(attr), process_hash(value, indent+2), ' ' * indent ]
-                end
-              end
-            elsif value.is_a?(Array)
-              result += case level
-                when 2 then "%s[\"%s\"] = [ %s]\n" % [ prefix, attribute_types(attr), process_array(value) ]
-                else "%s%s = [ %s]\n" % [ prefix, attribute_types(attr), process_array(value) ]
-              end
-            else
-              if level > 1
-                if level == 3
-                  result += "%s%s = %s\n" % [ prefix, attribute_types(attr), parse(value) ] if value != :nil
-                  #result += "%s%s = %s\n" % [ prefix, attr, parse(value) ] if value != :nil
-                else
-                  #result += "%s[\"%s\"] = %s\n" % [ prefix, attribute_types(attr), parse(value) ] if value != :nil
-                  result += "%s[\"%s\"] = %s\n" % [ prefix, attr, parse(value) ] if value != :nil
-                end
-              else
-                result += "%s%s = %s\n" % [ prefix, attr, parse(value) ] if value != :nil
-              end
-            end
+        if %r{^(assign|ignore) where$}.match?(attr)
+          value.each do |x|
+            config += "%{ind}%{att} %{expr}\n" % { ind: ' ' * indent, att: attr, expr: parse(x) } if x
           end
-
-          return result
-        end
-
-
-        # globals (params.pp) and all keys of attrs hash itselfs must not quoted
-        $constants = globals.concat(consts.keys) << "name"
-
-        # select all attributes and constants if there value is a hash
-        $hash_attrs = attrs.merge(consts).select { |x,y| y.is_a?(Hash) }.keys
-
-        # initialize returned configuration
-        config = ''
-
-        attrs.each do |attr, value|
-
-          if attr =~ /^(assign|ignore) where$/
-            value.each do |x|
-              config += "%s%s %s\n" % [ ' ' * indent, attr, parse(x) ] if x
-            end
-          else
-            if value.is_a?(Hash)
-              if ['vars'].include?(attr)
-                config += process_hash(value, indent+2, 1, "%s%s." % [ ' ' * indent, attr])
+        elsif attr == 'vars'
+          if value.is_a?(Hash)
+            # delete pair of key '+' because a merge at this point is not allowed
+            value.delete('+')
+            config += process_hash(value, indent + 2, 1, '%{ind}%{att}.' % { ind: ' ' * indent, att: attr })
+          elsif value.is_a?(Array)
+            value.each do |item_frozen|
+              item = item_frozen.dup
+              if item.is_a?(String)
+                config += "%{ind}%{att} += %{lst}\n" % { ind: ' ' * indent, att: attr, lst: item.sub(%r{^[\+,-]\s+}, '') }
               else
-                config += "%s%s = {\n%s%s}\n" % [ ' ' * indent, attr, process_hash(value, indent+2), ' ' * indent ]
+                item.delete('+')
+                config += if item.empty?
+                            "%{ind}%{att} += {}\n" % { ind: ' ' * indent, att: attr }
+                          else
+                            process_hash(item, indent + 2, 1, '%{ind}%{att}.' % { ind: ' ' * indent, att: attr })
+                          end
               end
-            elsif value.is_a?(Array)
-              config += "%s%s = [ %s]\n" % [ ' ' * indent, attr, process_array(value) ]
-            else
-              config += "%s%s = %s\n" % [ ' ' * indent, attr, parse(value) ]
             end
+          else
+            op = '+' if %r{^\+\s+}.match?(value)
+            config += "%{ind}%{att} #{op}= %{val}\n" % { ind: ' ' * indent, att: attr, val: parse(value.sub(%r{^\+\s+}, '')) }
           end
+        else
+          config += if value.is_a?(Hash)
+                      op = '+' if value.delete('+')
+                      if !value.empty?
+                        "%{ind}%{att} #{op}= {\n%{lst}%{blnk}}\n" % { ind: ' ' * indent, att: attr, lst: process_hash(value, indent + 2), blnk: ' ' * indent }
+                      else
+                        "%{ind}%{att} #{op}= {}\n" % { ind: ' ' * indent, att: attr }
+                      end
+                    elsif value.is_a?(Array)
+                      op = value.delete_at(0) if value[0] == '+' || value[0] == '-'
+                      "%{ind}%{att} #{op}= [ %{lst}]\n" % { ind: ' ' * indent, att: attr, lst: process_array(value) }
+                    elsif value =~ %r{^([\+,-])\s+}
+                      # String: attr = '+ config' -> attr += config
+                      "%{ind}%{att} #{Regexp.last_match(1)}= %{expr}\n" % { ind: ' ' * indent, att: attr, expr: parse(value.sub(%r{^[\+,-]\s+}, '')) }
+                    else
+                      "%{ind}%{att} = %{expr}\n" % { ind: ' ' * indent, att: attr, expr: parse(value) }
+                    end
         end
-
-        return config
       end
-
+      config
     end
   end
 end
diff --git a/modules/icinga2/manifests/config.pp b/modules/icinga2/manifests/config.pp
old mode 100755
new mode 100644
index f4ab7386..7c568a94
--- a/modules/icinga2/manifests/config.pp
+++ b/modules/icinga2/manifests/config.pp
@@ -1,15 +1,7 @@
-# == Class: icinga2::config
-#
-# This class exists to manage general configuration files needed by Icinga 2 to run.
-#
-# === Parameters
-#
-# This class does not provide any parameters.
-#
-# === Examples
-#
-# This class is private and should not be called by others than this module.
+# @summary
+#   This class exists to manage general configuration files needed by Icinga 2 to run.
 #
+# @api private
 #
 class icinga2::config {
 
@@ -17,12 +9,27 @@ class icinga2::config {
 
   $constants      = prefix($::icinga2::_constants, 'const ')
   $conf_dir       = $::icinga2::globals::conf_dir
+  $user           = $::icinga2::globals::user
+  $group          = $::icinga2::globals::group
   $plugins        = $::icinga2::plugins
   $confd          = $::icinga2::_confd
   $purge_features = $::icinga2::purge_features
 
-  $template_constants  = icinga2_attributes($constants)
-  $template_mainconfig = template('icinga2/icinga2.conf.erb')
+  if $::facts['kernel'] != 'windows' {
+    $template_constants  = icinga2::parse($constants)
+    $template_mainconfig = template('icinga2/icinga2.conf.erb')
+    $file_permissions    = '0640'
+  } else {
+    $template_constants  = regsubst(icinga2::parse($constants), '\n', "\r\n", 'EMG')
+    $template_mainconfig = regsubst(template('icinga2/icinga2.conf.erb'), '\n', "\r\n", 'EMG')
+    $file_permissions    = undef
+  }
+
+  File {
+    owner => $user,
+    group => $group,
+    mode  => $file_permissions,
+  }
 
   file { "${conf_dir}/constants.conf":
     ensure  => file,
diff --git a/modules/icinga2/manifests/config/fragment.pp b/modules/icinga2/manifests/config/fragment.pp
old mode 100755
new mode 100644
index 6e797d0a..76a4df33
--- a/modules/icinga2/manifests/config/fragment.pp
+++ b/modules/icinga2/manifests/config/fragment.pp
@@ -1,20 +1,40 @@
-# == Define: icinga2::config::fragment
+# @summary
+#   Set a code fragment in a target configuration file.
 #
-# Set a code fragment in a target configuration file.
+# @example To create a custom configuration add content to a specified target at the position you set in the order parameter. You can use also templates to add content.
+#   include ::icinga2
 #
-# === Parameters
+#   icinga2::object::service { 'load':
+#     display_name  => 'Load',
+#     apply         => true,
+#     check_command => 'load',
+#     assign        => ['vars.os == Linux'],
+#     target        => '/etc/icinga2/conf.d/service_load.conf',
+#     order         => 30,
+#   }
 #
-# [*content*]
+#   icinga2::config::fragment { 'load-function':
+#     target => '/etc/icinga2/conf.d/service_load.conf',
+#     order => 10,
+#     content => 'vars.load_wload1 = {{
+#       if (get_time_period("backup").is_inside) {
+#         return 20
+#       } else {
+#         return 5
+#       }
+#     }}',
+#   }
+#
+# @param content
 #   Content to insert in file specified in target.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this fragment. File will be declared the
 #   first time.
 #
-# [*order*]
+# @param order
 #   String or integer to set the position in the target file, sorted in alpha numeric order. Defaults to `00`.
 #
-#
 define icinga2::config::fragment(
   String                       $content,
   Stdlib::Absolutepath         $target,
@@ -22,12 +42,19 @@ define icinga2::config::fragment(
   Variant[String, Integer]     $order     = '00',
 ) {
 
-  Concat {
-    owner => $::icinga2::globals::user,
-    group => $::icinga2::globals::group,
-    mode  => '0640',
+  case $::facts['os']['family'] {
+    'windows': {
+      $_content = regsubst($content, '\n', "\r\n", 'EMG')
+    } # windows
+    default: {
+      Concat {
+        owner => $::icinga2::globals::user,
+        group => $::icinga2::globals::group,
+        mode  => '0640',
+      }
+      $_content = $content
+    } # default
   }
-  $_content = $content
 
   if !defined(Concat[$target]) {
     concat { $target:
diff --git a/modules/icinga2/manifests/feature.pp b/modules/icinga2/manifests/feature.pp
old mode 100755
new mode 100644
index 4205bd86..46e3aa71
--- a/modules/icinga2/manifests/feature.pp
+++ b/modules/icinga2/manifests/feature.pp
@@ -1,7 +1,7 @@
-# == Define: icinga2::feature
-#
-# Private define resource to used by this module only.
+# @summary
+#   Private define resource to used by this module only.
 #
+# @api private
 #
 define icinga2::feature(
   Enum['absent', 'present'] $ensure  = present,
@@ -14,18 +14,34 @@ define icinga2::feature(
   $group    = $::icinga2::globals::group
   $conf_dir = $::icinga2::globals::conf_dir
 
-  $_ensure = $ensure ? {
-    'present' => file,
-    default   => absent,
-  }
+  if $::facts['os']['family'] != 'windows' {
+    $_ensure = $ensure ? {
+      'present' => link,
+      default   => absent,
+    }
+
+    file { "${conf_dir}/features-enabled/${feature}.conf":
+      ensure  => $_ensure,
+      owner   => $user,
+      group   => $group,
+      target  => "../features-available/${feature}.conf",
+      require => Concat["${conf_dir}/features-available/${feature}.conf"],
+      notify  => Class['::icinga2::service'],
+    }
+  } else {
+    $_ensure = $ensure ? {
+      'present' => file,
+      default   => absent,
+    }
 
-  file { "${conf_dir}/features-enabled/${feature}.conf":
-    ensure  => $_ensure,
-    owner   => $user,
-    group   => $group,
-    content => "include \"../features-available/${feature}.conf\"\r\n",
-    require => Concat["${conf_dir}/features-available/${feature}.conf"],
-    notify  => Class['::icinga2::service'],
+    file { "${conf_dir}/features-enabled/${feature}.conf":
+      ensure  => $_ensure,
+      owner   => $user,
+      group   => $group,
+      content => "include \"../features-available/${feature}.conf\"\r\n",
+      require => Concat["${conf_dir}/features-available/${feature}.conf"],
+      notify  => Class['::icinga2::service'],
+    }
   }
 
 }
diff --git a/modules/icinga2/manifests/feature/api.pp b/modules/icinga2/manifests/feature/api.pp
old mode 100755
new mode 100644
index 00baef77..f9b973da
--- a/modules/icinga2/manifests/feature/api.pp
+++ b/modules/icinga2/manifests/feature/api.pp
@@ -1,16 +1,62 @@
-# == Class: icinga2::feature::api
+# @summary
+#   Configures the Icinga 2 feature api.
 #
-# This module configures the Icinga 2 feature api.
+# @example Use the puppet certificates and key copy these files to the cert directory named to 'hostname.key', 'hostname.crt' and 'ca.crt' if the contant NodeName is set to 'hostname'.
+#   include ::icinga2::feature::api
+#
+# @example To use your own certificates and key as file resources if the contant NodeName is set to fqdn (default) do:
+#   class { 'icinga2::feature::api':
+#     pki => 'none',
+#   }
+#
+#   File {
+#     owner => 'icinga',
+#     group => 'icinga',
+#   }
+#
+#   file { "/var/lib/icinga2/certs/${::fqdn}.key":
+#     ensure => file,
+#     tag    => 'icinga2::config::file',
+#     source => "puppet:///modules/profiles/private_keys/${::fqdn}.key",
+#   }
+#   ...
+#
+# @example If you like to manage the certificates and the key as strings in base64 encoded format:
+#   class { 'icinga2::feature::api':
+#     pki         => 'none',
+#     ssl_cacert  => '-----BEGIN CERTIFICATE----- ...',
+#     ssl_key     => '-----BEGIN RSA PRIVATE KEY----- ...',
+#     ssl_cert    => '-----BEGIN CERTIFICATE----- ...',
+#   }
+#
+# @example Fine tune TLS settings
+#   class { '::icinga2::feature::api':
+#     ssl_protocolmin => 'TLSv1.2',
+#     ssl_cipher_list => 'HIGH:MEDIUM:!aNULL:!MD5:!RC4',
+#   }
+#
+# @example Transfer a CA certificate and key from an existing CA by using the file resource:
+#   include ::icinga2
 #
-# === Parameters
+#   file { '/var/lib/icinga2/ca/ca.crt':
+#     source => '...',
+#     tag    => 'icinga2::config::file',
+#   }
+#
+#   file { '/var/lib/icinga2/ca/ca.key':
+#     source => '...',
+#     tag    => 'icinga2::config::file',
+#   }
 #
-# [*ensure*]
-#   Set to present enables the feature api, absent disabled it. Defaults to present.
+# @param ensure
+#   Set to present enables the feature api, absent disabled it.
 #
-# [*pki*]
-#   Provides multiple sources for the certificate, key and ca. Valid parameters are 'puppet', 'icinga2'  or 'none'.
+# @param pki
+#   Provides multiple sources for the certificate, key and ca.
 #   - puppet: Copies the key, cert and CAcert from the Puppet ssl directory to the cert directory
-#             /var/lib/icinga2/certs on Linux.
+#             /var/lib/icinga2/certs on Linux and C:/ProgramData/icinga2/var/lib/icinga2/certs on Windows.
+#             Please note that Puppet 7 uses an intermediate CA by default and Icinga cannot handle
+#             its CA certificate, see [Icinga Issue](https://github.com/Icinga/icinga2/pull/8859).
 #   - icinga2: Uses the icinga2 CLI to generate a Certificate Request and Key to obtain a signed
 #              Certificate from 'ca_host' using the icinga2 ticket mechanism.
 #              In case the 'ticket_salt' has been configured the ticket_id will be generated
@@ -18,138 +64,119 @@
 #              The 'ticket_id' parameter can be used to directly set an ticket_id.
 #   - none: Does nothing and you either have to manage the files yourself as file resources
 #           or use the ssl_key, ssl_cert, ssl_cacert parameters.
-#   Defaults to 'icinga2'.
 #
-# [*ssl_key*]
-#   The private key in a base64 encoded string to store in cert directory, file is stored to
-#   path specified in ssl_key_path. This parameter requires pki to be set to 'none'.
+# @param ssl_key
+#   The private key in a base64 encoded string to store in cert directory. This parameter
+#   requires pki to be set to 'none'.
 #
-# [*ssl_cert*]
-#   The certificate in a base64 encoded string to store in cert directory, file is  stored to
-#   path specified in ssl_cert_path. This parameter requires pki to be set to 'none'.
+# @param ssl_cert
+#   The certificate in a base64 encoded string to store in cert directory This parameter
+#    requires pki to be set to 'none'.
 #
-# [*ssl_cacert*]
-#   The CA root certificate in a base64 encoded string to store in cert directory, file is stored
-#   to path specified in ssl_cacert_path. This parameter requires pki to be set to 'none'.
+# @param ssl_cacert
+#   The CA root certificate in a base64 encoded string to store in cert directory. This parameter
+#   requires pki to be set to 'none'.
 #
-# [*ssl_crl*]
+# @param ssl_crl
 #   Optional location of the certificate revocation list.
 #
-# [*accept_config*]
-#   Accept zone configuration. Defaults to false.
+# @param accept_config
+#   Accept zone configuration.
 #
-# [*accept_commands*]
-#   Accept remote commands. Defaults to false.
+# @param accept_commands
+#   Accept remote commands.
 #
-# [*ca_host*]
+# @param max_anonymous_clients
+#   Limit the number of anonymous client connections (not configured endpoints and signing requests).
+#
+# @param ca_host
 #   This host will be connected to request the certificate. Set this if you use the icinga2 pki.
 #
-# [*ca_port*]
-#   Port of the 'ca_host'. Defaults to 5665
+# @param ca_port
+#   Port of the 'ca_host'.
+#
+# @param fingerprint
+#   Fingerprint of the CA host certificate for validation. Requires pki is set to `icinga2`.
+#   You can get the fingerprint via 'openssl x509 -noout -fingerprint -sha256 -inform pem -in [certificate-file.crt]'
+#   on your CA host. (Icinga2 versions before 2.12.0 require '-sha1' as digest algorithm.)
 #
-# [*ticket_salt*]
+# @param ticket_salt
 #   Salt to use for ticket generation. The salt is stored to api.conf if none or ca is chosen for pki.
-#   Defaults to constant TicketSalt.
+#   Defaults to constant TicketSalt. Keep in mind this parameter is parsed so please use only alpha numric
+#   characters as salt or a constant.
 #
-# [*ticket_id*]
+# @param ticket_id
 #   If a ticket_id is given it will be used instead of generating an ticket_id.
 #   The ticket_id will be used only when requesting a certificate from the ca_host
 #   in case the pki is set to 'icinga2'.
 #
-# [*endpoints*]
-#   Hash to configure endpoint objects. Defaults to { 'NodeName' => {} }.
-#   NodeName is a icnga2 constant.
+# @param endpoints
+#   Hash to configure endpoint objects. `NodeName` is a icnga2 constant.
+#
+# @param zones
+#   Hash to configure zone objects. `ZoneName` and `NodeName` are icinga2 constants.
 #
-# [*zones*]
-#   Hash to configure zone objects. Defaults to { 'ZoneName' => {'endpoints' => ['NodeName']} }.
-#   ZoneName and NodeName are icinga2 constants.
+# @param ssl_protocolmin
+#   Minimal TLS version to require.
 #
-# [*ssl_protocolmin*]
-#   Minimal TLS version to require. Default undef (e.g. "TLSv1.2")
+# @param ssl_handshake_timeout
+#   TLS Handshake timeout.
 #
-# [*ssl_cipher_list*]
-#   List of allowed TLS ciphers, to finetune encryption. Default undef (e.g. "HIGH:MEDIUM:!aNULL:!MD5:!RC4")
+# @param connect_timeout
+#   Timeout for establishing new connections.
 #
-# [*bind_host*]
-#   The IP address the api listener will be bound to. (e.g. 0.0.0.0)
+# @param ssl_cipher_list
+#   List of allowed TLS ciphers, to finetune encryption.
 #
-# [*bind_port*]
-#   The port the api listener will be bound to. (e.g. 5665)
+# @param bind_host
+#   The IP address the api listener will be bound to.
 #
-# [*access_control_allow_origin]
+# @param bind_port
+#   The port the api listener will be bound to.
+#
+# @param access_control_allow_origin
 #  Specifies an array of origin URLs that may access the API.
 #
-# [*access_control_allow_credentials]
-#  Indicates whether or not the actual request can be made using credentials. Defaults to `true`.
+# @param access_control_allow_credentials
+#  Indicates whether or not the actual request can be made using credentials.
 #
-# [*access_control_allow_headers]
+# @param access_control_allow_headers
 #  Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.
-#  Defaults to `Authorization`.
 #
-# [*access_control_allow_methods]
+# @param access_control_allow_methods
 #  Used in response to a preflight request to indicate which HTTP methods can be used when making the actual request.
-#  Defaults to `GET, POST, PUT, DELETE`.
-#
-# === Examples
-#
-# Use the puppet certificates and key copy these files to the cert directory
-# named to 'hostname.key', 'hostname.crt' and 'ca.crt' if the contant NodeName
-# is set to 'hostname'.
-#
-#   include ::icinga2::feature::api
-#
-# To use your own certificates and key as file resources if the contant NodeName is
-# set to fqdn (default) do:
-#
-#   class { 'icinga2::feature::api':
-#     pki => 'none',
-#   }
-#
-#   File {
-#     owner => 'icinga',
-#     group => 'icinga',
-#   }
-#
-#   file { "/var/lib/icinga2/certs/${::fqdn}.key":
-#     ensure => file,
-#     tag    => 'icinga2::config::file',
-#     source => "puppet:///modules/profiles/private_keys/${::fqdn}.key",
-#   }
-#   ...
-#
-# If you like to manage the certificates and the key as strings in base64 encoded format:
-#
-#   class { 'icinga2::feature::api':
-#     pki         => 'none',
-#     ssl_cacert  => '-----BEGIN CERTIFICATE----- ...',
-#     ssl_key     => '-----BEGIN RSA PRIVATE KEY----- ...',
-#     ssl_cert    => '-----BEGIN CERTIFICATE----- ...',
-#   }
 #
+# @param environment
+#  Used as suffix in TLS SNI extension name; default from constant ApiEnvironment, which is empty.
 #
 class icinga2::feature::api(
-  Enum['absent', 'present']                               $ensure                           = present,
-  Enum['ca', 'icinga2', 'none', 'puppet']                 $pki                              = 'icinga2',
-  Optional[Stdlib::Absolutepath]                          $ssl_crl                          = undef,
-  Optional[Boolean]                                       $accept_config                    = undef,
-  Optional[Boolean]                                       $accept_commands                  = undef,
-  Optional[Stdlib::Host]                                  $ca_host                          = undef,
-  Stdlib::Port::Unprivileged                              $ca_port                          = 5665,
-  String                                                  $ticket_salt                      = 'TicketSalt',
-  Optional[String]                                        $ticket_id                        = undef,
-  Hash[String, Hash]                                      $endpoints                        = { 'NodeName' => {} },
-  Hash[String, Hash]                                      $zones                            = { 'ZoneName' => { endpoints => [ 'NodeName' ] } },
-  Optional[String]                                        $ssl_key                          = undef,
-  Optional[String]                                        $ssl_cert                         = undef,
-  Optional[String]                                        $ssl_cacert                       = undef,
-  Optional[Enum['TLSv1', 'TLSv1.1', 'TLSv1.2']]           $ssl_protocolmin                  = undef,
-  Optional[String]                                        $ssl_cipher_list                  = undef,
-  Optional[Stdlib::Host]                                  $bind_host                        = undef,
-  Optional[Stdlib::Port::Unprivileged]                    $bind_port                        = undef,
-  Optional[Array[Enum['GET', 'POST', 'PUT', 'DELETE']]]   $access_control_allow_methods     = undef,
-  Optional[Array[String]]                                 $access_control_allow_origin      = undef,
-  Optional[Boolean]                                       $access_control_allow_credentials = undef,
-  Optional[String]                                        $access_control_allow_headers     = undef,
+  Enum['absent', 'present']                                $ensure                           = present,
+  Enum['ca', 'icinga2', 'none', 'puppet']                  $pki                              = 'icinga2',
+  Optional[Stdlib::Absolutepath]                           $ssl_crl                          = undef,
+  Optional[Boolean]                                        $accept_config                    = undef,
+  Optional[Boolean]                                        $accept_commands                  = undef,
+  Optional[Integer[0]]                                     $max_anonymous_clients            = undef,
+  Optional[Stdlib::Host]                                   $ca_host                          = undef,
+  Stdlib::Port::Unprivileged                               $ca_port                          = 5665,
+  Variant[String, Sensitive[String]]                       $ticket_salt                      = 'TicketSalt',
+  Optional[Variant[String, Sensitive[String]]]             $ticket_id                        = undef,
+  Hash[String, Hash]                                       $endpoints                        = { 'NodeName' => {} },
+  Hash[String, Hash]                                       $zones                            = { 'ZoneName' => { endpoints => [ 'NodeName' ] } },
+  Optional[Stdlib::Base64]                                 $ssl_key                          = undef,
+  Optional[Stdlib::Base64]                                 $ssl_cert                         = undef,
+  Optional[Stdlib::Base64]                                 $ssl_cacert                       = undef,
+  Optional[Enum['TLSv1', 'TLSv1.1', 'TLSv1.2', 'TLSv1.3']] $ssl_protocolmin                  = undef,
+  Optional[Icinga2::Interval]                              $ssl_handshake_timeout            = undef,
+  Optional[Icinga2::Interval]                              $connect_timeout                  = undef,
+  Optional[String]                                         $ssl_cipher_list                  = undef,
+  Optional[Stdlib::Host]                                   $bind_host                        = undef,
+  Optional[Stdlib::Port::Unprivileged]                     $bind_port                        = undef,
+  Optional[Array[Enum['GET', 'POST', 'PUT', 'DELETE']]]    $access_control_allow_methods     = undef,
+  Optional[Array[String]]                                  $access_control_allow_origin      = undef,
+  Optional[Boolean]                                        $access_control_allow_credentials = undef,
+  Optional[String]                                         $access_control_allow_headers     = undef,
+  Optional[Icinga2::Fingerprint]                           $fingerprint                      = undef,
+  Optional[String]                                         $environment                      = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -166,7 +193,10 @@ class icinga2::feature::api(
   $user          = $::icinga2::globals::user
   $group         = $::icinga2::globals::group
   $node_name     = $::icinga2::_constants['NodeName']
-  $_ssl_key_mode = '0600'
+  $_ssl_key_mode = $::facts['os']['family'] ? {
+    'windows' => undef,
+    default   => '0600',
+  }
   $_notify       = $ensure ? {
     'present' => Class['::icinga2::service'],
     default   => undef,
@@ -189,21 +219,23 @@ class icinga2::feature::api(
       $_ticket_salt = undef
 
       file { $_ssl_key_path:
-        ensure => file,
-        mode   => $_ssl_key_mode,
-        source => $::icinga2_puppet_hostprivkey,
-        tag    => 'icinga2::config::file',
+        ensure    => file,
+        mode      => $_ssl_key_mode,
+        source    => $::facts['icinga2_puppet_hostprivkey'],
+        tag       => 'icinga2::config::file',
+        show_diff => false,
+        backup    => false,
       }
 
       file { $_ssl_cert_path:
         ensure => file,
-        source => $::icinga2_puppet_hostcert,
+        source => $::facts['icinga2_puppet_hostcert'],
         tag    => 'icinga2::config::file',
       }
 
       file { $_ssl_cacert_path:
         ensure => file,
-        source => $::icinga2_puppet_localcacert,
+        source => $::facts['icinga2_puppet_localcacert'],
         tag    => 'icinga2::config::file',
       }
     } # puppet
@@ -211,21 +243,33 @@ class icinga2::feature::api(
     'none': {
       # non means you manage the CA on your own and so
       # the salt has to be stored in api.conf
-      $_ticket_salt = $ticket_salt
+      $_ticket_salt = if $ticket_salt =~ Sensitive {
+        $ticket_salt
+      } else {
+        Sensitive($ticket_salt)
+      }
 
       if $ssl_key {
-        $_ssl_key = $ssl_key
+        $_ssl_key = $::facts['os']['family'] ? {
+          'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+          default   => $ssl_key,
+        }
 
         file { $_ssl_key_path:
-          ensure  => file,
-          mode    => $_ssl_key_mode,
-          content => $_ssl_key,
-          tag     => 'icinga2::config::file',
+          ensure    => file,
+          mode      => $_ssl_key_mode,
+          content   => $_ssl_key,
+          tag       => 'icinga2::config::file',
+          show_diff => false,
+          backup    => false,
         }
       }
 
       if $ssl_cert {
-        $_ssl_cert = $ssl_cert
+        $_ssl_cert = $::facts['os']['family'] ? {
+          'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+          default   => $ssl_cert,
+        }
 
         file { $_ssl_cert_path:
           ensure  => file,
@@ -235,7 +279,10 @@ class icinga2::feature::api(
       }
 
       if $ssl_cacert {
-        $_ssl_cacert = $ssl_cacert
+        $_ssl_cacert = $::facts['os']['family'] ? {
+          'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+          default   => $ssl_cacert,
+        }
 
         file { $_ssl_cacert_path:
           ensure  => file,
@@ -245,33 +292,58 @@ class icinga2::feature::api(
       }
     } # none
 
-    'icinga2': {
+    # icinga2 as default
+    default: {
       $_ticket_salt = undef
       $trusted_cert = "${cert_dir}/trusted-cert.crt"
+
+      $cmd_pki_get_cert = "\"${icinga2_bin}\" pki save-cert --host ${ca_host} --port ${ca_port} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert}"
+
       if($ticket_id) {
-        $_ticket_id = $ticket_id
+        $_ticket = if $ticket_id =~ Sensitive {
+          "--ticket ${ticket_id.unwrap}"
+        } else {
+          "--ticket ${ticket_id}"
+        }
       } elsif($ticket_salt != 'TicketSalt') {
-        $_ticket_id = icinga2_ticket_id($node_name, $ticket_salt)
+        $_ticket = "--ticket ${icinga2::icinga2_ticket_id($node_name, $ticket_salt)}"
+      } else {
+        $_ticket = ''
+      }
+      if $fingerprint {
+        $_fingerprint = upcase(regsubst($fingerprint, ':', ' ', 'G'))
+        if $::facts['os']['family'] != 'Windows' {
+          $_cmd_pki_get_cert = "${cmd_pki_get_cert} |grep '${_fingerprint}\s*$'"
+        } else {
+          $_cmd_pki_get_cert = "cmd.exe /c \"${cmd_pki_get_cert} |findstr /R /C:\"${_fingerprint}\"\""
+        }
       } else {
-        fail("Parameter ticket_salt or ticket_id has be set when using pki='icinga2'")
+        $_cmd_pki_get_cert = $cmd_pki_get_cert
+      }
+
+      $_env = $::facts['kernel'] ? {
+        'windows' => undef,
+        default   => ["ICINGA2_USER=${user}", "ICINGA2_GROUP=${group}"],
       }
 
       Exec {
-        notify  => Class['::icinga2::service'],
+        environment => $_env,
+        notify      => Class['::icinga2::service'],
       }
 
       exec { 'icinga2 pki create key':
-        command => "${icinga2_bin} pki new-cert --cn ${node_name} --key ${_ssl_key_path} --cert ${_ssl_cert_path}",
+        command => "\"${icinga2_bin}\" pki new-cert --cn ${node_name} --key ${_ssl_key_path} --cert ${_ssl_cert_path}",
         creates => $_ssl_key_path,
       }
 
       -> exec { 'icinga2 pki get trusted-cert':
-        command => "${icinga2_bin} pki save-cert --host ${ca_host} --port ${ca_port} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert}",
+        path    => $::facts['path'],
+        command => $_cmd_pki_get_cert,
         creates => $trusted_cert,
       }
 
       -> exec { 'icinga2 pki request':
-        command => "${icinga2_bin} pki request --host ${ca_host} --port ${ca_port} --ca ${_ssl_cacert_path} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert} --ticket ${_ticket_id}",
+        command => "\"${icinga2_bin}\" pki request --host ${ca_host} --port ${ca_port} --ca ${_ssl_cacert_path} --key ${_ssl_key_path} --cert ${_ssl_cert_path} --trustedcert ${trusted_cert} ${_ticket}", # lint:ignore:140chars
         creates => $_ssl_cacert_path,
       }
     } # icinga2
@@ -282,8 +354,11 @@ class icinga2::feature::api(
     crl_path                         => $ssl_crl,
     accept_commands                  => $accept_commands,
     accept_config                    => $accept_config,
+    max_anonymous_clients            => $max_anonymous_clients,
     ticket_salt                      => $_ticket_salt,
     tls_protocolmin                  => $ssl_protocolmin,
+    tls_handshake_timeout            => $ssl_handshake_timeout,
+    connect_timeout                  => $connect_timeout,
     cipher_list                      => $ssl_cipher_list,
     bind_host                        => $bind_host,
     bind_port                        => $bind_port,
@@ -291,6 +366,7 @@ class icinga2::feature::api(
     access_control_allow_credentials => $access_control_allow_credentials,
     access_control_allow_headers     => $access_control_allow_headers,
     access_control_allow_methods     => $access_control_allow_methods,
+    environment                      => $environment,
   }
 
   # create endpoints and zones
@@ -307,7 +383,7 @@ class icinga2::feature::api(
     order       => 10,
     notify      => $_notify,
   }
- 
+
   # manage feature
   icinga2::feature { 'api':
     ensure      => $ensure,
diff --git a/modules/icinga2/manifests/feature/checker.pp b/modules/icinga2/manifests/feature/checker.pp
old mode 100755
new mode 100644
index 0aefdbed..0cfed5a0
--- a/modules/icinga2/manifests/feature/checker.pp
+++ b/modules/icinga2/manifests/feature/checker.pp
@@ -1,15 +1,14 @@
-# == Class: icinga2::feature::checker
+# @summary
+#   Configures the Icinga 2 feature checker.
 #
-# This module configures the Icinga 2 feature checker.
+# @param ensure
+#   Set to present enables the feature checker, absent disabled it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature checker, absent disabled it. Defaults to present.
-#
-# [*concurrent_checks*]
-#   The maximum number of concurrent checks. Defaults to 512.
+# @param concurrent_checks
+#   The maximum number of concurrent checks.
 #
+# @note Deprecated in Icinga 2.11, replaced by global constant
+#   MaxConcurrentChecks which will be set if you still use concurrent_checks.
 #
 class icinga2::feature::checker(
   Enum['absent', 'present'] $ensure            = present,
diff --git a/modules/icinga2/manifests/feature/command.pp b/modules/icinga2/manifests/feature/command.pp
old mode 100755
new mode 100644
index 5fabf698..25ce7b70
--- a/modules/icinga2/manifests/feature/command.pp
+++ b/modules/icinga2/manifests/feature/command.pp
@@ -1,16 +1,11 @@
-# == Class: icinga2::feature::command
+# @summary
+#   Configures the Icinga 2 feature command.
 #
-# This module configures the Icinga 2 feature command.
-#
-# === Parameters
-#
-# [*ensure*]
-#   Set to present to enable the feature command, absent to disabled it. Defaults to present.
-#
-# [*command_path*]
-#   Absolute path to the command pipe. Default depends on platform, /var/run/icinga2/cmd/icinga2.cmd on Linux
-#   and C:/ProgramData/icinga2/var/run/icinga2/cmd/icinga2.cmd on Windows.
+# @param ensure
+#   Set to present to enable the feature command, absent to disabled it.
 #
+# @param command_path
+#   Absolute path to the command pipe.
 #
 class icinga2::feature::command(
   Enum['absent', 'present']         $ensure       = present,
diff --git a/modules/icinga2/manifests/feature/compatlog.pp b/modules/icinga2/manifests/feature/compatlog.pp
old mode 100755
new mode 100644
index 5ce2afbc..9c53e69b
--- a/modules/icinga2/manifests/feature/compatlog.pp
+++ b/modules/icinga2/manifests/feature/compatlog.pp
@@ -1,21 +1,14 @@
-# == Class: icinga2::feature::compatlog
+# @summary
+#   Configures the Icinga 2 feature compatlog.
 #
-# This module configures the Icinga 2 feature compatlog.
+# @param ensure
+#   Set to present enables the feature compatlog, absent disabled it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature compatlog, absent disabled it. Defaults to present.
-#
-# [*log_dir*]
-#   Absolute path to the log directory. Default depends on platform,
-#   /var/log/icinga2/compat on Linux
-#   and C:/ProgramData/icinga2/var/log/icinga2/compat on Windows.
-#
-# [*rotation_method*]
-#   Sets how often should the log file be rotated. Valid options are:
-#   HOURLY, DAILY, WEEKLY or MONTHLY. Icinga defaults to DAILY.
+# @param log_dir
+#   Absolute path to the log directory.
 #
+# @param rotation_method
+#   Sets how often should the log file be rotated.
 #
 class icinga2::feature::compatlog(
   Enum['absent', 'present']                                 $ensure          = present,
diff --git a/modules/icinga2/manifests/feature/debuglog.pp b/modules/icinga2/manifests/feature/debuglog.pp
old mode 100755
new mode 100644
index a1ff21a0..41a88885
--- a/modules/icinga2/manifests/feature/debuglog.pp
+++ b/modules/icinga2/manifests/feature/debuglog.pp
@@ -1,17 +1,11 @@
-# == Class: icinga2::feature::debuglog
+# @summary
+#   Configures the Icinga 2 feature mainlog.
 #
-# This module configures the Icinga 2 feature mainlog.
-#
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature mainlog, absent disables it. Defaults to present.
-#
-# [*path*]
-#   Absolute path to the log file. Default depends on platform:
-#   /var/log/icinga2/debug.log on Linux
-#   C:/ProgramData/icinga2/var/log/icinga2/debug.log on Windows
+# @param ensure
+#   Set to present enables the feature mainlog, absent disables it.
 #
+# @param path
+#   Absolute path to the log file.
 #
 class icinga2::feature::debuglog(
   Enum['absent', 'present'] $ensure   = present,
diff --git a/modules/icinga2/manifests/feature/elasticsearch.pp b/modules/icinga2/manifests/feature/elasticsearch.pp
old mode 100755
new mode 100644
index 649a4dce..fa966fc6
--- a/modules/icinga2/manifests/feature/elasticsearch.pp
+++ b/modules/icinga2/manifests/feature/elasticsearch.pp
@@ -1,89 +1,85 @@
-# == Class: icinga2::feature::elasticsearch
+# @summary
+#   Configures the Icinga 2 feature elasticsearch.
 #
-# This module configures the Icinga 2 feature elasticsearch.
+# @example
+#   class { 'icinga2::feature::elasticsearch':
+#     host     => "10.10.0.15",
+#     index    => "icinga2"
+#   }
 #
-# === Parameters
+# @param ensure
+#   Set to present enables the feature elasticsearch, absent disables it.
 #
-# [*ensure*]
-#   Set to present enables the feature elasticsearch, absent disables it. Defaults to present.
+# @param host
+#    Elasticsearch host address.
 #
-# [*host*]
-#    Elasticsearch host address. Icinga defaults to '127.0.0.1'.
+# @param port
+#    Elasticsearch HTTP port.
 #
-# [*port*]
-#    Elasticsearch HTTP port. Icinga defaults to '9200'.
+# @param index
+#    Elasticsearch index name.
 #
-# [*index*]
-#    Elasticsearch index name. Icinga defaults to 'icinga2'.
-#
-# [*username*]
+# @param username
 #    Elasticsearch user name.
 #
-# [*password*]
-#    Elasticsearch user password.
+# @param password
+#    Elasticsearch user password. The password parameter isn't parsed anymore.
 #
-# [*enable_ssl*]
+# @param enable_ssl
 #    Either enable or disable SSL. Other SSL parameters are only affected if this is set to 'true'.
-#    Icinga defaults to 'false'.
 #
-# [*ssl_key_path*]
+# @param ssl_noverify
+#     Disable TLS peer verification.
+#
+# @param ssl_key_path
 #   Location of the private key.
 #
-# [*ssl_cert_path*]
+# @param ssl_cert_path
 #   Location of the certificate.
 #
-# [*ssl_cacert_path*]
+# @param ssl_cacert_path
 #   Location of the CA certificate.
 #
-# [*ssl_key*]
+# @param ssl_key
 #   The private key in a base64 encoded string to store in spicified ssl_key_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.key on Linux
 #
-# [*ssl_cert*]
+# @param ssl_cert
 #   The certificate in a base64 encoded to store in spicified ssl_cert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch.crt on Linux
 #
-# [*ssl_cacert*]
+# @param ssl_cacert
 #   The CA root certificate in a base64 encoded string to store in spicified ssl_cacert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/ElasticsearchWriter_elasticsearch_ca.crt on Linux
-#
-# [*enable_send_perfdata*]
-#    Whether to send check performance data metrics. Icinga defaults to 'false'.
 #
-# [*flush_interval*]
-#    How long to buffer data points before transferring to Elasticsearch. Icinga defaults to '10s'.
+# @param enable_send_perfdata
+#   Whether to send check performance data metrics.
 #
-# [*flush_threshold*]
-#    How many data points to buffer before forcing a transfer to Elasticsearch. Icinga defaults to '1024'.
+# @param flush_interval
+#   How long to buffer data points before transferring to Elasticsearch.
 #
-# === Example
-#
-# class { 'icinga2::feature::elasticsearch':
-#   host     => "10.10.0.15",
-#   index    => "icinga2"
-# }
+# @param flush_threshold
+#   How many data points to buffer before forcing a transfer to Elasticsearch.
 #
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::elasticsearch(
-  Enum['absent', 'present']              $ensure               = present,
-  Optional[Stdlib::Host]                 $host                 = undef,
-  Optional[Stdlib::Port::Unprivileged]   $port                 = undef,
-  Optional[String]                       $index                = undef,
-  Optional[String]                       $username             = undef,
-  Optional[String]                       $password             = undef,
-  Optional[Boolean]                      $enable_ssl           = undef,
-  Optional[Stdlib::Absolutepath]         $ssl_key_path         = undef,
-  Optional[Stdlib::Absolutepath]         $ssl_cert_path        = undef,
-  Optional[Stdlib::Absolutepath]         $ssl_cacert_path      = undef,
-  Optional[String]                       $ssl_key              = undef,
-  Optional[String]                       $ssl_cert             = undef,
-  Optional[String]                       $ssl_cacert           = undef,
-  Optional[Boolean]                      $enable_send_perfdata = undef,
-  Optional[Icinga2::Interval]            $flush_interval       = undef,
-  Optional[Integer]                      $flush_threshold      = undef,
+  Enum['absent', 'present']                     $ensure               = present,
+  Optional[Stdlib::Host]                        $host                 = undef,
+  Optional[Stdlib::Port::Unprivileged]          $port                 = undef,
+  Optional[String]                              $index                = undef,
+  Optional[String]                              $username             = undef,
+  Optional[Variant[String, Sensitive[String]]]  $password             = undef,
+  Optional[Boolean]                             $enable_ssl           = undef,
+  Optional[Boolean]                             $ssl_noverify         = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_key_path         = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_cert_path        = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_cacert_path      = undef,
+  Optional[Stdlib::Base64]                      $ssl_key              = undef,
+  Optional[Stdlib::Base64]                      $ssl_cert             = undef,
+  Optional[Stdlib::Base64]                      $ssl_cacert           = undef,
+  Optional[Boolean]                             $enable_send_perfdata = undef,
+  Optional[Icinga2::Interval]                   $flush_interval       = undef,
+  Optional[Integer]                             $flush_threshold      = undef,
+  Optional[Boolean]                             $enable_ha            = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -106,7 +102,10 @@ class icinga2::feature::elasticsearch(
   if $enable_ssl {
 
     $ssl_dir       = $::icinga2::globals::cert_dir
-    $_ssl_key_mode = '0600'
+    $_ssl_key_mode = $::facts['kernel'] ? {
+      'windows' => undef,
+      default   => '0600',
+    }
 
     # Set defaults for certificate stuff and/or do validation
     if $ssl_key {
@@ -116,13 +115,17 @@ class icinga2::feature::elasticsearch(
         $_ssl_key_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch.key"
       }
 
-      $_ssl_key = $ssl_key
+      $_ssl_key = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+        default   => $ssl_key,
+      }
 
       file { $_ssl_key_path:
-        ensure  => file,
-        mode    => $_ssl_key_mode,
-        content => $_ssl_key,
-        tag     => 'icinga2::config::file',
+        ensure    => file,
+        mode      => $_ssl_key_mode,
+        content   => $_ssl_key,
+        show_diff => false,
+        tag       => 'icinga2::config::file',
       }
     } else {
       $_ssl_key_path = $ssl_key_path
@@ -135,7 +138,10 @@ class icinga2::feature::elasticsearch(
         $_ssl_cert_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch.crt"
       }
 
-      $_ssl_cert = $ssl_cert
+      $_ssl_cert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cert,
+      }
 
       file { $_ssl_cert_path:
         ensure  => file,
@@ -153,7 +159,10 @@ class icinga2::feature::elasticsearch(
         $_ssl_cacert_path = "${ssl_dir}/ElasticsearchWriter_elasticsearch_ca.crt"
       }
 
-      $_ssl_cacert = $ssl_cacert
+      $_ssl_cacert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cacert,
+      }
 
       file { $_ssl_cacert_path:
         ensure  => file,
@@ -165,25 +174,35 @@ class icinga2::feature::elasticsearch(
     }
 
     $attrs_ssl = {
-      enable_tls  => $enable_ssl,
-      ca_path     => $_ssl_cacert_path,
-      cert_path   => $_ssl_cert_path,
-      key_path    => $_ssl_key_path,
+      enable_tls        => $enable_ssl,
+      insecure_noverify => $ssl_noverify,
+      ca_path           => $_ssl_cacert_path,
+      cert_path         => $_ssl_cert_path,
+      key_path          => $_ssl_key_path,
     }
   } # enable_ssl
   else {
     $attrs_ssl = { enable_tls  => $enable_ssl }
   }
 
+  $_password = if $password =~ String {
+    Sensitive($password)
+  } elsif $password =~ Sensitive {
+    $password
+  } else {
+    undef
+  }
+
   $attrs = {
     host                   => $host,
     port                   => $port,
     index                  => $index,
     username               => $username,
-    password               => $password,
+    password               => $_password,
     enable_send_perfdata   => $enable_send_perfdata,
     flush_interval         => $flush_interval,
     flush_threshold        => $flush_threshold,
+    enable_ha              => $enable_ha,
   }
 
   # create object
@@ -191,7 +210,7 @@ class icinga2::feature::elasticsearch(
     object_name => 'elasticsearch',
     object_type => 'ElasticsearchWriter',
     attrs       => delete_undef_values(merge($attrs, $attrs_ssl)),
-    attrs_list  => keys($attrs),
+    attrs_list  => concat(keys($attrs), keys($attrs_ssl)),
     target      => "${conf_dir}/features-available/elasticsearch.conf",
     notify      => $_notify,
     order       => 10,
diff --git a/modules/icinga2/manifests/feature/gelf.pp b/modules/icinga2/manifests/feature/gelf.pp
old mode 100755
new mode 100644
index 4ee6048d..db36913b
--- a/modules/icinga2/manifests/feature/gelf.pp
+++ b/modules/icinga2/manifests/feature/gelf.pp
@@ -1,57 +1,188 @@
-# == Class: icinga2::feature::gelf
+# @summary
+#   Configures the Icinga 2 feature gelf.
 #
-# This module configures the Icinga 2 feature gelf.
+# @param ensure
+#   Set to present enables the feature gelf, absent disables it.
 #
-# === Parameters
+# @param host
+#   GELF receiver host address.
 #
-# [*ensure*]
-#   Set to present enables the feature gelf, absent disables it. Defaults to present.
+# @param port
+#   GELF receiver port.
 #
-# [*host*]
-#   GELF receiver host address. Icinga defaults to '127.0.0.1'.
+# @param source
+#   Source name for this instance.
 #
-# [*port*]
-#   GELF receiver port. Icinga defaults to '12201'.
+# @param enable_ssl
+#    Either enable or disable SSL/TLS. Other SSL parameters are only affected if this is set to 'true'.
 #
-# [*source*]
-#   Source name for this instance. Icinga defaults to 'icinga2'.
+# @param ssl_key_path
+#   Location of the private key. Only valid if ssl is enabled.
 #
-# [*enable_send_perfdata*]
-#   Enable performance data for 'CHECK RESULT' events. Icinga defaults to false.
+# @param ssl_cert_path
+#   Location of the certificate. Only valid if ssl is enabled.
 #
+# @param ssl_cacert_path
+#   Location of the CA certificate. Only valid if ssl is enabled.
+#
+# @param ssl_key
+#   The private key in a base64 encoded string to store in spicified ssl_key_path file.
+#   Only valid if ssl is enabled.
+#
+# @param ssl_cert
+#   The certificate in a base64 encoded string to store in spicified ssl_cert_path file.
+#   Only valid if ssl is enabled.
+#
+# @param ssl_cacert
+#   The CA root certificate in a base64 encoded string to store in spicified ssl_cacert_path file.
+#   Only valid if ssl is enabled.
+#
+# @param ssl_noverify
+#     Disable TLS peer verification.
+#
+# @param enable_send_perfdata
+#   Enable performance data for 'CHECK RESULT' events.
+#
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::gelf(
   Enum['absent', 'present']                $ensure               = present,
   Optional[Stdlib::Host]                   $host                 = undef,
   Optional[Stdlib::Port::Unprivileged]     $port                 = undef,
   Optional[String]                         $source               = undef,
+  Boolean                                  $enable_ssl           = false,
+  Optional[Stdlib::Absolutepath]           $ssl_key_path         = undef,
+  Optional[Stdlib::Absolutepath]           $ssl_cert_path        = undef,
+  Optional[Stdlib::Absolutepath]           $ssl_cacert_path      = undef,
+  Optional[Stdlib::Base64]                 $ssl_key              = undef,
+  Optional[Stdlib::Base64]                 $ssl_cert             = undef,
+  Optional[Stdlib::Base64]                 $ssl_cacert           = undef,
+  Optional[Boolean]                        $ssl_noverify         = undef,
   Optional[Boolean]                        $enable_send_perfdata = undef,
+  Optional[Boolean]                        $enable_ha            = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
     fail('You must include the icinga2 base class before using any icinga2 feature class!')
   }
 
+  $owner    = $::icinga2::globals::user
+  $group    = $::icinga2::globals::group
   $conf_dir = $::icinga2::globals::conf_dir
-  $_notify  = $ensure ? {
+  $ssl_dir  = $::icinga2::globals::cert_dir
+
+  $_ssl_key_mode = $::facts['os']['family'] ? {
+    'windows' => undef,
+    default   => '0600',
+  }
+
+  $_notify = $ensure ? {
     'present' => Class['::icinga2::service'],
     default   => undef,
   }
 
+  File {
+    owner   => $owner,
+    group   => $group,
+  }
+
+
+  if $enable_ssl {
+    # Set defaults for certificate stuff
+    if $ssl_key {
+      if $ssl_key_path {
+        $_ssl_key_path = $ssl_key_path }
+      else {
+        $_ssl_key_path = "${ssl_dir}/GelfWriter_gelf.key"
+      }
+
+      $_ssl_key = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+        default   => $ssl_key,
+      }
+
+      file { $_ssl_key_path:
+        ensure    => file,
+        mode      => $_ssl_key_mode,
+        content   => $ssl_key,
+        show_diff => false,
+        tag       => 'icinga2::config::file',
+      }
+    } else {
+      $_ssl_key_path = $ssl_key_path
+    }
+
+    if $ssl_cert {
+      if $ssl_cert_path {
+        $_ssl_cert_path = $ssl_cert_path }
+      else {
+        $_ssl_cert_path = "${ssl_dir}/GelfWriter_gelf.crt"
+      }
+
+      $_ssl_cert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cert,
+      }
+
+      file { $_ssl_cert_path:
+        ensure  => file,
+        content => $ssl_cert,
+        tag     => 'icinga2::config::file',
+      }
+    } else {
+      $_ssl_cert_path = $ssl_cert_path
+    }
+
+    if $ssl_cacert {
+      if $ssl_cacert_path {
+        $_ssl_cacert_path = $ssl_cacert_path }
+      else {
+        $_ssl_cacert_path = "${ssl_dir}/GelfWriter_gelf_ca.crt"
+      }
+
+      $_ssl_cacert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cacert,
+      }
+
+      file { $_ssl_cacert_path:
+        ensure  => file,
+        content => $ssl_cacert,
+        tag     => 'icinga2::config::file',
+      }
+    } else {
+      $_ssl_cacert_path = $ssl_cacert_path
+    }
+
+    $attrs_ssl = {
+      enable_tls        => $enable_ssl,
+      insecure_noverify => $ssl_noverify,
+      ca_path           => $_ssl_cacert_path,
+      cert_path         => $_ssl_cert_path,
+      key_path          => $_ssl_key_path,
+    }
+  } # enable_ssl
+  else {
+    $attrs_ssl = { enable_tls  => $enable_ssl }
+  }
+
+
   # compose attributes
   $attrs = {
     host                 => $host,
     port                 => $port,
     source               => $source,
     enable_send_perfdata => $enable_send_perfdata,
+    enable_ha            => $enable_ha,
   }
 
   # create object
   icinga2::object { 'icinga2::object::GelfWriter::gelf':
     object_name => 'gelf',
     object_type => 'GelfWriter',
-    attrs       => delete_undef_values($attrs),
-    attrs_list  => keys($attrs),
+    attrs       => delete_undef_values(merge($attrs, $attrs_ssl)),
+    attrs_list  => concat(keys($attrs), keys($attrs_ssl)),
     target      => "${conf_dir}/features-available/gelf.conf",
     order       => 10,
     notify      => $_notify,
diff --git a/modules/icinga2/manifests/feature/graphite.pp b/modules/icinga2/manifests/feature/graphite.pp
old mode 100755
new mode 100644
index 8bc5f77d..74a225de
--- a/modules/icinga2/manifests/feature/graphite.pp
+++ b/modules/icinga2/manifests/feature/graphite.pp
@@ -1,32 +1,35 @@
-# == Class: icinga2::feature::graphite
+# @summary
+#   Configures the Icinga 2 feature graphite.
 #
-# This module configures the Icinga 2 feature graphite.
+# @example
+#   class { '::icinga2::feature::graphite':
+#     host                   => '10.10.0.15',
+#     port                   => 2003,
+#     enable_send_thresholds => true,
+#     enable_send_metadata   => true,
+#   }
 #
-# === Parameters
+# @param ensure
+#   Set to present enables the feature graphite, absent disabled it.
 #
-# [*ensure*]
-#   Set to present enables the feature graphite, absent disabled it. Defaults to present.
+# @param host
+#   Graphite Carbon host address.
 #
-# [*host*]
-#   Graphite Carbon host address. Icinga defaults to '127.0.0.1'.
+# @param port
+#   Graphite Carbon port.
 #
-# [*port*]
-#   Graphite Carbon port. Icinga defaults to 2003.
-#
-# [*host_name_template*]
+# @param host_name_template
 #   Template for metric path of hosts.
-#   Icinga defaults to 'icinga2.$host.name$.host.$host.check_command$'.
 #
-# [*service_name_template*]
+# @param service_name_template
 #   Template for metric path of services.
-#   Icinga defaults to 'icinga2.$host.name$.services.$service.name$.$service.check_command$'.
 #
-# [*enable_send_thresholds*]
-#   Send threholds as metrics. Icinga defaults to false.
+# @param enable_send_thresholds
 #
-# [*enable_send_metadata*]
-#   Send metadata as metrics. Icinga defaults to false.
+# @param enable_send_metadata
 #
+# @param [Optional[Boolean]] enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::graphite(
   Enum['absent', 'present']                $ensure                 = present,
@@ -36,6 +39,7 @@ class icinga2::feature::graphite(
   Optional[String]                         $service_name_template  = undef,
   Optional[Boolean]                        $enable_send_thresholds = undef,
   Optional[Boolean]                        $enable_send_metadata   = undef,
+  Optional[Boolean]                        $enable_ha              = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -56,6 +60,7 @@ class icinga2::feature::graphite(
     service_name_template  => $service_name_template,
     enable_send_thresholds => $enable_send_thresholds,
     enable_send_metadata   => $enable_send_metadata,
+    enable_ha              => $enable_ha,
   }
 
   # create object
diff --git a/modules/icinga2/manifests/feature/idomysql.pp b/modules/icinga2/manifests/feature/idomysql.pp
old mode 100755
new mode 100644
index 97d8c30e..15879f50
--- a/modules/icinga2/manifests/feature/idomysql.pp
+++ b/modules/icinga2/manifests/feature/idomysql.pp
@@ -1,142 +1,126 @@
-# == Class: icinga2::feature::idomysql
-#
-# This module configures the Icinga 2 feature ido-mysql.
-#
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature ido-mysql, absent disables it. Defaults to present.
-#
-# [*host*]
-#    MySQL database host address. Defaults to 'localhost'.
-#
-# [*port*]
+# @summary
+#   Installs and configures the Icinga 2 feature ido-mysql.
+#
+# @example The ido-mysql featue requires an existing database and a user with permissions. This example uses the [puppetlabs/mysql](https://forge.puppet.com/puppetlabs/mysql) module.
+#   include mysql::server
+#
+#   mysql::db { 'icinga2':
+#     user     => 'icinga2',
+#     password => 'supersecret',
+#     host     => 'localhost',
+#     grant    => ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'DROP', 'CREATE VIEW', 'CREATE', 'INDEX', 'EXECUTE', 'ALTER'],
+#   }
+#
+#   class{ 'icinga2::feature::idomysql':
+#     user          => "icinga2",
+#     password      => "supersecret",
+#     database      => "icinga2",
+#     import_schema => true,
+#     require       => Mysql::Db['icinga2']
+#   }
+#
+# @param ensure
+#   Set to present enables the feature ido-mysql, absent disables it.
+#
+# @param host
+#    MySQL database host address.
+#
+# @param port
 #    MySQL database port.
 #
-# [*socket_path*]
+# @param socket_path
 #    MySQL socket path.
 #
-# [*user*]
-#    MySQL database user with read/write permission to the icinga database. Defaults to 'icinga'.
+# @param user
+#    MySQL database user with read/write permission to the icinga database.
 #
-# [*password*]
-#    MySQL database user's password.
+# @param password
+#    MySQL database user's password. The password parameter isn't parsed anymore.
 #
-# [*database*]
-#    MySQL database name. Defaults to 'icinga'.
+# @param database
+#    MySQL database name.
 #
-# [*enable_ssl*]
-#    Either enable or disable SSL/TLS. Other SSL parameters are only affected if this is set to 'true'.
-#    Defaults to 'false'.
+# @param enable_ssl
+#   Either enable or disable SSL/TLS. Other SSL parameters are only affected if this is set to 'true'.
 #
-# [*ssl_key_path*]
+# @param ssl_key_path
 #   Location of the private key. Only valid if ssl is enabled.
 #
-# [*ssl_cert_path*]
+# @param ssl_cert_path
 #   Location of the certificate. Only valid if ssl is enabled.
 #
-# [*ssl_cacert_path*]
+# @param ssl_cacert_path
 #   Location of the CA certificate. Only valid if ssl is enabled.
 #
-# [*ssl_key*]
+# @param ssl_key
 #   The private key in a base64 encoded string to store in spicified ssl_key_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.key on Linux
 #   Only valid if ssl is enabled.
 #
-# [*ssl_cert*]
+# @param ssl_cert
 #   The certificate in a base64 encoded string to store in spicified ssl_cert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql.crt on Linux
 #   Only valid if ssl is enabled.
 #
-# [*ssl_cacert*]
+# @param ssl_cacert
 #   The CA root certificate in a base64 encoded string to store in spicified ssl_cacert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/IdoMysqlConnection_ido-mysql_ca.crt on Linux
 #   Only valid if ssl is enabled.
 #
-# [*ssl_capath*]
+# @param ssl_capath
 #    MySQL SSL trusted SSL CA certificates in PEM format directory path. Only valid if ssl is enabled.
 #
-# [*ssl_cipher*]
+# @param ssl_cipher
 #    MySQL SSL list of allowed ciphers. Only valid if ssl is enabled.
 #
-# [*table_prefix*]
-#   MySQL database table prefix. Icinga defaults to 'icinga_'.
+# @param table_prefix
+#   MySQL database table prefix.
 #
-# [*instance_name*]
-#   Unique identifier for the local Icinga 2 instance. Icinga defaults to 'default'.
+# @param instance_name
+#   Unique identifier for the local Icinga 2 instance.
 #
-# [*instance_description*]
+# @param instance_description
 #   Description for the Icinga 2 instance.
 #
-# [*enable_ha*]
-#   Enable the high availability functionality. Only valid in a cluster setup. Icinga defaults to 'true'.
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
-# [*failover_timeout*]
-#   Set the failover timeout in a HA cluster. Must not be lower than 60s. Icinga defaults to '60s'.
+# @param failover_timeout
+#   Set the failover timeout in a HA cluster. Must not be lower than 60s.
 #
-# [*cleanup*]
+# @param cleanup
 #   Hash with items for historical table cleanup.
 #
-# [*categories*]
+# @param categories
 #   Array of information types that should be written to the database.
 #
-# [*import_schema*]
-#   Whether to import the MySQL schema or not. Defaults to 'false'.
-#
-# === Examples
-#
-# The ido-mysql featue requires an existing database and a user with permissions.
-# To install a database server, create databases and manage user permissions we recommend the puppetlabs/mysql module.
-# Here's an example how you create a MySQL database with the corresponding user with permissions by usng the
-# puppetlabs/mysql module:
-#
-# include icinga2
-# include mysql::server
-#
-# mysql::db { 'icinga2':
-#   user     => 'icinga2',
-#   password => 'supersecret',
-#   host     => 'localhost',
-#   grant    => ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'DROP', 'CREATE VIEW', 'CREATE', 'INDEX', 'EXECUTE', 'ALTER'],
-# }
-#
-# class{ 'icinga2::feature::idomysql':
-#   user          => "icinga2",
-#   password      => "supersecret",
-#   database      => "icinga2",
-#   import_schema => true,
-#   require       => Mysql::Db['icinga2']
-# }
-#
+# @param import_schema
+#   Whether to import the MySQL schema or not. New options `mariadb` and `mysql`,
+#   both means true. With mariadb its cli options are used for the import,
+#   whereas with mysql its different options.
 #
 class icinga2::feature::idomysql(
-  String                                      $password,
-  Enum['absent', 'present']                   $ensure                 = present,
-  Stdlib::Host                                $host                   = 'localhost',
-  Optional[Stdlib::Port::Unprivileged]        $port                   = undef,
-  Optional[Stdlib::Absolutepath]              $socket_path            = undef,
-  String                                      $user                   = 'icinga',
-  String                                      $database               = 'icinga',
-  Boolean                                     $enable_ssl             = false,
-  Optional[Stdlib::Absolutepath]              $ssl_key_path           = undef,
-  Optional[Stdlib::Absolutepath]              $ssl_cert_path          = undef,
-  Optional[Stdlib::Absolutepath]              $ssl_cacert_path        = undef,
-  Optional[String]                            $ssl_key                = undef,
-  Optional[String]                            $ssl_cert               = undef,
-  Optional[String]                            $ssl_cacert             = undef,
-  Optional[Stdlib::Absolutepath]              $ssl_capath             = undef,
-  Optional[String]                            $ssl_cipher             = undef,
-  Optional[String]                            $table_prefix           = undef,
-  Optional[String]                            $instance_name          = undef,
-  Optional[String]                            $instance_description   = undef,
-  Optional[Boolean]                           $enable_ha              = undef,
-  Optional[Icinga2::Interval]                 $failover_timeout       = undef,
-  Optional[Hash[String,Icinga2::Interval]]    $cleanup                = undef,
-  Optional[Array]                             $categories             = undef,
-  Boolean                                     $import_schema          = false,
+  Variant[String, Sensitive[String]]         $password,
+  Enum['absent', 'present']                  $ensure                 = present,
+  Stdlib::Host                               $host                   = 'localhost',
+  Optional[Stdlib::Port::Unprivileged]       $port                   = undef,
+  Optional[Stdlib::Absolutepath]             $socket_path            = undef,
+  String                                     $user                   = 'icinga',
+  String                                     $database               = 'icinga',
+  Boolean                                    $enable_ssl             = false,
+  Optional[Stdlib::Absolutepath]             $ssl_key_path           = undef,
+  Optional[Stdlib::Absolutepath]             $ssl_cert_path          = undef,
+  Optional[Stdlib::Absolutepath]             $ssl_cacert_path        = undef,
+  Optional[Stdlib::Base64]                   $ssl_key                = undef,
+  Optional[Stdlib::Base64]                   $ssl_cert               = undef,
+  Optional[Stdlib::Base64]                   $ssl_cacert             = undef,
+  Optional[Stdlib::Absolutepath]             $ssl_capath             = undef,
+  Optional[String]                           $ssl_cipher             = undef,
+  Optional[String]                           $table_prefix           = undef,
+  Optional[String]                           $instance_name          = undef,
+  Optional[String]                           $instance_description   = undef,
+  Optional[Boolean]                          $enable_ha              = undef,
+  Optional[Icinga2::Interval]                $failover_timeout       = undef,
+  Optional[Icinga2::IdoCleanup]              $cleanup                = undef,
+  Optional[Array]                            $categories             = undef,
+  Variant[Boolean, Enum['mariadb', 'mysql']] $import_schema          = false,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -150,14 +134,24 @@ class icinga2::feature::idomysql(
   $ido_mysql_package_name = $::icinga2::globals::ido_mysql_package_name
   $ido_mysql_schema       = $::icinga2::globals::ido_mysql_schema
   $manage_package         = $::icinga2::manage_package
+  $manage_packages        = $::icinga2::manage_packages
 
-  $_ssl_key_mode          = '0600'
+  $_ssl_key_mode          = $::facts['os']['family'] ? {
+    'windows' => undef,
+    default   => '0600',
+  }
 
-  $_notify           = $ensure ? {
+  $_notify                = $ensure ? {
     'present' => Class['::icinga2::service'],
     default   => undef,
   }
 
+  $_password              = if $password =~ Sensitive {
+    $password
+  } else {
+    Sensitive($password)
+  }
+
   # to build mysql exec command to import schema
   if $import_schema {
     $_mysql_options = join(any2array(delete_undef_values({
@@ -185,13 +179,17 @@ class icinga2::feature::idomysql(
         $_ssl_key_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql.key"
       }
 
-      $_ssl_key = $ssl_key
+      $_ssl_key = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+        default   => $ssl_key,
+      }
 
       file { $_ssl_key_path:
-        ensure  => file,
-        mode    => $_ssl_key_mode,
-        content => $ssl_key,
-        tag     => 'icinga2::config::file',
+        ensure    => file,
+        mode      => $_ssl_key_mode,
+        content   => $ssl_key,
+        show_diff => false,
+        tag       => 'icinga2::config::file',
       }
     } else {
       $_ssl_key_path = $ssl_key_path
@@ -204,7 +202,10 @@ class icinga2::feature::idomysql(
         $_ssl_cert_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql.crt"
       }
 
-      $_ssl_cert = $ssl_cert
+      $_ssl_cert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cert,
+      }
 
       file { $_ssl_cert_path:
         ensure  => file,
@@ -222,7 +223,10 @@ class icinga2::feature::idomysql(
         $_ssl_cacert_path = "${ssl_dir}/IdoMysqlConnection_ido-mysql_ca.crt"
       }
 
-      $_ssl_cacert = $ssl_cacert
+      $_ssl_cacert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cacert,
+      }
 
       file { $_ssl_cacert_path:
         ensure  => file,
@@ -234,16 +238,32 @@ class icinga2::feature::idomysql(
     }
 
     if $import_schema {
-      $_ssl_options = join(any2array(delete_undef_values({
-        '--ssl-ca'     => $_ssl_cacert_path,
-        '--ssl-cert'   => $_ssl_cert_path,
-        '--ssl-key'    => $_ssl_key_path,
-        '--ssl-capath' => $ssl_capath,
-        '--ssl-cipher' => $ssl_cipher,
-      })), ' ')
-  
+      if $enable_ssl {
+        if $import_schema =~ Boolean or $import_schema == 'mariadb' {
+          $_ssl_options = join(any2array(delete_undef_values({
+            '--ssl'        => '',
+            '--ssl-ca'     => $_ssl_cacert_path,
+            '--ssl-cert'   => $_ssl_cert_path,
+            '--ssl-key'    => $_ssl_key_path,
+            '--ssl-capath' => $ssl_capath,
+            '--ssl-cipher' => $ssl_cipher,
+          })), ' ')
+        } else {
+          $_ssl_options = join(any2array(delete_undef_values({
+            '--ssl-mode'   => 'required',
+            '--ssl-ca'     => $_ssl_cacert_path,
+            '--ssl-cert'   => $_ssl_cert_path,
+            '--ssl-key'    => $_ssl_key_path,
+            '--ssl-capath' => $ssl_capath,
+            '--ssl-cipher' => $ssl_cipher,
+          })), ' ')
+        }
+      } else {
+        $_ssl_options = ''
+      }
+
       # set cli options for mysql connection via tls
-      $_mysql_command = "mysql ${_mysql_options} -p'${password}' ${_ssl_options} ${database}"
+      $_mysql_command = "mysql ${_mysql_options} -p'${_password.unwrap}' ${_ssl_options} ${database}"
     }
 
     $attrs_ssl = {
@@ -258,7 +278,7 @@ class icinga2::feature::idomysql(
   else {
     # set cli options for mysql connection
     if $import_schema {
-      $_mysql_command = "mysql ${_mysql_options} -p'${password}' ${database}" }
+      $_mysql_command = "mysql ${_mysql_options} -p'${_password.unwrap}' ${database}" }
 
     $attrs_ssl = { enable_ssl  => $enable_ssl }
   }
@@ -268,7 +288,7 @@ class icinga2::feature::idomysql(
     port                  => $port,
     socket_path           => $socket_path,
     user                  => $user,
-    password              => $password,
+    password              => $_password,
     database              => $database,
     table_prefix          => $table_prefix,
     instance_name         => $instance_name,
@@ -280,12 +300,14 @@ class icinga2::feature::idomysql(
   }
 
   # install additional package
-  if $ido_mysql_package_name and $manage_package {
-    if $::osfamily == 'debian' {
-      ensure_resources('file', { '/etc/dbconfig-common' => { ensure => directory } })
+  if $ido_mysql_package_name and ($manage_package or $manage_packages) {
+    if $::facts['os']['family'] == 'debian' {
+      ensure_resources('file', { '/etc/dbconfig-common' => { ensure => directory, owner => 'root', group => 'root' } })
       file { "/etc/dbconfig-common/${ido_mysql_package_name}.conf":
         ensure  => file,
         content => "dbc_install='false'\ndbc_upgrade='false'\ndbc_remove='false'\n",
+        owner   => 'root',
+        group   => 'root',
         mode    => '0600',
         before  => Package[$ido_mysql_package_name],
       }
@@ -299,13 +321,13 @@ class icinga2::feature::idomysql(
 
   # import db schema
   if $import_schema {
-    if $ido_mysql_package_name and $manage_package {
+    if $ido_mysql_package_name and ($manage_package or $manage_packages) {
       Package[$ido_mysql_package_name] -> Exec['idomysql-import-schema']
     }
     exec { 'idomysql-import-schema':
       user    => 'root',
-      path    => $::path,
-      command => "${_mysql_command} < ${ido_mysql_schema}",
+      path    => $::facts['path'],
+      command => "${_mysql_command} < \"${ido_mysql_schema}\"",
       unless  => "${_mysql_command} -Ns -e 'select version from icinga_dbversion'",
     }
   }
diff --git a/modules/icinga2/manifests/feature/idopgsql.pp b/modules/icinga2/manifests/feature/idopgsql.pp
old mode 100755
new mode 100644
index 247a3838..4f06fcc4
--- a/modules/icinga2/manifests/feature/idopgsql.pp
+++ b/modules/icinga2/manifests/feature/idopgsql.pp
@@ -1,112 +1,221 @@
-# == Class: icinga2::feature::idopgsql
+# @summary
+#   Installs and configures the Icinga 2 feature ido-pgsql.
 #
-# This module configures the Icinga 2 feature ido-pgsql.
+# @example The ido-pgsql featue requires an existing database and a user with permissions. This example uses the [puppetlab/postgresql](https://forge.puppet.com/puppetlabs/postgresql) module.
+#   include icinga2
+#   include postgresql::server
 #
-# === Parameters
+#   postgresql::server::db { 'icinga2':
+#     user     => 'icinga2',
+#     password => postgresql::postgresql_password('icinga2', 'supersecret'),
+#   }
 #
-# [*ensure*]
-#   Set to present enables the feature ido-pgsql, absent disables it. Defaults to present.
+#   class{ 'icinga2::feature::idopgsql':
+#     user          => 'icinga2',
+#     password      => 'supersecret',
+#     database      => 'icinga2',
+#     import_schema => true,
+#     require       => Postgresql::Server::Db['icinga2']
+#   }
 #
-# [*host*]
-#    PostgreSQL database host address. Defaults to 'localhost'.
+# @param ensure
+#   Set to present enables the feature ido-pgsql, absent disables it.
 #
-# [*port*]
-#    PostgreSQL database port. Defaults to '5432'.
+# @param host
+#    PostgreSQL database host address.
 #
-# [*user*]
+# @param port
+#    PostgreSQL database port.
+#
+# @param user
 #    PostgreSQL database user with read/write permission to the icinga database.
-#    Defaults to 'icinga'.
 #
-# [*password*]
-#    PostgreSQL database user's password.
+# @param password
+#    PostgreSQL database user's password. The password parameter isn't parsed anymore.
 #
-# [*database*]
-#    PostgreSQL database name. Defaults to 'icinga'.
+# @param database
+#    PostgreSQL database name.
 #
-# [*table_prefix*]
-#   PostgreSQL database table prefix. Icinga defaults to "icinga_".
+# @param ssl_mode
+#   Enable SSL connection mode.
 #
-# [*instance_name*]
-#   Unique identifier for the local Icinga 2 instance. Icinga defaults to "default".
+# @param ssl_key_path
+#   Location of the private key.
 #
-# [*instance_description*]
-#   Description of the Icinga 2 instance.
+# @param ssl_cert_path
+#   Location of the certificate.
 #
-# [*enable_ha*]
-#   Enable the high availability functionality. Only valid in a cluster setup. Icinga defaults to 'true'.
+# @param ssl_cacert_path
+#   Location of the CA certificate.
 #
-# [*failover_timeout*]
-#   Set the failover timeout in a HA cluster. Must not be lower than 60s. Icinga defaults to '60s'.
+# @param ssl_key
+#   The private key in a base64 encoded string to store in spicified ssl_key_path file.
 #
-# [*cleanup*]
-#   Hash with items for historical table cleanup.
+# @param ssl_cert
+#   The certificate in a base64 encoded string to store in spicified ssl_cert_path file.
 #
-# [*categories*]
-#   Array of information types that should be written to the database.
+# @param ssl_cacert
+#   The CA root certificate in a base64 encoded string to store in spicified ssl_cacert_path file.
+#
+# @param table_prefix
+#   PostgreSQL database table prefix.
 #
-# [*import_schema*]
-#   Whether to import the PostgreSQL schema or not. Defaults to 'false'.
+# @param instance_name
+#   Unique identifier for the local Icinga 2 instance.
 #
-# === Examples
+# @param instance_description
+#   Description of the Icinga 2 instance.
 #
-# The ido-pgsql featue requires an existing database and a user with permissions.
-# To install a database server, create databases and manage user permissions we recommend the puppetlabs-postgresql module.
-# Here's an example how you create a PostgreSQL database with the corresponding user with permissions by usng the
-# puppetlabs-postgresql module:
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
-# include icinga2
-# include postgresql::server
+# @param failover_timeout
+#   Set the failover timeout in a HA cluster. Must not be lower than 60s.
 #
-# postgresql::server::db { 'icinga2':
-#   user     => 'icinga2',
-#   password => postgresql_password('icinga2', 'supersecret'),
-# }
+# @param cleanup
+#   Hash with items for historical table cleanup.
 #
-# class{ 'icinga2::feature::idopgsql':
-#   user          => "icinga2",
-#   password      => "supersecret",
-#   database      => "icinga2",
-#   import_schema => true,
-#   require       => Postgresql::Server::Db['icinga2']
-# }
+# @param categories
+#   Array of information types that should be written to the database.
 #
+# @param import_schema
+#   Whether to import the PostgreSQL schema or not.
 #
 class icinga2::feature::idopgsql(
-  String                         $password,
-  Enum['absent', 'present']      $ensure               = present,
-  Stdlib::Host                   $host                 = 'localhost',
-  Stdlib::Port::Unprivileged     $port                 = 5432,
-  String                         $user                 = 'icinga',
-  String                         $database             = 'icinga',
-  Optional[String]               $table_prefix         = undef,
-  Optional[String]               $instance_name        = undef,
-  Optional[String]               $instance_description = undef,
-  Optional[Boolean]              $enable_ha            = undef,
-  Optional[Icinga2::Interval]    $failover_timeout     = undef,
-  Optional[Hash]                 $cleanup              = undef,
-  Optional[Array]                $categories           = undef,
-  Boolean                        $import_schema        = false,
+  Variant[String, Sensitive[String]]  $password,
+  Enum['absent', 'present']           $ensure               = present,
+  Stdlib::Host                        $host                 = 'localhost',
+  Stdlib::Port::Unprivileged          $port                 = 5432,
+  String                              $user                 = 'icinga',
+  String                              $database             = 'icinga',
+  Optional[Enum['disable', 'allow',
+      'prefer', 'verify-full',
+      'verify-ca', 'require']]        $ssl_mode             = undef,
+  Optional[Stdlib::Absolutepath]      $ssl_key_path         = undef,
+  Optional[Stdlib::Absolutepath]      $ssl_cert_path        = undef,
+  Optional[Stdlib::Absolutepath]      $ssl_cacert_path      = undef,
+  Optional[Stdlib::Base64]            $ssl_key              = undef,
+  Optional[Stdlib::Base64]            $ssl_cert             = undef,
+  Optional[Stdlib::Base64]            $ssl_cacert           = undef,
+  Optional[String]                    $table_prefix         = undef,
+  Optional[String]                    $instance_name        = undef,
+  Optional[String]                    $instance_description = undef,
+  Optional[Boolean]                   $enable_ha            = undef,
+  Optional[Icinga2::Interval]         $failover_timeout     = undef,
+  Optional[Icinga2::IdoCleanup]       $cleanup              = undef,
+  Optional[Array]                     $categories           = undef,
+  Boolean                             $import_schema        = false,
 ) {
 
   if ! defined(Class['::icinga2']) {
     fail('You must include the icinga2 base class before using any icinga2 feature class!')
   }
 
+  $owner                  = $::icinga2::globals::user
+  $group                  = $::icinga2::globals::group
   $conf_dir               = $::icinga2::globals::conf_dir
+  $ssl_dir                = $::icinga2::globals::cert_dir
   $ido_pgsql_package_name = $::icinga2::globals::ido_pgsql_package_name
   $ido_pgsql_schema       = $::icinga2::globals::ido_pgsql_schema
   $manage_package         = $::icinga2::manage_package
+  $manage_packages        = $::icinga2::manage_packages
   $_notify                = $ensure ? {
     'present' => Class['::icinga2::service'],
     default   => undef,
   }
 
+  $_ssl_key_mode          = $::facts['os']['family'] ? {
+    'windows' => undef,
+    default   => '0600',
+  }
+
+  $_password              = if $password =~ Sensitive {
+    $password
+  } else {
+    Sensitive($password)
+  }
+
+  File {
+    owner   => $owner,
+    group   => $group,
+  }
+
+  # Set defaults for certificate stuff
+  if $ssl_key {
+    if $ssl_key_path {
+      $_ssl_key_path = $ssl_key_path }
+    else {
+      $_ssl_key_path = "${ssl_dir}/IdoPgsqlConnection_ido-pgsql.key"
+    }
+
+    $_ssl_key = $::facts['os']['family'] ? {
+      'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+      default   => $ssl_key,
+    }
+
+    file { $_ssl_key_path:
+      ensure    => file,
+      mode      => $_ssl_key_mode,
+      content   => $ssl_key,
+      show_diff => false,
+      tag       => 'icinga2::config::file',
+    }
+  } else {
+    $_ssl_key_path = $ssl_key_path
+  }
+
+  if $ssl_cert {
+    if $ssl_cert_path {
+      $_ssl_cert_path = $ssl_cert_path }
+    else {
+      $_ssl_cert_path = "${ssl_dir}/IdoPgsqlConnection_ido-pgsql.crt"
+    }
+
+    $_ssl_cert = $::facts['os']['family'] ? {
+      'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+      default   => $ssl_cert,
+    }
+
+    file { $_ssl_cert_path:
+      ensure  => file,
+      content => $ssl_cert,
+      tag     => 'icinga2::config::file',
+    }
+  } else {
+    $_ssl_cert_path = $ssl_cert_path
+  }
+
+  if $ssl_cacert {
+    if $ssl_cacert_path {
+      $_ssl_cacert_path = $ssl_cacert_path }
+    else {
+      $_ssl_cacert_path = "${ssl_dir}/IdoPgsqlConnection_ido-pgsql_ca.crt"
+    }
+
+    $_ssl_cacert = $::facts['os']['family'] ? {
+      'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+      default   => $ssl_cacert,
+    }
+
+    file { $_ssl_cacert_path:
+      ensure  => file,
+      content => $ssl_cacert,
+      tag     => 'icinga2::config::file',
+    }
+  } else {
+    $_ssl_cacert_path = $ssl_cacert_path
+  }
+
   $attrs = {
     host                  => $host,
     port                  => $port,
     user                  => $user,
-    password              => $password,
+    password              => $_password,
     database              => $database,
+    ssl_mode              => $ssl_mode,
+    ssl_key               => $_ssl_key_path,
+    ssl_cert              => $_ssl_cert_path,
+    ssl_ca                => $_ssl_cacert_path,
     table_prefix          => $table_prefix,
     instance_name         => $instance_name,
     instance_description  => $instance_description,
@@ -117,12 +226,14 @@ class icinga2::feature::idopgsql(
   }
 
   # install additional package
-  if $ido_pgsql_package_name and $manage_package {
-    if $::osfamily == 'debian' {
-      ensure_resources('file', { '/etc/dbconfig-common' => { ensure => directory } })
+  if $ido_pgsql_package_name and ($manage_package or $manage_packages) {
+    if $::facts['os']['family'] == 'debian' {
+      ensure_resources('file', { '/etc/dbconfig-common' => { ensure => directory, owner => 'root', group => 'root' } })
       file { "/etc/dbconfig-common/${ido_pgsql_package_name}.conf":
         ensure  => file,
         content => "dbc_install='false'\ndbc_upgrade='false'\ndbc_remove='false'\n",
+        owner   => 'root',
+        group   => 'root',
         mode    => '0600',
         before  => Package[$ido_pgsql_package_name],
       }
@@ -136,15 +247,27 @@ class icinga2::feature::idopgsql(
 
   # import db schema
   if $import_schema {
-    if $ido_pgsql_package_name and $manage_package {
+    if $ido_pgsql_package_name and ($manage_package or $manage_packages) {
       Package[$ido_pgsql_package_name] -> Exec['idopgsql-import-schema']
     }
+
+    $_connection = regsubst(join(any2array(delete_undef_values({
+        'host='        => $host,
+        'sslmode='     => $ssl_mode,
+        'sslcert='     => $_ssl_cert_path,
+        'sslkey='      => $_ssl_key_path,
+        'sslrootcert=' => $_ssl_cacert_path,
+        'user='        => $user,
+        'port='        => $port,
+        'dbname='      => $database,
+      })), ' '), '= ', '=', 'G')
+
     exec { 'idopgsql-import-schema':
       user        => 'root',
-      path        => $::path,
-      environment => ["PGPASSWORD=${password}"],
-      command     => "psql -h '${host}' -U '${user}' -p '${port}' -d '${database}' -w -f ${ido_pgsql_schema}",
-      unless      => "psql -h '${host}' -U '${user}' -p '${port}' -d '${database}' -w -c 'select version from icinga_dbversion'",
+      path        => $::facts['path'],
+      environment => ["PGPASSWORD=${_password.unwrap}"],
+      command     => "psql '${_connection}' -w -f '${ido_pgsql_schema}'",
+      unless      => "psql '${_connection}' -w -c 'select version from icinga_dbversion'",
     }
   }
 
diff --git a/modules/icinga2/manifests/feature/influxdb.pp b/modules/icinga2/manifests/feature/influxdb.pp
old mode 100755
new mode 100644
index a7e8cef0..713fa862
--- a/modules/icinga2/manifests/feature/influxdb.pp
+++ b/modules/icinga2/manifests/feature/influxdb.pp
@@ -1,111 +1,111 @@
-# == Class: icinga2::feature::influxdb
+# @summary
+#   Configures the Icinga 2 feature influxdb.
 #
-# This module configures the Icinga 2 feature influxdb.
+# @example
+#   class { 'icinga2::feature::influxdb':
+#     host     => "10.10.0.15",
+#     username => "icinga2",
+#     password => "supersecret",
+#     database => "icinga2"
+#   }
 #
-# === Parameters
+# @param ensure
+#   Set to present enables the feature influxdb, absent disables it.
 #
-# [*ensure*]
-#   Set to present enables the feature influxdb, absent disables it. Defaults to present.
+# @param host
+#    InfluxDB host address.
 #
-# [*host*]
-#    InfluxDB host address. Icinga defaults to 127.0.0.1.
+# @param port
+#    InfluxDB HTTP port.
 #
-# [*port*]
-#    InfluxDB HTTP port. Icinga defaults to 8086.
+# @param database
+#    InfluxDB database name.
 #
-# [*database*]
-#    InfluxDB database name. Icinga defaults to icinga2.
-#
-# [*username*]
+# @param username
 #    InfluxDB user name.
 #
-# [*password*]
-#    InfluxDB user password.
+# @param password
+#    InfluxDB user password. The password parameter isn't parsed anymore.
+#
+# @param basic_auth
+#    Username and password for HTTP basic authentication.
 #
-# [*enable_ssl*]
+# @param enable_ssl
 #    Either enable or disable SSL. Other SSL parameters are only affected if this is set to 'true'.
-#    Icinga defaults to 'false'.
 #
-# [*ssl_key_path*]
+# @param ssl_noverify
+#    Disable TLS peer verification.
+#
+# @param ssl_key_path
 #   Location of the private key.
 #
-# [*ssl_cert_path*]
+# @param ssl_cert_path
 #   Location of the certificate.
 #
-# [*ssl_cacert_path*]
+# @param ssl_cacert_path
 #   Location of the CA certificate.
 #
-# [*ssl_key*]
+# @param ssl_key
 #   The private key in a base64 encoded string to store in ssl_key_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/InfluxdbWriter_influxdb.key on Linux
 #
-# [*ssl_cert*]
+# @param ssl_cert
 #   The certificate in a base64 encoded string to store in ssl_cert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/InfluxdbWriter_influxdb.crt on Linux
 #
-# [*ssl_cacert*]
+# @param ssl_cacert
 #   The CA root certificate in a base64 encoded to store in ssl_cacert_path file.
-#   Default depends on platform:
-#     /var/lib/icinga2/certs/InfluxdbWriter_influxdb_ca.crt on Linux
 #
-# [*host_measurement*]
-#    The value of this is used for the measurement setting in host_template. Icinga defaults to '$host.check_command$'.
+# @param host_measurement
+#    The value of this is used for the measurement setting in host_template.
 #
-# [*host_tags*]
+# @param host_tags
 #    Tags defined in this hash will be set in the host_template.
 #
-#  [*service_measurement*]
-#    The value of this is used for the measurement setting in host_template. Icinga defaults to '$service.check_command$'.
+# @param service_measurement
+#    The value of this is used for the measurement setting in host_template.
 #
-# [*service_tags*]
+# @param service_tags
 #    Tags defined in this hash will be set in the service_template.
 #
-# [*enable_send_thresholds*]
-#    Whether to send warn, crit, min & max tagged data. Icinga defaults to 'false'.
-#
-# [*enable_send_metadata*]
-#    Whether to send check metadata e.g. states, execution time, latency etc. Icinga defaults to 'false'.
-#
-# [*flush_interval*]
-#    How long to buffer data points before transfering to InfluxDB. Icinga defaults to '10s'.
+# @param enable_send_thresholds
+#    Whether to send warn, crit, min & max tagged data.
 #
-# [*flush_threshold*]
-#    How many data points to buffer before forcing a transfer to InfluxDB. Icinga defaults to '1024'.
+# @param enable_send_metadata
+#    Whether to send check metadata e.g. states, execution time, latency etc.
 #
-# === Example
+# @param flush_interval
+#    How long to buffer data points before transfering to InfluxDB.
 #
-# class { 'icinga2::feature::influxdb':
-#   host     => "10.10.0.15",
-#   username => "icinga2",
-#   password => "supersecret",
-#   database => "icinga2"
-# }
+# @param flush_threshold
+#    How many data points to buffer before forcing a transfer to InfluxDB.
 #
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::influxdb(
-  Enum['absent', 'present']                $ensure                 = present,
-  Optional[Stdlib::Host]                   $host                   = undef,
-  Optional[Stdlib::Port::Unprivileged]     $port                   = undef,
-  Optional[String]                         $database               = undef,
-  Optional[String]                         $username               = undef,
-  Optional[String]                         $password               = undef,
-  Optional[Boolean]                        $enable_ssl             = undef,
-  Optional[Stdlib::Absolutepath]           $ssl_key_path           = undef,
-  Optional[Stdlib::Absolutepath]           $ssl_cert_path          = undef,
-  Optional[Stdlib::Absolutepath]           $ssl_cacert_path        = undef,
-  Optional[String]                         $ssl_key                = undef,
-  Optional[String]                         $ssl_cert               = undef,
-  Optional[String]                         $ssl_cacert             = undef,
-  Optional[String]                         $host_measurement       = undef,
-  Optional[Hash]                           $host_tags              = undef,
-  Optional[String]                         $service_measurement    = undef,
-  Optional[Hash]                           $service_tags           = undef,
-  Optional[Boolean]                        $enable_send_thresholds = undef,
-  Optional[Boolean]                        $enable_send_metadata   = undef,
-  Optional[Icinga2::Interval]              $flush_interval         = undef,
-  Optional[Integer[1]]                     $flush_threshold        = undef,
+  Enum['absent', 'present']                     $ensure                 = present,
+  Optional[Stdlib::Host]                        $host                   = undef,
+  Optional[Stdlib::Port]                        $port                   = undef,
+  Optional[String]                              $database               = undef,
+  Optional[String]                              $username               = undef,
+  Optional[Variant[String, Sensitive[String]]]  $password               = undef,
+  Optional[Icinga2::BasicAuth]                  $basic_auth             = undef,
+  Optional[Boolean]                             $enable_ssl             = undef,
+  Optional[Boolean]                             $ssl_noverify           = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_key_path           = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_cert_path          = undef,
+  Optional[Stdlib::Absolutepath]                $ssl_cacert_path        = undef,
+  Optional[Stdlib::Base64]                      $ssl_key                = undef,
+  Optional[Stdlib::Base64]                      $ssl_cert               = undef,
+  Optional[Stdlib::Base64]                      $ssl_cacert             = undef,
+  String                                        $host_measurement       = '$host.check_command$',
+  Hash                                          $host_tags              = { hostname => '$host.name$' },
+  String                                        $service_measurement    = '$service.check_command$',
+  Hash                                          $service_tags           = { hostname => '$host.name$', service => '$service.name$' },
+  Optional[Boolean]                             $enable_send_thresholds = undef,
+  Optional[Boolean]                             $enable_send_metadata   = undef,
+  Optional[Icinga2::Interval]                   $flush_interval         = undef,
+  Optional[Integer[1]]                          $flush_threshold        = undef,
+  Optional[Boolean]                             $enable_ha              = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -116,12 +116,27 @@ class icinga2::feature::influxdb(
   $group         = $::icinga2::globals::group
   $conf_dir      = $::icinga2::globals::conf_dir
   $ssl_dir       = $::icinga2::globals::cert_dir
-  $_ssl_key_mode = '0600'
+
+  $_ssl_key_mode = $::facts['kernel'] ? {
+    'windows' => undef,
+    default   => '0600',
+  }
+
   $_notify       = $ensure ? {
     'present' => Class['::icinga2::service'],
     default   => undef,
   }
 
+  if $basic_auth {
+    $_basic_auth = if $basic_auth['password'] =~ String {
+      $basic_auth + { 'password' => Sensitive($password) }
+    } elsif $basic_auth['password'] =~ Sensitive {
+      $basic_auth
+    }
+  } else {
+    $_basic_auth = undef
+  }
+
   File {
     owner   => $user,
     group   => $group,
@@ -140,13 +155,17 @@ class icinga2::feature::influxdb(
         $_ssl_key_path = "${ssl_dir}/InfluxdbWriter_influxdb.key"
       }
 
-      $_ssl_key = $ssl_key
+      $_ssl_key = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_key, '\n', "\r\n", 'EMG'),
+        default   => $ssl_key,
+      }
 
       file { $_ssl_key_path:
-        ensure  => file,
-        mode    => $_ssl_key_mode,
-        content => $_ssl_key,
-        tag     => 'icinga2::config::file',
+        ensure    => file,
+        mode      => $_ssl_key_mode,
+        content   => $_ssl_key,
+        show_diff => false,
+        tag       => 'icinga2::config::file',
       }
     } else {
       $_ssl_key_path = $ssl_key_path
@@ -159,7 +178,10 @@ class icinga2::feature::influxdb(
         $_ssl_cert_path = "${ssl_dir}/InfluxdbWriter_influxdb.crt"
       }
 
-      $_ssl_cert = $ssl_cert
+      $_ssl_cert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cert,
+      }
 
       file { $_ssl_cert_path:
         ensure  => file,
@@ -177,7 +199,10 @@ class icinga2::feature::influxdb(
         $_ssl_cacert_path = "${ssl_dir}/InfluxdbWriter_influxdb_ca.crt"
       }
 
-      $_ssl_cacert = $ssl_cacert
+      $_ssl_cacert = $::facts['os']['family'] ? {
+        'windows' => regsubst($ssl_cacert, '\n', "\r\n", 'EMG'),
+        default   => $ssl_cacert,
+      }
 
       file { $_ssl_cacert_path:
         ensure  => file,
@@ -189,28 +214,40 @@ class icinga2::feature::influxdb(
     }
 
     $attrs_ssl = {
-      ssl_enable  => $enable_ssl,
-      ssl_ca_cert => $_ssl_cacert_path,
-      ssl_cert    => $_ssl_cert_path,
-      ssl_key     => $_ssl_key_path,
+      ssl_enable            => $enable_ssl,
+      ssl_insecure_noverify => $ssl_noverify,
+      ssl_ca_cert           => $_ssl_cacert_path,
+      ssl_cert              => $_ssl_cert_path,
+      ssl_key               => $_ssl_key_path,
     }
   } # enable_ssl
   else {
     $attrs_ssl = { ssl_enable  => $enable_ssl }
   }
 
+  $_password = if $password =~ String {
+    # The password parameter isn't parsed anymore.
+    "-:\"${password}\""
+  } elsif $password =~ Sensitive {
+    $password
+  } else {
+    undef
+  }
+
   $attrs = {
     host                   => $host,
     port                   => $port,
     database               => $database,
     username               => $username,
-    password               => $password,
+    password               => $_password,
+    basic_auth             => $_basic_auth,
     host_template          => $host_template,
     service_template       => $service_template,
     enable_send_thresholds => $enable_send_thresholds,
     enable_send_metadata   => $enable_send_metadata,
     flush_interval         => $flush_interval,
     flush_threshold        => $flush_threshold,
+    enable_ha              => $enable_ha,
   }
 
   # create object
@@ -218,7 +255,7 @@ class icinga2::feature::influxdb(
     object_name => 'influxdb',
     object_type => 'InfluxdbWriter',
     attrs       => delete_undef_values(merge($attrs, $attrs_ssl)),
-    attrs_list  => keys($attrs),
+    attrs_list  => concat(keys($attrs), keys($attrs_ssl)),
     target      => "${conf_dir}/features-available/influxdb.conf",
     notify      => $_notify,
     order       => 10,
diff --git a/modules/icinga2/manifests/feature/livestatus.pp b/modules/icinga2/manifests/feature/livestatus.pp
old mode 100755
new mode 100644
index c86c4b43..2e036aa5
--- a/modules/icinga2/manifests/feature/livestatus.pp
+++ b/modules/icinga2/manifests/feature/livestatus.pp
@@ -1,34 +1,23 @@
-# == Class: icinga2::feature::livestatus
+# @summary
+#   Configures the Icinga 2 feature livestatus.
 #
-# This module configures the Icinga 2 feature livestatus.
+# @param ensure
+#   Set to present enables the feature livestatus, absent disables it.
 #
-# === Parameters
+# @param socket_type
+#   Specifies the socket type. Can be either 'tcp' or 'unix'.
 #
-# [*ensure*]
-#   Set to present enables the feature livestatus, absent disables it. Defaults to present.
-#
-# [*socket_type*]
-#   Specifies the socket type. Can be either 'tcp' or 'unix'. Icinga defaults to 'unix'.
-#
-# [*bind_host*]
+# @param bind_host
 #   IP address to listen for connections. Only valid when socket_type is 'tcp'.
-#   Icinga defaults to '127.0.0.1'.
 #
-# [*bind_port*]
-#   Port to listen for connections. Only valid when socket_type is 'tcp'. Icinga defaults to 6558.
+# @param bind_port
+#   Port to listen for connections. Only valid when socket_type is 'tcp'.
 #
-# [*socket_path*]
+# @param socket_path
 #   Specifies the path to the UNIX socket file. Only valid when socket_type is 'unix'.
-#   Default depends on platform:
-#   '/var/run/icinga2/cmd/livestatus' on Linux
-#   'C:/ProgramData/icinga2/var/run/icinga2/cmd/livestatus' on Windows.
 #
-# [*compat_log_path*]
+# @param compat_log_path
 #   Required for historical table queries. Requires CompatLogger feature to be enabled.
-#   Default depends platform:
-#   'var/icinga2/log/icinga2/compat' on Linux
-#   'C:/ProgramData/icinga2/var/log/icinga2/compat' on Windows.
-#
 #
 class icinga2::feature::livestatus(
   Enum['absent', 'present']                $ensure          = present,
diff --git a/modules/icinga2/manifests/feature/mainlog.pp b/modules/icinga2/manifests/feature/mainlog.pp
old mode 100755
new mode 100644
index f58c83a8..89a3f520
--- a/modules/icinga2/manifests/feature/mainlog.pp
+++ b/modules/icinga2/manifests/feature/mainlog.pp
@@ -1,19 +1,14 @@
-# == Class: icinga2::feature::mainlog
+# @summary
+#   Configures the Icinga 2 feature mainlog.
 #
-# This module configures the Icinga 2 feature mainlog.
+# @param ensure
+#   Set to 'present' enables the feature mainlog, 'absent' disabled it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to 'present' enables the feature mainlog, 'absent' disabled it. Defaults to 'present'.
-#
-# [*severity*]
-#   You can set the log severity to 'information', 'notice', 'warning' or 'debug'. Defaults to 'information'.
-#
-# [*path*]
-#   Absolute path to the log file. Default depends on platform, '/var/log/icinga2/icinga2.log' on Linux
-#   and 'C:/ProgramData/icinga2/var/log/icinga2/icinga2.log' on Windows.
+# @param severity
+#   You can set the log severity to 'information', 'notice', 'warning' or 'debug'.
 #
+# @param path
+#   Absolute path to the log file.
 #
 class icinga2::feature::mainlog(
   Enum['absent', 'present']    $ensure   = present,
diff --git a/modules/icinga2/manifests/feature/notification.pp b/modules/icinga2/manifests/feature/notification.pp
old mode 100755
new mode 100644
index a7283fdd..e5c43549
--- a/modules/icinga2/manifests/feature/notification.pp
+++ b/modules/icinga2/manifests/feature/notification.pp
@@ -1,18 +1,11 @@
-# == Class: icinga2::feature::notification
+# @summary
+#   Configures the Icinga 2 feature notification.
 #
-# This module configures the Icinga 2 feature notification.
-#
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature notification, absent disabled it. Defaults to present.
-#
-# [*enable_ha*]
-#   Notifications are load-balanced amongst all nodes in a zone. By default this
-#   functionality is enabled. If your nodes should send out notifications independently
-#   from any other nodes (this will cause duplicated notifications if not properly
-#   handled!), you can set enable_ha to false.
+# @param ensure
+#   Set to present enables the feature notification, absent disabled it.
 #
+# @param enable_ha
+#   Notifications are load-balanced amongst all nodes in a zone.
 #
 class icinga2::feature::notification(
   Enum['absent', 'present'] $ensure    = present,
diff --git a/modules/icinga2/manifests/feature/opentsdb.pp b/modules/icinga2/manifests/feature/opentsdb.pp
old mode 100755
new mode 100644
index 86df6278..1f0d44e5
--- a/modules/icinga2/manifests/feature/opentsdb.pp
+++ b/modules/icinga2/manifests/feature/opentsdb.pp
@@ -1,23 +1,23 @@
-# == Class: icinga2::feature::opentsdb
+# @summary
+#   Configures the Icinga 2 feature opentsdb.
 #
-# This module configures the Icinga 2 feature opentsdb.
+# @param ensure
+#   Set to present enables the feature opentsdb, absent disables it.
 #
-# === Parameters
+# @param host
+#   OpenTSDB host address.
 #
-# [*ensure*]
-#   Set to present enables the feature opentsdb, absent disables it. Defaults to present.
-#
-# [*host*]
-#   OpenTSDB host address. Icinga defaults to '127.0.0.1'.
-#
-# [*port*]
-#   OpenTSDB port. Icinga defaults to 4242.
+# @param port
+#   OpenTSDB port.
 #
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::opentsdb(
-  Enum['absent', 'present']               $ensure = present,
-  Optional[Stdlib::Host]                  $host   = undef,
-  Optional[Stdlib::Port::Unprivileged]    $port   = undef,
+  Enum['absent', 'present']               $ensure    = present,
+  Optional[Stdlib::Host]                  $host      = undef,
+  Optional[Stdlib::Port::Unprivileged]    $port      = undef,
+  Optional[Boolean]                       $enable_ha = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -32,8 +32,9 @@ class icinga2::feature::opentsdb(
 
   # compose attributes
   $attrs = {
-    host => $host,
-    port => $port,
+    host      => $host,
+    port      => $port,
+    enable_ha => $enable_ha,
   }
 
   # create object
diff --git a/modules/icinga2/manifests/feature/perfdata.pp b/modules/icinga2/manifests/feature/perfdata.pp
old mode 100755
new mode 100644
index a151175f..93b0152e
--- a/modules/icinga2/manifests/feature/perfdata.pp
+++ b/modules/icinga2/manifests/feature/perfdata.pp
@@ -1,44 +1,33 @@
-# == Class: icinga2::feature::perfdata
+# @summary
+#   Configures the Icinga 2 feature perfdata.
 #
-# This module configures the Icinga 2 feature perfdata.
+# @param ensure
+#   Set to present enables the feature perfdata, absent disables it.
 #
-# === Parameters
+# @param host_perfdata_path
+#   Absolute path to the perfdata file for hosts.
 #
-# [*ensure*]
-#   Set to present enables the feature perfdata, absent disables it. Defaults to present.
+# @param service_perfdata_path
+#   Absolute path to the perfdata file for services.
 #
-# [*host_perfdata_path*]
-#   Absolute path to the perfdata file for hosts. Default depends on platform:
-#   /var/spool/icinga2/host-perfdata on Linux
-#   C:/ProgramData/icinga2/var/spool/icinga2/host-perfdata on Windows.
+# @param host_temp_path
+#   Path to the temporary host file.
 #
-# [*service_perfdata_path*]
-#   Absolute path to the perfdata file for services. Default depends on platform:
-#   /var/spool/icinga2/service-perfdata on Linux
-#   C:/ProgramData/icinga2/var/spool/icinga2/service-perfdata on Windows.
+# @param service_temp_path
+#   Path to the temporary service file.
 #
-# [*host_temp_path*]
-#   Path to the temporary host file. Defaults depends on platform:
-#   /var/spool/icinga2/tmp/host-perfdata on Linux
-#   C:/ProgramData/icinga2/var/spool/icinga2/tmp/host-perfdata on Windows.
-#
-# [*service_temp_path*]
-#   Path to the temporary service file. Defaults depends on platform:
-#   /var/spool/icinga2/tmp/host-perfdata on Linux
-#   C:/ProgramData/icinga2/var/spool/icinga2/tmp/host-perfdata on Windows.
-#
-# [*host_format_template*]
+# @param host_format_template
 #   Host Format template for the performance data file.
-#   Icinga defaults to a template that's suitable for use with PNP4Nagios.
 #
-# [*service_format_template*]
+# @param service_format_template
 #   Service Format template for the performance data file.
-#   Icinga defaults to a template that's suitable for use with PNP4Nagios.
 #
-# [*rotation_interval*]
+# @param rotation_interval
 #   Rotation interval for the files specified in {host,service}_perfdata_path. Can be written in minutes or seconds,
-#   i.e. 1m or 15s. Icinga defaults to 30s.
+#   i.e. 1m or 15s.
 #
+# @param enable_ha
+#   Enable the high availability functionality. Only valid in a cluster setup.
 #
 class icinga2::feature::perfdata(
   Enum['absent', 'present']           $ensure                  = present,
@@ -49,6 +38,7 @@ class icinga2::feature::perfdata(
   Optional[String]                    $host_format_template    = undef,
   Optional[String]                    $service_format_template = undef,
   Optional[Icinga2::Interval]         $rotation_interval       = undef,
+  Optional[Boolean]                   $enable_ha               = undef,
 ) {
 
   if ! defined(Class['::icinga2']) {
@@ -70,6 +60,7 @@ class icinga2::feature::perfdata(
     host_format_template    => $host_format_template,
     service_format_template => $service_format_template,
     rotation_interval       => $rotation_interval,
+    enable_ha               => $enable_ha,
   }
 
   # create object
diff --git a/modules/icinga2/manifests/feature/statusdata.pp b/modules/icinga2/manifests/feature/statusdata.pp
old mode 100755
new mode 100644
index ecb0b485..7019033f
--- a/modules/icinga2/manifests/feature/statusdata.pp
+++ b/modules/icinga2/manifests/feature/statusdata.pp
@@ -1,27 +1,18 @@
-# == Class: icinga2::feature::statusdata
+# @summary
+#   Configures the Icinga 2 feature statusdata.
 #
-# This module configures the Icinga 2 feature statusdata.
+# @param ensure
+#   Set to present enables the feature statusdata, absent disables it.
 #
-# === Parameters
+# @param status_path
+#   Absolute path to the status.dat file.
 #
-# [*ensure*]
-#   Set to present enables the feature statusdata, absent disables it. Defaults to present.
+# @param objects_path
+#   Absolute path to the object.cache file.
 #
-# [*status_path*]
-#   Absolute path to the status.dat file. Defaults depend on platform:
-#   /var/cache/icinga2/status.dat on Linux
-#   C:/ProgramData/icinga2/var/cache/icinga2/status.dat on Windows
-#
-# [*object_path*]
-#   Absolute path to the object.cache file. Defaults depend on platform:
-#   /var/cache/icinga2/object.cache on Linux
-#   C:/ProgramData/icinga2/var/cache/icinga2/object.cache on Windows
-#
-# [*update_interval*]
+# @param update_interval
 #   Interval in seconds to update both status files. You can also specify
 #   it in minutes with the letter m or in seconds with s.
-#   Icinga defaults to '15s'
-#
 #
 class icinga2::feature::statusdata(
   Enum['absent', 'present']          $ensure          = present,
diff --git a/modules/icinga2/manifests/feature/syslog.pp b/modules/icinga2/manifests/feature/syslog.pp
old mode 100755
new mode 100644
index 99e0f55c..1ed8671e
--- a/modules/icinga2/manifests/feature/syslog.pp
+++ b/modules/icinga2/manifests/feature/syslog.pp
@@ -1,23 +1,19 @@
-# == Class: icinga2::feature::syslog
+# @summary
+#   Configures the Icinga 2 feature syslog.
 #
-# This module configures the Icinga 2 feature syslog.
+# @param ensure
+#   Set to present enables the feature syslog, absent disables it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the feature syslog, absent disables it. Defaults to present.
-#
-# [*severity*]
+# @param severity
 #   You can choose the log severity between information, notice, warning or debug.
 #
-# [*facility*]
+# @param facility
 #   Defines the facility to use for syslog entries. This can be a facility constant
 #   like FacilityDaemon.
 #
-#
 class icinga2::feature::syslog(
   Enum['absent', 'present']        $ensure   = present,
-  Optional[Icinga2::LogSeverity]   $severity = undef,
+  Icinga2::LogSeverity             $severity = 'warning',
   Optional[Icinga2::LogFacility]   $facility = undef,
 ) {
 
diff --git a/modules/icinga2/manifests/globals.pp b/modules/icinga2/manifests/globals.pp
old mode 100755
new mode 100644
index 5b3db72a..5d09ae3b
--- a/modules/icinga2/manifests/globals.pp
+++ b/modules/icinga2/manifests/globals.pp
@@ -1,92 +1,79 @@
-# == Class: icinga2::globals
+# @summary
+#   This class loads the default parameters by doing a hiera lookup.
 #
-# This class loads the default parameters by doing a hiera lookup.
+# @note This parameters depend on the os plattform. Changes maybe will break the functional capability of the supported plattforms and versions. Please only do changes when you know what you're doing.
 #
-# NOTE: This parameters depend on the os plattform. Changes maybe will
-#       break the functional capability of the supported plattforms and versions.
-#       Please only do changes when you know what you're doing.
+# @api private
 #
-# === Parameters
-#
-# [*package_name*]
+# @param package_name
 #   The name of the icinga package to manage.
 #
-# [*service_name*]
+# @param service_name
 #   The name of the icinga service to manage.
 #
-# [*user*]
+# @param user
 #   User as the icinga process runs.
 #   CAUTION: This does not manage the user context for the runnig icinga 2 process!
 #   The parameter is only used for ownership of files or directories.
-#   
-# [*group*]
+#
+# @param group
 #   Group as the icinga process runs.
 #   CAUTION: This does not manage the group context for the runnig icinga 2 process!
 #   The parameter is only used for group membership of files or directories.
 #
-# [*ido_mysql_package_name*]
+# @param logon_account
+#   The user context in which the service should run.
+#   ATM only relevant on Windows.
+#
+# @param selinux_package_name
+#   The name of the icinga selinux package.
+#
+# @param ido_mysql_package_name
 #   The name of the icinga package that's needed for MySQL.
-#   
-# [*ido_mysql_schema*]
+#
+# @param ido_mysql_schema
 #   Path to the MySQL schema to import.
 #
-# [*ido_pgsql_package_name*]
+# @param ido_pgsql_package_name
 #   The name of the icinga package that's needed for Postrgesql.
-#   
-# [*ido_pgsql_schema*]
+#
+# @param ido_pgsql_schema
 #   Path to the Postgresql schema to import.
 #
-# [*icinga2_bin*]
+# @param icinga2_bin
 #   Path to the icinga2 binary.
 #
-# [*conf_dir*]
+# @param conf_dir
 #   Location of the configuration directory of Icinga.
 #
-# [*lib_dir*]
+# @param lib_dir
 #   Path to the directory contained the system libs.
 #
-# [*log_dir*]
+# @param log_dir
 #   Location to store Icinga log files.
 #
-# [*run_dir*]
+# @param run_dir
 #   Runtime directory of Icinga.
 #
-# [*spool_dir*]
+# @param spool_dir
 #   Path to spool files of Icinga.
 #
-# [*cache_dir*]
+# @param cache_dir
 #   Path to cache files of Icinga.
 #
-# [*cert_dir*]
+# @param cert_dir
 #   Path to the directory where Icinga stores keys and certificates.
 #
-# [*ca_dir*]
+# @param ca_dir
 #   Path to CA.
 #
-# [*reserved_words*]
-#   Reserved words of the Icinga DSL. These words are not quoted by the
-#   parser (function icinga2_attributes) of this module.
-
-# [*service_reload*]
+# @param service_reload
 #   How to do a reload of the Icinga process.
 #
-# [*constants*]
-#   Set default constants.
-#
-#
-# === Examples
-#
-# This class is private and should not be called by others than this module.
-#
-#
 class icinga2::globals(
   String                 $package_name,
   String                 $service_name,
-  Optional[String]       $user,
-  Optional[String]       $group,
-  Optional[String]       $ido_mysql_package_name,
   String                 $ido_mysql_schema,
-  Optional[String]       $ido_pgsql_package_name,
   String                 $ido_pgsql_schema,
   Stdlib::Absolutepath   $icinga2_bin,
   Stdlib::Absolutepath   $conf_dir,
@@ -98,14 +85,27 @@ class icinga2::globals(
   Stdlib::Absolutepath   $cert_dir,
   Stdlib::Absolutepath   $ca_dir,
   Array[String]          $reserved,
-  Optional[String]       $service_reload,
+  Optional[String]       $user                   = undef,
+  Optional[String]       $group                  = undef,
+  Optional[String]       $logon_account          = undef,
+  Optional[String]       $selinux_package_name   = undef,
+  Optional[String]       $ido_mysql_package_name = undef,
+  Optional[String]       $ido_pgsql_package_name = undef,
+  Optional[String]       $service_reload         = undef,
 ) {
 
   assert_private()
 
-  if ( versioncmp($puppetversion, '6' ) >= 0 and versioncmp(load_module_metadata('stdlib')['version'], '5.1.0') < 0 ) {                                                                             
-    fail('You be affected by this bug: https://github.com/Icinga/puppet-icinga2/issues/505 so you should update your stdlib to version 5.1 or higher')                                                             
-  }   
+  if ( versioncmp($::facts['puppetversion'], '6' ) >= 0 and versioncmp(load_module_metadata('stdlib')['version'], '5.1.0') < 0 ) {
+    fail('You be affected by this bug: https://github.com/Icinga/puppet-icinga2/issues/505 so you should update your stdlib to version 5.1 or higher')
+  }
+
+  # Logon account on Windows
+  if $facts['os']['kernel'] == 'windows' {
+    if $logon_account and versioncmp($::facts['puppetversion'], '6.18.0') < 0 {
+      fail('Using logon_account requieres a Puppet version 6.18 or higher')
+    }
+  }
 
   $constants =  lookup('icinga2::globals::constants', Hash, 'deep', {})
 
diff --git a/modules/icinga2/manifests/init.pp b/modules/icinga2/manifests/init.pp
old mode 100755
new mode 100644
index f7a8d3f2..d0756995
--- a/modules/icinga2/manifests/init.pp
+++ b/modules/icinga2/manifests/init.pp
@@ -1,153 +1,136 @@
-# == Class: icinga2
+# @summary
+#   This module installs and configures Icinga 2.
 #
-# This module installs and configures Icinga 2.
+# @example Declare icinga2 with all defaults. Keep in mind that your operating system may not have Icinga 2 in its package repository.
 #
-# === Parameters
+#   include ::icinga2
 #
-# [*ensure*]
-#   Manages if the service should be stopped or running. Defaults to running.
-#
-# [*enable*]
-#   If set to true the Icinga 2 service will start on boot. Defaults to true.
-#
-# [*manage_repo*]
-#   When set to true this module will install the packages.icinga.com repository. With this official repo you can get
-#   the latest version of Icinga. When set to false the operating systems default will be used. As the Icinga Project
-#   does not offer a Chocolatey repository, you will get a warning if you enable this parameter on Windows.
-#   Defaults to false. NOTE: will be ignored if manage_package is set to false.
-#
-# [*manage_package*]
-#   If set to false packages aren't managed. Defaults to true.
-#
-# [*manage_service*]
-#   If set to true the service is managed otherwise the service also
-#   isn't restarted if a config file changed. Defaults to true.
-#
-# [*features*]
-#   List of features to activate. Defaults to [checker, mainlog, notification].
-#
-# [*purge_features*]
-#   Define if configuration files for features not managed by Puppet should be purged. Defaults to true.
-#
-# [*constants*]
-#   Hash of constants. Defaults are set in the params class. Your settings will be merged with the defaults.
-#
-# [*plugins*]
-#   A list of the ITL plugins to load. Defaults to [ 'plugins', 'plugins-contrib', 'windows-plugins', 'nscp' ].
-#
-# [*confd*]
-#   `conf.d` is the directory where Icinga 2 stores its object configuration by default. To disable it,
-#   set this parameter to `false`. By default this parameter is `true`. It's also possible to assign your
-#   own directory. This directory must be managed outside of this module as file resource
-#   with tag icinga2::config::file.
-#
-# All default parameters are set in the icinga2::params class. To get more technical information have a look into the
-# params.pp manifest.
+# @example If you want to use the module icinga/puppet-icinga, e.g. to use the official Icinga Project repositories, enable the manage_repos parameter.
+#   class { 'icinga2':
+#     manage_repos => true,
+#   }
 #
-# === Variables
+# @example If you don't want to manage the Icinga 2 service with puppet, you can dissable this behaviour with the manage_service parameter. When set to false no service refreshes will be triggered.
+#   class { 'icinga2':
+#     manage_service => false,
+#   }
 #
-# [*_confd*]
-#   Configuration directory (conf.d).
+# @example To manage the version of Icinga 2 binaries you can do it by disable package management:
+#   package { 'icinga2':
+#     ensure  => latest,
+#     notifiy => Class['icinga2'],
+#   }
 #
-# [*_constants*]
-#   Merge parameter constants with defaults from params.
+#   class { '::icinga2':
+#     manage_packages => false,
+#   }
 #
-# === Examples
+# @note Setting manage_packages to false means that all package aren't handeld by the module included the IDO packages.
 #
-# Declare icinga2 with all defaults. Keep in mind that your operating system may not have Icinga 2 in its package
-# repository.
+# @example To set constants in etc/icinga2/constants.conf use the constants parameter and as value a hash, every key will be set as constant and assigned by it's value. Defaults can be overwritten.
+#   class { 'icinga2':
+#     ...
+#     constants   => {
+#       'key1'             => 'value1',
+#       'key2'             => 'value2',
+#       'PluginContirbDir' => '/usr/local/nagios/plugins',
+#     }
+#   }
 #
-#  include ::icinga2
+# @example Enabling features with there defaults or loading parameters via Hiera:
+#   class { '::icinga2':
+#     manage_repos => true,
+#     features     => ['checker', 'mainlog', 'command'],
+#   }
 #
-# If you want to use the official Icinga Project repository, enable the manage_repo parameter. Note: On Windows only
-# chocolatey is supported as installation source. The Icinga Project does not offer a chocolatey repository, therefore
-# you will get a warning if you enable this parameter
-# on windows.
+# @example The ITL contains several CheckCommand definitions to load, set these in the array of the plugins parameter, i.e. for a master or satellite do the following and disbale the load of the configuration in conf.d.
+#   class { 'icinga':
+#     ...
+#     plugins => [ 'plugins', 'contrib-plugins', 'nscp', 'windows-plugins' ],
+#     confd   => false,
+#   }
 #
-#  class { 'icinga2':
-#    manage_repo => true,
-#  }
+# @example Sometimes it's necessary to cover very special configurations that you cannot handle with this module. In this case you can use the icinga2::config::file tag on your file resource. This module collects all file resource types with this tag and triggers a reload of Icinga 2 on a file change.
+#   include ::icinga2
 #
-# If you don't want to manage the Icinga 2 service with puppet, you can dissable this behaviour with the manage_service
-# parameter. When set to false no service refreshes will be triggered.
+#   file { '/etc/icinga2/conf.d/foo.conf':
+#     ensure => file,
+#     owner  => icinga,
+#     ...
+#     tag    => 'icinga2::config::file',
+#     ...
+#   }
 #
-#  class { 'icinga2':
-#    manage_service => false,
-#  }
+# @example To use a different directory for your configuration, create the directory as file resource with tag icinga2::config::file.
+#    file { '/etc/icinga2/local.d':
+#      ensure => directory,
+#      tag    => 'icinga2::config::file'
+#    }
+#    class { 'icinga2':
+#      ...
+#      confd => 'local.d',
+#    }
 #
-# To manage the version of Icinga 2 binaries you can do it by disable package management.
+# @param ensure
+#   Manages if the service should be stopped or running.
 #
-#  package { 'icinga2':
-#    ensure    => latest,
-#    notifiy => Class['icinga2'],
-#  }
+# @param enable
+#   If set to true the Icinga 2 service will start on boot.
 #
-#  class { '::icinga2':
-#    manage_package => false,
-#  }
+# @param manage_repo
+#   Deprecated, use manage_repos.
 #
-# Setting manage_package to false means that all package aren't handeld by the module included the IDO packages.
+# @param manage_repos
+#   When set to true this module will use the module icinga/puppet-icinga to manage repositories,
+#   e.g. the release repo on packages.icinga.com repository by default, the EPEL repository or Backports.
+#   For more information, see http://github.com/icinga/puppet-icinga.
 #
-# Sometimes it's necessary to cover very special configurations that you cannot handle with this module. In this case
-# you can use the icinga2::config::file tag on your file resource. This module collects all file resource types with
-# this tag and triggers a reload of Icinga 2 on a file change.
+# @param manage_package
+#   Deprecated, use manage_packages.
 #
-#  include ::icinga2
-#  file { '/etc/icinga2/conf.d/foo.conf':
-#    ensure => file,
-#    owner  => icinga,
-#    ...
-#    tag    => 'icinga2::config::file',
-#    ...
-#  }
+# @param manage_packages
+#   If set to false packages aren't managed.
 #
-# To set constants in etc/icinga2/constants.conf use the constants parameter and as
-# value a hash, every key will be set as constant and assigned by it's value. Defaults
-# can be overwritten.
+# @param manage_selinux
+#   If set to true the icinga selinux package is installed. Requires a `selinux_package_name` (icinga2::globals)
+#   and `manage_packages` has to be set to true.
 #
-#  class { 'icinga2':
-#    ...
-#    constants   => {
-#      'key1'             => 'value1',
-#      'key2'             => 'value2',
-#      'PluginContirbDir' => '/usr/local/nagios/plugins',
-#    }
-#  }
+# @param manage_service
+#   If set to true the service is managed otherwise the service also
+#   isn't restarted if a config file changed.
 #
-# The ITL contains several CheckCommand definitions to load, set these in the array
-# of the plugins parameter, i.e. for a master or satellite do the following and
-# disbale the load of the configuration in conf.d.
+# @param features
+#   List of features to activate. Defaults to [checker, mainlog, notification].
 #
-#  class { 'icinga':
-#    ...
-#    plugins => [ 'plugins', 'contrib-plugins', 'nscp', 'windows-plugins' ],
-#    confd   => false,
-#  }
+# @param purge_features
+#   Define if configuration files for features not managed by Puppet should be purged.
 #
-# To use a different directory for your configuration, create the directory
-# as file resource with tag icinga2::config::file.
+# @param constants
+#   Hash of constants. Defaults are set in the params class. Your settings will be merged with the defaults.
 #
-#   file { '/etc/icinga2/local.d':
-#     ensure => directory,
-#     tag    => 'icinga2::config::file'
-#   }
-#   class { 'icinga2':
-#     ...
-#     confd => 'local.d',
-#   }
+# @param plugins
+#   A list of the ITL plugins to load. Defaults to [ 'plugins', 'plugins-contrib', 'windows-plugins', 'nscp' ].
 #
+# @param confd
+#   `conf.d` is the directory where Icinga 2 stores its object configuration by default. To disable it,
+#   set this parameter to `false`. By default this parameter is `true`. It's also possible to assign your
+#   own directory. This directory must be managed outside of this module as file resource
+#   with tag icinga2::config::file.
 #
 class icinga2 (
   Array                      $features,
   Array                      $plugins,
-  Stdlib::Ensure::Service    $ensure         = running,
-  Boolean                    $enable         = true,
-  Boolean                    $manage_repo    = false,
-  Boolean                    $manage_package = true,
-  Boolean                    $manage_service = true,
-  Boolean                    $purge_features = true,
-  Hash                       $constants      = {},
-  Variant[Boolean, String]   $confd          = true,
+  Stdlib::Ensure::Service    $ensure          = running,
+  Boolean                    $enable          = true,
+  Boolean                    $manage_repo     = false,
+  Boolean                    $manage_repos    = false,
+  Boolean                    $manage_package  = false,
+  Boolean                    $manage_packages = true,
+  Boolean                    $manage_selinux  = false,
+  Boolean                    $manage_service  = true,
+  Boolean                    $purge_features  = true,
+  Hash                       $constants       = {},
+  Variant[Boolean, String]   $confd           = true,
 ) {
 
   require ::icinga2::globals
@@ -169,8 +152,16 @@ class icinga2 (
   -> Concat <| tag == 'icinga2::config::file' |>
   ~> Class['::icinga2::service']
 
-  # Put ::icinga2::repo outside to work around dependency cycle issues with the apt module
-  include '::icinga2::repo'
+  if $manage_package {
+    deprecation('manage_package', 'manage_package is deprecated and will be replaced by manage_packages in the future.')
+  }
+
+  if $manage_repos or $manage_repo {
+    require ::icinga::repos
+    if $manage_repo {
+      deprecation('manage_repo', 'manage_repo is deprecated and will be replaced by manage_repos in the future.')
+    }
+  }
 
   anchor { '::icinga2::begin':
     notify => Class['::icinga2::service'],
diff --git a/modules/icinga2/manifests/install.pp b/modules/icinga2/manifests/install.pp
old mode 100755
new mode 100644
index aff29931..3725fb31
--- a/modules/icinga2/manifests/install.pp
+++ b/modules/icinga2/manifests/install.pp
@@ -1,36 +1,40 @@
-# == Class: icinga2::install
-#
-# This class handles the installation of the Icinga 2 package. On Windows only chocolatey is supported as installation
-# source.
-#
-# === Parameters
-#
-# This class does not provide any parameters.
-#
-# === Examples
-#
-# This class is private and should not be called by others than this module.
+# @summary
+#   This class handles the installation of the Icinga 2 package.
+#   On Windows only chocolatey is supported as installation source.
 #
+# @api private
 #
 class icinga2::install {
 
   assert_private()
 
-  $package_name   = $::icinga2::globals::package_name
-  $manage_package = $::icinga2::manage_package
-  $cert_dir       = $::icinga2::globals::cert_dir
-  $conf_dir       = $::icinga2::globals::conf_dir
-  $user           = $::icinga2::globals::user
-  $group          = $::icinga2::globals::group
+  $package_name         = $::icinga2::globals::package_name
+  $manage_package       = $::icinga2::manage_package
+  $manage_packages      = $::icinga2::manage_packages
+  $selinux_package_name = $::icinga2::globals::selinux_package_name
+  $manage_selinux       = $::icinga2::manage_selinux
+  $cert_dir             = $::icinga2::globals::cert_dir
+  $conf_dir             = $::icinga2::globals::conf_dir
+  $user                 = $::icinga2::globals::user
+  $group                = $::icinga2::globals::group
+
+  if $manage_package or $manage_packages {
+    if $::facts['os']['family'] == 'windows' { Package { provider => chocolatey, } }
 
-  if $manage_package {
     package { $package_name:
       ensure => installed,
       before => File[$cert_dir, $conf_dir],
     }
+
+    if str2bool($manage_selinux) and $selinux_package_name {
+      package { $selinux_package_name:
+        ensure  => installed,
+        require => Package[$package_name],
+      }
+    }
   }
 
-  file { [$cert_dir, $conf_dir]:
+  file { [$conf_dir, $cert_dir]:
     ensure => directory,
     owner  => $user,
     group  => $group,
diff --git a/modules/icinga2/manifests/object.pp b/modules/icinga2/manifests/object.pp
old mode 100755
new mode 100644
index b9676744..8c5614f5
--- a/modules/icinga2/manifests/object.pp
+++ b/modules/icinga2/manifests/object.pp
@@ -1,65 +1,54 @@
-# == Define: icinga2::object
+# @summary
+#   Define resource to used by this module only.
 #
-# Private define resource to used by this module only.
+# @api private
 #
-# === Parameters
+# @param ensure
+#   Set to present enables the object, absent disabled it.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disabled it. Defaults to present.
+# @param object_name
+#   Set the icinga2 name of the object.
 #
-# [*object_name*]
-#   Set the icinga2 name of the object. Defaults to title of the define resource.
-#
-# [*template*]
+# @param template
 #   Set to true will define a template otherwise an object.
-#   Ignored if apply is set. Defaults to false.
+#   Ignored if apply is set.
 #
-# [*apply*]
+# @param apply
 #   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
+#   i.e. 'vhost => config in host.vars.vhosts'.
 #
-# [*prefix*]
-#   Set object_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
+# @param prefix
+#   Set object_name as prefix in front of 'apply for'. Only effects if apply is a string.
 #
-# [*apply_target*]
+# @param apply_target
 #   Optional for an object type on which to target the apply rule. Valid values are `Host` and `Service`.
 #
-# [*import*]
-#   A sorted list of templates to import in this object. Defaults to an empty array.
+# @param import
+#   A sorted list of templates to import in this object.
 #
-# [*assign*]
+# @param assign
 #   Array of assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Array of ignore rules.
 #
-# [*attrs*]
+# @param attrs
 #   Hash for the attributes of this object. Keys are the attributes and
-#   values are there values. Defaults to an empty Hash.
+#   values are there values.
 #
-# [*object_type*]
+# @param object_type
 #   Icinga 2 object type for this object.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
+# @param order
 #   String or integer to set the position in the target file, sorted alpha numeric.
 #
-# [*attrs_list*]
+# @param attrs_list
 #   Array of all possible attributes for this object type.
 #
-# === Variables
-#
-# [*_constants*]
-#   Array of all possible bar words included globals, constants
-#   and the attribute names of the object.
-#
-# [*_attrs*]
-#   Hash of all atrributes if their values aren't undef.
-#
-#
 define icinga2::object(
   String                                                      $object_type,
   Stdlib::Absolutepath                                        $target,
@@ -79,10 +68,16 @@ define icinga2::object(
 
   assert_private()
 
-  Concat {
-    owner => $::icinga2::globals::user,
-    group => $::icinga2::globals::group,
-    mode  => '0640',
+  case $::facts['os']['family'] {
+    'windows': {
+    } # windows
+    default: {
+      Concat {
+        owner => $::icinga2::globals::user,
+        group => $::icinga2::globals::group,
+        mode  => '0640',
+      }
+    } # default
   }
 
   if $object_type == $apply_target {
@@ -94,7 +89,10 @@ define icinga2::object(
     'ignore where' => $ignore,
   })
 
-  $_content = template('icinga2/object.conf.erb')
+  $_content = $::facts['os']['family'] ? {
+    'windows' => regsubst(template('icinga2/object.conf.erb'), '\n', "\r\n", 'EMG'),
+    default   => template('icinga2/object.conf.erb'),
+  }
 
   if !defined(Concat[$target]) {
     concat { $target:
diff --git a/modules/icinga2/manifests/object/apiuser.pp b/modules/icinga2/manifests/object/apiuser.pp
old mode 100755
new mode 100644
index 4ee25ed4..3b44487a
--- a/modules/icinga2/manifests/object/apiuser.pp
+++ b/modules/icinga2/manifests/object/apiuser.pp
@@ -1,78 +1,83 @@
-# == Define: icinga2::object::apiuser
+# @summary
+#   Manage Icinga 2 ApiUser objects.
 #
-# Manage Icinga 2 ApiUser objects.
+# @example Create an user with full permissions:
+#   ::icinga2::object::apiuser { 'director':
+#     ensure      => present,
+#     password    => 'Eih5Weefoo2oa8sh',
+#     permissions => [ '*' ],
+#     target      => '/etc/icinga2/conf.d/api-users.conf',
+#   }
 #
-# === Parameters
+# @example Create an user with restricted permissions for Icinga Web 2:
+#   ::icinga2::object::apiuser { 'icingaweb2':
+#     ensure      => present,
+#     password    => '12e2ef553068b519',
+#     permissions => [ 'status/query', 'actions/*', 'objects/modify/*', 'objects/query/*' ],
+#     target      => '/etc/icinga2/conf.d/api-users.conf',
+#   }
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @example Create user who's only allowed to query hosts and services:
+#   ::icinga2::object::apiuser { 'read':
+#     ensure      => present,
+#     password    => 'read',
+#     permissions => [
+#       {
+#         permission => 'objects/query/Host',
+#         filter     => '{{ regex("^Linux", host.vars.os) }}'
+#       },
+#       { 
+#         permission => 'objects/query/Service',
+#         filter     => '{{ regex("^Linux", host.vars.os) }}'
+#       },
+#     ],
+#     target      => '/etc/icinga2/conf.d/api-users.conf',
+#   }
 #
-# [*apiuser_name*]
-#   Set the name of the apiuser object. Defaults to title of the define resource.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# [*password*]
-#   Password string.
+# @param apiuser_name
+#   Set the name of the apiuser object.
 #
-# [*client_cn*]
+# @param password
+#   Password string. The password parameter isn't parsed anymore.
+#
+# @param client_cn
 #   Optional. Client Common Name (CN).
 #
-# [*permissions*]
+# @param permissions
 #   Array of permissions. Either as string or dictionary with the keys permission
 #   and filter. The latter must be specified as function.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared at the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 10.
-#
-# === Examples
-#
-# ::icinga2::object::apiuser { 'director':
-#   ensure      => present,
-#   password    => 'Eih5Weefoo2oa8sh',
-#   permissions => [ '*' ],
-#   target      => '/etc/icinga2/conf.d/api-users.conf',
-# }
-#
-# ::icinga2::object::apiuser { 'icingaweb2':
-#   ensure      => present,
-#   password    => '12e2ef553068b519',
-#   permissions => [ 'status/query', 'actions/*', 'objects/modify/*', 'objects/query/*' ],
-#   target      => '/etc/icinga2/conf.d/api-users.conf',
-# }
-#
-# ::icinga2::object::apiuser { 'read':
-#   ensure      => present,
-#   password    => 'read',
-#   permissions => [
-#     {
-#       permission => 'objects/query/Host',
-#       filter     => '{{ regex("^Linux", host.vars.os) }}'
-#     },
-#     { 
-#       permission => 'objects/query/Service',
-#       filter     => '{{ regex("^Linux", host.vars.os) }}'
-#     },
-#   ],
-#   target      => '/etc/icinga2/conf.d/api-users.conf',
-# }
-#
+# @param [Variant[String, Integer]] order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::apiuser(
-  Stdlib::Absolutepath        $target,
-  Enum['absent', 'present']   $ensure       = present,
-  String                      $apiuser_name = $title,
-  Optional[Array]             $permissions  = undef,
-  Optional[String]            $password     = undef,
-  Optional[String]            $client_cn    = undef,
-  Variant[String, Integer]    $order        = 30,
+  Stdlib::Absolutepath                          $target,
+  Enum['absent', 'present']                     $ensure       = present,
+  String                                        $apiuser_name = $title,
+  Optional[Array]                               $permissions  = undef,
+  Optional[Variant[String, Sensitive[String]]]  $password     = undef,
+  Optional[String]                              $client_cn    = undef,
+  Variant[String, Integer]                      $order        = 30,
 ) {
 
+  $_password = if $password =~ String {
+    Sensitive($password)
+  } elsif $password =~ Sensitive {
+    $password
+  } else {
+    undef
+  }
+
   # compose the attributes
   $attrs = {
-    password    => $password,
+    password    => $_password,
     client_cn   => $client_cn,
     permissions => $permissions,
   }
diff --git a/modules/icinga2/manifests/object/checkcommand.pp b/modules/icinga2/manifests/object/checkcommand.pp
old mode 100755
new mode 100644
index a151b17b..b2796195
--- a/modules/icinga2/manifests/object/checkcommand.pp
+++ b/modules/icinga2/manifests/object/checkcommand.pp
@@ -1,54 +1,55 @@
-# == Define: icinga2::object::checkcommand
+# @summary
+#   Manage Icinga 2 Host objects.
 #
-# Manage Icinga 2 Host objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*checkcommand_name*]
+# @param checkcommand_name
 #   Title of the CheckCommand object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*command*]
+# @param command
 #   The command. This can either be an array of individual command arguments.
 #   Alternatively a string can be specified in which case the shell interpreter (usually /bin/sh) takes care of parsing the command.
 #   When using the "arguments" attribute this must be an array. Can be specified as function for advanced implementations.
 #
-# [*env*]
+# @param env
 #   A dictionary of macros which should be exported as environment variables prior to executing the command.
 #
-# [*vars*]
-#   A dictionary containing custom attributes that are specific to this command
-#   or a string to do operations on this dictionary.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*timeout*]
-#   The command timeout in seconds. Defaults to 60 seconds.
+# @param timeout
+#   The command timeout in seconds.
 #
-# [*arguments*]
+# @param arguments
 #   A dictionary of command arguments.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 10.
+# @param template
+#   Set to true creates a template instead of an object.
+#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 #
 define icinga2::object::checkcommand(
   Stdlib::Absolutepath                $target,
   Enum['absent', 'present']           $ensure            = present,
-  Optional[String]                    $checkcommand_name = $title,
+  String                              $checkcommand_name = $title,
   Array                               $import            = [],
   Optional[Variant[Array, String]]    $command           = undef,
   Optional[Hash]                      $env               = undef,
-  Optional[Variant[String, Hash]]     $vars              = undef,
-  Optional[Integer[1]]                $timeout           = undef,
-  Optional[Hash]                      $arguments         = undef,
+  Optional[Icinga2::CustomAttributes] $vars              = undef,
+  Optional[Icinga2::Interval]         $timeout           = undef,
+  Optional[Variant[Hash, String]]     $arguments         = undef,
   Boolean                             $template          = false,
   Variant[String, Integer]            $order             = 15,
 ) {
diff --git a/modules/icinga2/manifests/object/checkresultreader.pp b/modules/icinga2/manifests/object/checkresultreader.pp
old mode 100755
new mode 100644
index 030f93de..e06efe8d
--- a/modules/icinga2/manifests/object/checkresultreader.pp
+++ b/modules/icinga2/manifests/object/checkresultreader.pp
@@ -1,25 +1,21 @@
-# == Define: icinga2::object::checkresultreader
+# @summary
+#   Manage Icinga 2 CheckResultReader objects.
 #
-# Manage Icinga 2 CheckResultReader objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param checkresultreader_name
+#   Set the Icinga 2 name of the ceckresultreader object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param spool_dir
+#   The directory which contains the check result files.
 #
-# [ceckresultreader_name*]
-#   Set the Icinga 2 name of the ceckresultreader object. Defaults to title of the define resource.
-#
-# [*spool_dir*]
-#   The directory which contains the check result files. Defaults to LocalStateDir + "/lib/icinga2/spool/checkresults/".
-#
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 10.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::checkresultreader (
   Stdlib::Absolutepath               $target,
diff --git a/modules/icinga2/manifests/object/dependency.pp b/modules/icinga2/manifests/object/dependency.pp
old mode 100755
new mode 100644
index 2916e65e..48d00d10
--- a/modules/icinga2/manifests/object/dependency.pp
+++ b/modules/icinga2/manifests/object/dependency.pp
@@ -1,77 +1,72 @@
-# == Define: icinga2::object::dependency
+# @summary
+#   Manage Icinga 2 dependency objects.
 #
-# Manage Icinga 2 dependency objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param dependency_name
+#   Set the Icinga 2 name of the dependency object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*dependency_name*]
-#   Set the Icinga 2 name of the dependency object. Defaults to title of the define resource.
-#
-# [*parent_host_name*]
+# @param parent_host_name
 #   The parent host.
 #
-# [*parent_service_name*]
+# @param parent_service_name
 #   The parent service. If omitted, this dependency object is treated as host
 #   dependency.
 #
-# [*child_host_name*]
+# @param child_host_name
 #   The child host.
 #
-# [*child_service_name*]
+# @param child_service_name
 #   The child service. If omitted, this dependency object is treated as host
 #   dependency.
 #
-# [*disable_checks*]
-#   Whether to disable checks when this dependency fails. Defaults to false.
+# @param disable_checks
+#   Whether to disable checks when this dependency fails.
 #
-# [*disable_notifications*]
-#   Whether to disable notifications when this dependency fails. Defaults to
+# @param disable_notifications
+#   Whether to disable notifications when this dependency fails.
 #   true.
 #
-# [*ignore_soft_states*]
-#   Whether to ignore soft states for the reachability calculation. Defaults to
+# @param ignore_soft_states
+#   Whether to ignore soft states for the reachability calculation.
 #   true.
 #
-# [*period*]
+# @param period
 #   Time period during which this dependency is enabled.
 #
-# [*states*]
-#   A list of state filters when this dependency should be OK. Defaults to [ OK,
-#   Warning ] for services and [ Up ] for hosts.
+# @param states
+#   A list of state filters when this dependency should be OK.
 #
-# [*apply*]
+# @param apply
 #   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
+#   i.e. 'vhost => config in host.vars.vhosts'.
 #
-# [*prefix*]
-#   Set dependency_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
+# @param prefix
+#   Set dependency_name as prefix in front of 'apply for'. Only effects if apply is a string.
 #
-# [*apply_target*]
+# @param apply_target
 #   An object type on which to target the apply rule. Valid values are `Host`
-#   and `Service`. Defaults to `Host`.
+#   and `Service`.
 #
-# [*assign*]
+# @param assign
 #   Assign user group members using the group assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Exclude users using the group ignore rules.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 70.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::dependency (
   Stdlib::Absolutepath          $target,
@@ -87,7 +82,7 @@ define icinga2::object::dependency (
   Optional[String]              $period                = undef,
   Optional[Array]               $states                = undef,
   Variant[Boolean, String]      $apply                 = false,
-  Variant[String, Boolean]      $prefix                = false,
+  Variant[Boolean, String]      $prefix                = false,
   Enum['Host', 'Service']       $apply_target          = 'Host',
   Array                         $assign                = [],
   Array                         $ignore                = [],
diff --git a/modules/icinga2/manifests/object/endpoint.pp b/modules/icinga2/manifests/object/endpoint.pp
old mode 100755
new mode 100644
index 22a83af4..1065e34b
--- a/modules/icinga2/manifests/object/endpoint.pp
+++ b/modules/icinga2/manifests/object/endpoint.pp
@@ -1,38 +1,34 @@
-# == Define: icinga2::object::endpoint
+# @summary
+#   Manage Icinga 2 endpoint objects.
 #
-# Manage Icinga 2 endpoint objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param endpoint_name
+#   Set the Icinga 2 name of the endpoint object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*endpoint_name*]
-#   Set the Icinga 2 name of the endpoint object. Defaults to title of the define resource.
-#
-# [*host*]
+# @param host
 #   Optional. The IP address of the remote Icinga 2 instance.
 #
-# [*port*]
-#   The service name/port of the remote Icinga 2 instance. Defaults to 5665.
+# @param port
+#   The service name/port of the remote Icinga 2 instance.
 #
-# [*log_duration*]
-#   Duration for keeping replay logs on connection loss. Defaults to 1d (86400 seconds).
+# @param log_duration
+#   Duration for keeping replay logs on connection loss.
 #   Attribute is specified in seconds. If log_duration is set to 0, replaying logs is disabled.
 #   You could also specify the value in human readable format like 10m for 10 minutes
 #   or 1h for one hour.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared at the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 40.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::endpoint(
   Enum['absent', 'present']             $ensure        = present,
-  Optional[String]                      $endpoint_name = $title,
+  String                                $endpoint_name = $title,
   Optional[Stdlib::Host]                $host          = undef,
   Optional[Stdlib::Port::Unprivileged]  $port          = undef,
   Optional[Icinga2::Interval]           $log_duration  = undef,
diff --git a/modules/icinga2/manifests/object/eventcommand.pp b/modules/icinga2/manifests/object/eventcommand.pp
old mode 100755
new mode 100644
index f51fab8c..8e3f1aee
--- a/modules/icinga2/manifests/object/eventcommand.pp
+++ b/modules/icinga2/manifests/object/eventcommand.pp
@@ -1,46 +1,40 @@
-# == Define: icinga2::object::eventcommand
+# @summary
+#   Manage Icinga 2 EventCommand objects.
 #
-# Manage Icinga 2 EventCommand objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param eventcommand_name
+#   Set the Icinga 2 name of the eventcommand object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param command
+#   The command. This can either be an array of individual command arguments.
+#   Alternatively a string can be specified in which case the shell interpreter (usually /bin/sh)
+#   takes care of parsing the command.
 #
-# [*eventcommand_name*]
-#   Set the Icinga 2 name of the eventcommand object. Defaults to title of the define resource.
+# @param env
+#   A dictionary of macros which should be exported as environment variables prior to executing the command.
 #
-# [*execute*]
-#     The "execute" script method takes care of executing the event handler.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*command*]
-#     The command. This can either be an array of individual command arguments.
-#     Alternatively a string can be specified in which case the shell interpreter (usually /bin/sh)
-#     takes care of parsing the command.
+# @param timeout
+#   The command timeout in seconds.
 #
-# [*env*]
-#     A dictionary of macros which should be exported as environment variables prior to executing the command.
+# @param arguments
+#   A dictionary of command arguments.
 #
-# [*vars*]
-#     A dictionary containing custom attributes that are specific to this command
-#     or a string to do operations on this dictionary.
-#
-# [*timeout*]
-#     The command timeout in seconds. Defaults to 60 seconds.
-#
-# [*arguments*]
-#     A dictionary of command arguments.
-#
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
-#
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 20.
+# @param import
+#   Sorted List of templates to include.
 #
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::eventcommand (
   Stdlib::Absolutepath                $target,
@@ -48,8 +42,8 @@ define icinga2::object::eventcommand (
   String                              $eventcommand_name = $title,
   Optional[Variant[Array, String]]    $command           = undef,
   Optional[Hash]                      $env               = undef,
-  Optional[Variant[String, Hash]]     $vars              = undef,
-  Optional[Integer[1]]                $timeout           = undef,
+  Optional[Icinga2::CustomAttributes] $vars              = undef,
+  Optional[Icinga2::Interval]         $timeout           = undef,
   Optional[Hash]                      $arguments         = undef,
   Array                               $import            = [],
   Variant[String, Integer]            $order             = 20,
diff --git a/modules/icinga2/manifests/object/host.pp b/modules/icinga2/manifests/object/host.pp
old mode 100755
new mode 100644
index 8880da40..5564d70c
--- a/modules/icinga2/manifests/object/host.pp
+++ b/modules/icinga2/manifests/object/host.pp
@@ -1,177 +1,179 @@
-# == Define: icinga2::object::host
+# @summary
+#   Manage Icinga 2 Host objects.
 #
-# Manage Icinga 2 Host objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
-#
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*host_name*]
+# @param host_name
 #   Hostname of the Host object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*display_name*]
+# @param display_name
 #   A short description of the host (e.g. displayed by external interfaces instead of the name if set).
 #
-# [*address*]
+# @param address
 #   The host's address v4.
 #
-# [*address6*]
+# @param address6
 #   The host's address v6.
 #
-# [*vars*]
-#   A dictionary containing custom attributes that are specific to this host
-#   or a string to do operations on this dictionary.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*groups*]
+# @param groups
 #   A list of host groups this host belongs to.
 #
-# [*check_command*]
+# @param check_command
 #   The name of the check command.
 #
-# [*max_check_attempts*]
-#   The number of times a host is re-checked before changing into a hard state. Defaults to 3.
+# @param max_check_attempts
+#   The number of times a host is re-checked before changing into a hard state.
 #
-# [*check_period*]
-#   The name of a time period which determines when this host should be checked. Not set by default.
+# @param check_period
+#   The name of a time period which determines when this host should be checked.
 #
-# [*check_timeout*]
+# @param check_timeout
 #    Check command timeout in seconds. Overrides the CheckCommand's timeout attribute.
 #
-# [*check_interval*]
-#   The check interval (in seconds). This interval is used for checks when the host is in a HARD state. Defaults to 5 minutes.
+# @param check_interval
+#   The check interval (in seconds). This interval is used for checks when the host is in a HARD state.
 #
-# [*retry_interval*]
-#   The retry interval (in seconds). This interval is used for checks when the host is in a SOFT state. Defaults to 1 minute.
+# @param retry_interval
+#   The retry interval (in seconds). This interval is used for checks when the host is in a SOFT state.
 #
-# [*enable_notifications*]
-#   Whether notifications are enabled. Defaults to true.
+# @param enable_notifications
+#   Whether notifications are enabled.
 #
-# [*enable_active_checks*]
-#   Whether active checks are enabled. Defaults to true.
+# @param enable_active_checks
+#   Whether active checks are enabled.
 #
-# [*enable_passive_checks*]
-#   Whether passive checks are enabled. Defaults to true.
+# @param enable_passive_checks
+#   Whether passive checks are enabled.
 #
-# [*enable_event_handler*]
-#   Enables event handlers for this host. Defaults to true.
+# @param enable_event_handler
+#   Enables event handlers for this host.
 #
-# [*enable_flapping*]
-#   Whether flap detection is enabled. Defaults to false.
+# @param enable_flapping
+#   Whether flap detection is enabled.
 #
-# [*enable_perfdata*]
-#   Whether performance data processing is enabled. Defaults to true.
+# @param enable_perfdata
+#   Whether performance data processing is enabled.
 #
-# [*event_command*]
+# @param event_command
 #   The name of an event command that should be executed every time the host's
 #   state changes or the host is in a SOFT state.
 #
-# [*flapping_threshold*]
-#   The flapping threshold in percent when a host is considered to be flapping.
+# @param flapping_threshold_low
+#   Flapping lower bound in percent for a host to be considered not flapping.
 #
-# [*volatile*]
-#    The volatile setting enables always HARD state types if NOT-OK state changes occur.
+# @param flapping_threshold_high
+#   Flapping upper bound in percent for a host to be considered flapping.
 #
-# [*zone*]
+# @param volatile
+#   The volatile setting enables always HARD state types if NOT-OK state changes occur.
+#
+# @param zone
 #   The zone this object is a member of.
 #
-# [*command_endpoint*]
+# @param command_endpoint
 #   The endpoint where commands are executed on.
 #
-# [*notes*]
+# @param notes
 #   Notes for the host.
 #
-# [*notes_url*]
+# @param notes_url
 #   Url for notes for the host (for example, in notification commands).
 #
-# [*action_url*]
+# @param action_url
 #   Url for actions for the host (for example, an external graphing tool).
 #
-# [*icon_image*]
+# @param icon_image
 #   Icon image for the host. Used by external interfaces only.
 #
-# [*icon_image_alt*]
+# @param icon_image_alt
 #   Icon image description for the host. Used by external interface only.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 50.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::host(
   Stdlib::Absolutepath                $target,
-  Enum['absent', 'present']           $ensure                = present,
-  String                              $host_name             = $title,
-  Array                               $import                = [],
-  Optional[Stdlib::Host]              $address               = undef,
-  Optional[Stdlib::Host]              $address6              = undef,
-  Optional[Variant[String, Hash]]     $vars                  = undef,
-  Optional[Array]                     $groups                = undef,
-  Optional[String]                    $display_name          = undef,
-  Optional[String]                    $check_command         = undef,
-  Optional[Integer[1]]                $max_check_attempts    = undef,
-  Optional[String]                    $check_period          = undef,
-  Optional[Icinga2::Interval]         $check_timeout         = undef,
-  Optional[Icinga2::Interval]         $check_interval        = undef,
-  Optional[Icinga2::Interval]         $retry_interval        = undef,
-  Optional[Boolean]                   $enable_notifications  = undef,
-  Optional[Boolean]                   $enable_active_checks  = undef,
-  Optional[Boolean]                   $enable_passive_checks = undef,
-  Optional[Boolean]                   $enable_event_handler  = undef,
-  Optional[Boolean]                   $enable_flapping       = undef,
-  Optional[Boolean]                   $enable_perfdata       = undef,
-  Optional[String]                    $event_command         = undef,
-  Optional[Integer[1]]                $flapping_threshold    = undef,
-  Optional[Boolean]                   $volatile              = undef,
-  Optional[String]                    $zone                  = undef,
-  Optional[String]                    $command_endpoint      = undef,
-  Optional[String]                    $notes                 = undef,
-  Optional[Stdlib::HTTPSUrl]          $notes_url             = undef,
-  Optional[Stdlib::HTTPSUrl]          $action_url            = undef,
-  Optional[Stdlib::Absolutepath]      $icon_image            = undef,
-  Optional[String]                    $icon_image_alt        = undef,
-  Boolean                             $template              = false,
-  Variant[String, Integer]            $order                 = 50,
+  Enum['absent', 'present']           $ensure                  = present,
+  String                              $host_name               = $title,
+  Array                               $import                  = [],
+  Optional[Stdlib::Host]              $address                 = undef,
+  Optional[Stdlib::Host]              $address6                = undef,
+  Optional[Icinga2::CustomAttributes] $vars                    = undef,
+  Optional[Array]                     $groups                  = undef,
+  Optional[String]                    $display_name            = undef,
+  Optional[String]                    $check_command           = undef,
+  Optional[Integer[1]]                $max_check_attempts      = undef,
+  Optional[String]                    $check_period            = undef,
+  Optional[Icinga2::Interval]         $check_timeout           = undef,
+  Optional[Icinga2::Interval]         $check_interval          = undef,
+  Optional[Icinga2::Interval]         $retry_interval          = undef,
+  Optional[Boolean]                   $enable_notifications    = undef,
+  Optional[Boolean]                   $enable_active_checks    = undef,
+  Optional[Boolean]                   $enable_passive_checks   = undef,
+  Optional[Boolean]                   $enable_event_handler    = undef,
+  Optional[Boolean]                   $enable_flapping         = undef,
+  Optional[Boolean]                   $enable_perfdata         = undef,
+  Optional[String]                    $event_command           = undef,
+  Optional[Integer[1]]                $flapping_threshold_low  = undef,
+  Optional[Integer[1]]                $flapping_threshold_high = undef,
+  Optional[Boolean]                   $volatile                = undef,
+  Optional[String]                    $zone                    = undef,
+  Optional[String]                    $command_endpoint        = undef,
+  Optional[String]                    $notes                   = undef,
+  Optional[String]                    $notes_url               = undef,
+  Optional[String]                    $action_url              = undef,
+  Optional[String]                    $icon_image              = undef,
+  Optional[String]                    $icon_image_alt          = undef,
+  Boolean                             $template                = false,
+  Variant[String, Integer]            $order                   = 50,
 ) {
 
   # compose the attributes
   $attrs = {
-    address               => $address,
-    address6              => $address6,
-    groups                => $groups,
-    display_name          => $display_name,
-    check_command         => $check_command,
-    max_check_attempts    => $max_check_attempts,
-    check_period          => $check_period,
-    check_timeout         => $check_timeout,
-    check_interval        => $check_interval,
-    retry_interval        => $retry_interval,
-    enable_notifications  => $enable_notifications,
-    enable_active_checks  => $enable_active_checks,
-    enable_passive_checks => $enable_passive_checks,
-    enable_event_handler  => $enable_event_handler,
-    enable_flapping       => $enable_flapping,
-    enable_perfdata       => $enable_perfdata,
-    event_command         => $event_command,
-    flapping_threshold    => $flapping_threshold,
-    volatile              => $volatile,
-    zone                  => $zone,
-    command_endpoint      => $command_endpoint,
-    notes                 => $notes,
-    notes_url             => $notes_url,
-    action_url            => $action_url,
-    icon_image            => $icon_image,
-    icon_image_alt        => $icon_image_alt,
-    vars                  => $vars,
+    address                 => $address,
+    address6                => $address6,
+    groups                  => $groups,
+    display_name            => $display_name,
+    check_command           => $check_command,
+    max_check_attempts      => $max_check_attempts,
+    check_period            => $check_period,
+    check_timeout           => $check_timeout,
+    check_interval          => $check_interval,
+    retry_interval          => $retry_interval,
+    enable_notifications    => $enable_notifications,
+    enable_active_checks    => $enable_active_checks,
+    enable_passive_checks   => $enable_passive_checks,
+    enable_event_handler    => $enable_event_handler,
+    enable_flapping         => $enable_flapping,
+    enable_perfdata         => $enable_perfdata,
+    event_command           => $event_command,
+    flapping_threshold_low  => $flapping_threshold_low,
+    flapping_threshold_high => $flapping_threshold_high,
+    volatile                => $volatile,
+    zone                    => $zone,
+    command_endpoint        => $command_endpoint,
+    notes                   => $notes,
+    notes_url               => $notes_url,
+    action_url              => $action_url,
+    icon_image              => $icon_image,
+    icon_image_alt          => $icon_image_alt,
+    vars                    => $vars,
   }
 
   # create object
diff --git a/modules/icinga2/manifests/object/hostgroup.pp b/modules/icinga2/manifests/object/hostgroup.pp
old mode 100755
new mode 100644
index 61b8215f..6bb5943f
--- a/modules/icinga2/manifests/object/hostgroup.pp
+++ b/modules/icinga2/manifests/object/hostgroup.pp
@@ -1,37 +1,35 @@
-# == Define: icinga2::object::hostgroup
+# @summary
+#   Manage Icinga 2 HostGroup objects.
 #
-# Manage Icinga 2 HostGroup objects.
+# @example
+#   icinga2::object::hostgroup { 'monitoring-hosts':
+#     display_name => 'Linux Servers',
+#     groups       => [ 'linux-servers' ],
+#     target       => '/etc/icinga2/conf.d/groups2.conf',
+#     assign       => [ 'host.name == NodeName' ],
+#   }
 #
-# === Parameters
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*display_name*]
+# @param display_name
 #   A short description of the host group.
 #
-# [*groups*]
+# @param groups
 #   An array of nested group names.
 #
-# [*assign*]
-#   Assign host group members using the group assign rules.
+# @param assign
+#   Assign host group members using the group rules.
+#
+# @param ignore
+#   Ignore host group members using the group rules.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared at the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 55.
-#
-# === Examples
-#
-# icinga2::object::hostgroup { 'monitoring-hosts':
-#   display_name => 'Linux Servers',
-#   groups       => [ 'linux-servers' ],
-#   target       => '/etc/icinga2/conf.d/groups2.conf',
-#   assign       => [ 'host.name == NodeName' ],
-# }
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::hostgroup(
   Stdlib::Absolutepath        $target,
diff --git a/modules/icinga2/manifests/object/notification.pp b/modules/icinga2/manifests/object/notification.pp
old mode 100755
new mode 100644
index ffb05ca2..d2b34c00
--- a/modules/icinga2/manifests/object/notification.pp
+++ b/modules/icinga2/manifests/object/notification.pp
@@ -1,82 +1,76 @@
-# == Define: icinga2::object::notification
+# @summary
+#   Manage Icinga 2 notification objects.
 #
-# Manage Icinga 2 notification objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param notification_name
+#   Set the Icinga 2 name of the notification object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param host_name
+#   The name of the host this notification belongs to.
 #
-# [*notification_name*]
-#   Set the Icinga 2 name of the notification object. Defaults to title of the define resource.
-#
-# [*host_name*]
-# 	The name of the host this notification belongs to.
-#
-# [*service_name*]
-# 	The short name of the service this notification belongs to. If omitted, this
+# @param service_name
+#   The short name of the service this notification belongs to. If omitted, this
 #   notification object is treated as host notification.
 #
-# [*vars*]
-# 	A dictionary containing custom attributes that are specific to this
-#   notification object or a string to do operations on this dictionary.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*users*]
-# 	A list of user names who should be notified.
+# @param users
+#   A list of user names who should be notified.
 #
-# [*user_groups*]
-# 	A list of user group names who should be notified.
+# @param user_groups
+#   A list of user group names who should be notified.
 #
-# [*times*]
-# 	A dictionary containing begin and end attributes for the notification.
+# @param times
+#   A dictionary containing begin and end attributes for the notification.
 #
-# [*command*]
-# 	The name of the notification command which should be executed when the
+# @param command
+#   The name of the notification command which should be executed when the
 #   notification is triggered.
 #
-# [*interval*]
-# 	The notification interval (in seconds). This interval is used for active
-#   notifications. Defaults to 30 minutes. If set to 0, re-notifications are
-#   disabled.
+# @param interval
+#   The notification interval (in seconds). This interval is used for active
+#   notifications.
 #
-# [*period*]
-# 	The name of a time period which determines when this notification should be
-#   triggered. Not set by default.
+# @param period
+#   The name of a time period which determines when this notification should be
+#   triggered.
 #
-# [*zone*]
-# 	The zone this object is a member of.
+# @param zone
+#   The zone this object is a member of.
 #
-# [*types*]
-# 	A list of type filters when this notification should be triggered. By
-#   default everything is matched.
+# @param types
+#   A list of type filters when this notification should be triggered.
 #
-# [*states*]
-# 	A list of state filters when this notification should be triggered. By
-#   default everything is matched.
+# @param states
+#   A list of state filters when this notification should be triggered.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*apply*]
+# @param apply
 #   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
+#   i.e. 'vhost => config in host.vars.vhosts'.
 #
-# [*prefix*]
-#   Set notification_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
+# @param prefix
+#   Set notification_name as prefix in front of 'apply for'. Only effects if apply is a string.
 #
-# [*apply_target*]
-#   An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
+# @param apply_target
+#   An object type on which to target the apply rule. Valid values are `Host` and `Service`.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 85.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::notification (
   Stdlib::Absolutepath                                                $target,
@@ -84,7 +78,7 @@ define icinga2::object::notification (
   String                                                              $notification_name = $title,
   Optional[String]                                                    $host_name         = undef,
   Optional[String]                                                    $service_name      = undef,
-  Optional[Variant[String, Hash]]                                     $vars              = undef,
+  Optional[Icinga2::CustomAttributes]                                 $vars              = undef,
   Optional[Variant[String, Array]]                                    $users             = undef,
   Optional[Variant[String, Array]]                                    $user_groups       = undef,
   Optional[Hash]                                                      $times             = undef,
diff --git a/modules/icinga2/manifests/object/notificationcommand.pp b/modules/icinga2/manifests/object/notificationcommand.pp
old mode 100755
new mode 100644
index a3ae0a4e..f63c13dc
--- a/modules/icinga2/manifests/object/notificationcommand.pp
+++ b/modules/icinga2/manifests/object/notificationcommand.pp
@@ -1,50 +1,44 @@
-# == Define: icinga2::object::notificationcommand
+# @summary
+#   Manage Icinga 2 notificationcommand objects.
 #
-# Manage Icinga 2 notificationcommand objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param notificationcommand_name
+#   Set the Icinga 2 name of the notificationcommand object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param command
+#   The command. This can either be an array of individual command arguments.
+#   Alternatively a string can be specified in which case the shell interpreter
+#   (usually /bin/sh) takes care of parsing the command.
 #
-# [*notificationcommand_name*]
-#   Set the Icinga 2 name of the notificationcommand object. Defaults to title of the define resource.
+# @param env
+#   A dictionary of macros which should be exported as environment variables
+#   prior to executing the command.
 #
-# [*execute*]
-#   The "execute" script method takes care of executing the notification.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*command*]
-# 	 The command. This can either be an array of individual command arguments.
-#    Alternatively a string can be specified in which case the shell interpreter
-#    (usually /bin/sh) takes care of parsing the command.
+# @param timeout
+#   The command timeout in seconds.
 #
-# [*env*]
-# 	 A dictionary of macros which should be exported as environment variables
-#    prior to executing the command.
+# @param arguments
+#   A dictionary of command arguments.
 #
-# [*vars*]
-# 	 A dictionary containing custom attributes that are specific to this command
-#    or a string to do operations on this dictionary.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*timeout*]
-# 	 The command timeout in seconds. Defaults to 60 seconds.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*arguments*]
-# 	 A dictionary of command arguments.
-#
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
-#
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
-#
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 25.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::notificationcommand (
   Stdlib::Absolutepath                 $target,
@@ -52,8 +46,8 @@ define icinga2::object::notificationcommand (
   String                               $notificationcommand_name = $title,
   Optional[Variant[Array, String]]     $command                  = undef,
   Optional[Hash]                       $env                      = undef,
-  Optional[Variant[String, Hash]]      $vars                     = undef,
-  Optional[Integer[1]]                 $timeout                  = undef,
+  Optional[Icinga2::CustomAttributes]  $vars                     = undef,
+  Optional[Icinga2::Interval]          $timeout                  = undef,
   Optional[Hash]                       $arguments                = undef,
   Boolean                              $template                 = false,
   Array                                $import                   = [],
diff --git a/modules/icinga2/manifests/object/scheduleddowntime.pp b/modules/icinga2/manifests/object/scheduleddowntime.pp
old mode 100755
new mode 100644
index e3182d2b..9ac65879
--- a/modules/icinga2/manifests/object/scheduleddowntime.pp
+++ b/modules/icinga2/manifests/object/scheduleddowntime.pp
@@ -1,77 +1,73 @@
-# == Define: icinga2::object::scheduleddowntime
+# @summary
+#   Manage Icinga 2 scheduleddowntime objects.
 #
-# Manage Icinga 2 scheduleddowntime objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param scheduleddowntime_name
+#   Set the Icinga 2 name of the scheduleddowntime object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param host_name
+#   The name of the host this comment belongs to.
 #
-# [*scheduleddowntime_name*]
-#   Set the Icinga 2 name of the scheduleddowntime object. Defaults to title of the define resource.
+# @param service_name
+#   The short name of the service this comment belongs to. If omitted, this comment object is treated as host comment.
 #
-# [*host_name*]
-#     The name of the host this comment belongs to.
+# @param author
+#   The author's name.
 #
-# [*service_name*]
-#     The short name of the service this comment belongs to. If omitted, this comment object is treated as host comment.
+# @param comment
+#   The comment text.
 #
-# [*author*]
-#     The author's name.
+# @param fixed
+#   Whether this is a fixed downtime.
 #
-# [*comment*]
-#     The comment text.
+# @param duration
+#   The duration as number.
 #
-# [*fixed*]
-#     Whether this is a fixed downtime. Defaults to true.
+# @param ranges
+#   A dictionary containing information which days and durations apply to this timeperiod.
 #
-# [*duration*]
-#     The duration as number.
-#
-# [*ranges*]
-#     A dictionary containing information which days and durations apply to this timeperiod.
-#
-# [*apply*]
+# @param apply
 #   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
+#   i.e. 'vhost => config in host.vars.vhosts'.
 #
-# [*prefix*]
-#   Set scheduleddowntime_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
+# @param prefix
+#   Set scheduleddowntime_name as prefix in front of 'apply for'. Only effects if apply is a string.
 #
-# [*apply_target*]
-#   An object type on which to target the apply rule. Valid values are `Host` and `Service`. Defaults to `Host`.
+# @param apply_target
+#   An object type on which to target the apply rule. Valid values are `Host` and `Service`.
 #
-# [*assign*]
+# @param assign
 #   Assign user group members using the group assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Exclude users using the group ignore rules.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 90.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::scheduleddowntime (
-  Stdlib::Absolutepath                          $target,
-  Enum['absent', 'present']                     $ensure                 = present,
-  String                                        $scheduleddowntime_name = $title,
-  Optional[String]                              $host_name              = undef,
-  Optional[String]                              $service_name           = undef,
-  Optional[String]                              $author                 = undef,
-  Optional[String]                              $comment                = undef,
-  Optional[Boolean]                             $fixed                  = undef,
-  Optional[Pattern[/^\d+(\.\d+)?[dhms]?$/]]     $duration               = undef,
-  Optional[Hash]                                $ranges                 = undef,
-  Variant[Boolean, String]                      $apply                  = false,
-  Variant[String, Boolean]                      $prefix                 = false,
-  Enum['Host', 'Service']                       $apply_target           = 'Host',
-  Array                                         $assign                 = [],
-  Array                                         $ignore                 = [],
-  Variant[String, Integer]                      $order                  = 90,
+  Stdlib::Absolutepath            $target,
+  Enum['absent', 'present']       $ensure                 = present,
+  String                          $scheduleddowntime_name = $title,
+  Optional[String]                $host_name              = undef,
+  Optional[String]                $service_name           = undef,
+  Optional[String]                $author                 = undef,
+  Optional[String]                $comment                = undef,
+  Optional[Boolean]               $fixed                  = undef,
+  Optional[Icinga2::Interval]     $duration               = undef,
+  Optional[Hash]                  $ranges                 = undef,
+  Variant[Boolean, String]        $apply                  = false,
+  Variant[Boolean, String]        $prefix                 = false,
+  Enum['Host', 'Service']         $apply_target           = 'Host',
+  Array                           $assign                 = [],
+  Array                           $ignore                 = [],
+  Variant[String, Integer]        $order                  = 90,
 ){
 
   # compose attributes
diff --git a/modules/icinga2/manifests/object/service.pp b/modules/icinga2/manifests/object/service.pp
old mode 100755
new mode 100644
index e32f6eb7..62b2e851
--- a/modules/icinga2/manifests/object/service.pp
+++ b/modules/icinga2/manifests/object/service.pp
@@ -1,229 +1,219 @@
-# == Define: icinga2::object::service
+# @summary
+#   Manage Icinga 2 service objects.
 #
-# Manage Icinga 2 service objects.
+# @example A service `ping` is applied to all hosts with a valid ipv4 address.
+#   ::icinga2::object::service { 'ping4':
+#     import        => ['generic-service'],
+#     apply         => true,
+#     check_command => 'ping',
+#     assign        => ['host.address'],
+#     target        => '/etc/icinga2/zones.d/global-templates/services.conf',
+#   }
 #
-# === Parameters
+# @example A `apply Service for (disk_name =>config in host.vars.disks)` rule is applied to all Linux hosts with an Icinga Agent. Note in this example it's required that the endpoint (see `command_endpoint`) and the host object has the same name!
+#   ::icinga2::object::service { 'linux_disks':
+#     import           => ['generic-service'],
+#     apply            =>  'disk_name => config in host.vars.disks',
+#     check_command    => 'disk',
+#     command_endpoint => 'host.name',
+#     vars             => '+ config',
+#     assign           => ['host.vars.os == Linux'],
+#     ignore           => ['host.vars.noagent'],
+#     target           => '/etc/icinga2/zones.d/global-templates/services.conf',
+#   }
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# [*service_name*]
-#   Set the Icinga 2 name of the service object. Defaults to title of the define resource.
+# @param service_name
+#   Set the Icinga 2 name of the service object.
 #
-# [*display_name*]
+# @param display_name
 #   A short description of the service.
 #
-# [*host_name*]
+# @param host_name
 #   The host this service belongs to. There must be a Host object with
 #   that name.
 #
-# [*name*]
-#   The service name. Must be unique on a per-host basis (Similar to the
-#   service_description attribute in Icinga 1.x).
-#
-# [*groups*]
+# @param groups
 #   The service groups this service belongs to.
 #
-# [*vars*]
-#   A dictionary containing custom attributes that are specific to this service
-#   or a string to do operations on this dictionary.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*check_command*]
+# @param check_command
 #   The name of the check command.
 #
-# [*max_check_attempts*]
+# @param max_check_attempts
 #   The number of times a service is re-checked before changing into a hard
-#   state. Defaults to 3.
+#   state.
 #
-# [*check_period*]
+# @param check_period
 #   The name of a time period which determines when this service should be
-#   checked. Not set by default.
+#   checked.
 #
-# [*check_timeout*]
+# @param check_timeout
 #   Check command timeout in seconds. Overrides the CheckCommand's timeout
 #   attribute.
 #
-# [*check_interval*]
+# @param check_interval
 #   The check interval (in seconds). This interval is used for checks when the
-#   service is in a HARD state. Defaults to 5 minutes.
+#   service is in a HARD state.
 #
-# [*retry_interval*]
+# @param retry_interval
 #   The retry interval (in seconds). This interval is used for checks when the
-#   service is in a SOFT state. Defaults to 1 minute.
+#   service is in a SOFT state.
 #
-# [*enable_notifications*]
-#   Whether notifications are enabled. Defaults to true.
+# @param enable_notifications
+#   Whether notifications are enabled.
 #
-# [*enable_active_checks*]
-#   Whether active checks are enabled. Defaults to true.
+# @param enable_active_checks
+#   Whether active checks are enabled.
 #
-# [*enable_passive_checks*]
-#   Whether passive checks are enabled. Defaults to true.
+# @param enable_passive_checks
+#   Whether passive checks are enabled.
 #
-# [*enable_event_handler*]
-#   Enables event handlers for this host. Defaults to true.
+# @param enable_event_handler
+#   Enables event handlers for this host.
 #
-# [*enable_flapping*]
-#   Whether flap detection is enabled. Defaults to false.
+# @param enable_flapping
+#   Whether flap detection is enabled.
 #
-# [*enable_perfdata*]
-#   Whether performance data processing is enabled. Defaults to true.
+# @param enable_perfdata
+#   Whether performance data processing is enabled.
 #
-# [*event_command*]
+# @param event_command
 #   The name of an event command that should be executed every time the
 #   service's state changes or the service is in a SOFT state.
 #
-# [*flapping_threshold*]
-#   The flapping threshold in percent when a service is considered to be
-#   flapping.
+# @param flapping_threshold_low
+#   Flapping lower bound in percent for a host to be considered not flapping.
+#
+# @param flapping_threshold_high
+#   Flapping upper bound in percent for a host to be considered flapping.
 #
-# [*volatile*]
+# @param volatile
 #   The volatile setting enables always HARD state types if NOT-OK state changes
 #   occur.
 #
-# [*zone*]
+# @param zone
 #   The zone this object is a member of.
 #
-# [*command_endpoint*]
+# @param command_endpoint
 #   The endpoint where commands are executed on.
 #
-# [*notes*]
+# @param notes
 #   Notes for the service.
 #
-# [*notes_url*]
+# @param notes_url
 #   Url for notes for the service (for example, in notification commands).
 #
-# [*action_url*]
+# @param action_url
 #   Url for actions for the service (for example, an external graphing tool).
 #
-# [*icon_image*]
+# @param icon_image
 #   Icon image for the service. Used by external interfaces only.
 #
-# [*icon_image_alt*]
+# @param icon_image_alt
 #   Icon image description for the service. Used by external interface only.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*apply*]
+# @param apply
 #   Dispose an apply instead an object if set to 'true'. Value is taken as statement,
-#   i.e. 'vhost => config in host.vars.vhosts'. Defaults to false.
+#   i.e. 'vhost => config in host.vars.vhosts'.
 #
-# [*prefix*]
-#   Set service_name as prefix in front of 'apply for'. Only effects if apply is a string. Defaults to false.
+# @param prefix
+#   Set service_name as prefix in front of 'apply for'. Only effects if apply is a string.
 #
-# [*assign*]
+# @param assign
 #   Assign user group members using the group assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Exclude users using the group ignore rules.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 60.
-#
-# === Examples
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
-# A service `ping` is applied to all hosts with a valid ipv4 address.
-#
-#   ::icinga2::object::service { 'ping4':
-#     import        => ['generic-service'],
-#     apply         => true,
-#     check_command => 'ping',
-#     assign        => ['host.address'],
-#     target        => '/etc/icinga2/zones.d/global-templates/services.conf',
-#   }
-#
-# A `apply Service for (disk_name =>config in host.vars.disks)` rule is applied
-# to all Linux hosts with an Icinga Agent. Note in this example it's required that
-# the endpoint (see `command_endpoint`) and the host object has the same name!
-#
-#   ::icinga2::object::service { 'linux_disks':
-#     import           => ['generic-service'],
-#     apply            =>  'disk_name => config in host.vars.disks',
-#     check_command    => 'disk',
-#     command_endpoint => 'host.name',
-#     vars             => 'vars + config',
-#     assign           => ['host.vars.os == Linux'],
-#     ignore           => ['host.vars.noagent'],
-#     target           => '/etc/icinga2/zones.d/global-templates/services.conf',
-#   }
-#
-#
-
 define icinga2::object::service (
-  Stdlib::Absolutepath                $target,
-  Enum['absent', 'present']           $ensure                 = present,
-  String                              $service_name           = $title,
-  Optional[String]                    $display_name           = undef,
-  Optional[String]                    $host_name              = undef,
-  Optional[Array]                     $groups                 = undef,
-  Optional[Variant[String, Hash]]     $vars                   = undef,
-  Optional[String]                    $check_command          = undef,
-  Optional[Integer[1]]                $max_check_attempts     = undef,
-  Optional[String]                    $check_period           = undef,
-  Optional[Icinga2::Interval]         $check_timeout          = undef,
-  Optional[Icinga2::Interval]         $check_interval         = undef,
-  Optional[Icinga2::Interval]         $retry_interval         = undef,
-  Optional[Boolean]                   $enable_notifications   = undef,
-  Optional[Boolean]                   $enable_active_checks   = undef,
-  Optional[Boolean]                   $enable_passive_checks  = undef,
-  Optional[Boolean]                   $enable_event_handler   = undef,
-  Optional[Boolean]                   $enable_flapping        = undef,
-  Optional[Boolean]                   $enable_perfdata        = undef,
-  Optional[String]                    $event_command          = undef,
-  Optional[Integer[1]]                $flapping_threshold     = undef,
-  Optional[Boolean]                   $volatile               = undef,
-  Optional[String]                    $zone                   = undef,
-  Optional[String]                    $command_endpoint       = undef,
-  Optional[String]                    $notes                  = undef,
-  Optional[Stdlib::HTTPSUrl]          $notes_url              = undef,
-  Optional[Stdlib::HTTPSUrl]          $action_url             = undef,
-  Optional[Stdlib::Absolutepath]      $icon_image             = undef,
-  Optional[String]                    $icon_image_alt         = undef,
-  Variant[Boolean, String]            $apply                  = false,
-  Variant[Boolean, String]            $prefix                 = false,
-  Array                               $assign                 = [],
-  Array                               $ignore                 = [],
-  Array                               $import                 = [],
-  Boolean                             $template               = false,
-  Variant[String, Integer]            $order                  = 60,
+  Stdlib::Absolutepath                       $target,
+  Enum['absent', 'present']                  $ensure                  = present,
+  String                                     $service_name            = $title,
+  Optional[String]                           $display_name            = undef,
+  Optional[String]                           $host_name               = undef,
+  Optional[Array]                            $groups                  = undef,
+  Optional[Icinga2::CustomAttributes]        $vars                    = undef,
+  Optional[String]                           $check_command           = undef,
+  Optional[Integer[1]]                       $max_check_attempts      = undef,
+  Optional[String]                           $check_period            = undef,
+  Optional[Icinga2::Interval]                $check_timeout           = undef,
+  Optional[Icinga2::Interval]                $check_interval          = undef,
+  Optional[Icinga2::Interval]                $retry_interval          = undef,
+  Optional[Boolean]                          $enable_notifications    = undef,
+  Optional[Boolean]                          $enable_active_checks    = undef,
+  Optional[Boolean]                          $enable_passive_checks   = undef,
+  Optional[Boolean]                          $enable_event_handler    = undef,
+  Optional[Boolean]                          $enable_flapping         = undef,
+  Optional[Boolean]                          $enable_perfdata         = undef,
+  Optional[String]                           $event_command           = undef,
+  Optional[Integer[1]]                       $flapping_threshold_low  = undef,
+  Optional[Integer[1]]                       $flapping_threshold_high = undef,
+  Optional[Boolean]                          $volatile                = undef,
+  Optional[String]                           $zone                    = undef,
+  Optional[String]                           $command_endpoint        = undef,
+  Optional[String]                           $notes                   = undef,
+  Optional[String]                           $notes_url               = undef,
+  Optional[String]                           $action_url              = undef,
+  Optional[String]                           $icon_image              = undef,
+  Optional[String]                           $icon_image_alt          = undef,
+  Variant[Boolean, String]                   $apply                   = false,
+  Variant[Boolean, String]                   $prefix                  = false,
+  Array                                      $assign                  = [],
+  Array                                      $ignore                  = [],
+  Array                                      $import                  = [],
+  Boolean                                    $template                = false,
+  Variant[String, Integer]                   $order                   = 60,
 ) {
 
   # compose the attributes
   $attrs = {
-    'display_name'          => $display_name ,
-    'host_name'             => $host_name ,
-    'check_command'         => $check_command ,
-    'check_timeout'         => $check_timeout ,
-    'check_interval'        => $check_interval ,
-    'check_period'          => $check_period ,
-    'retry_interval'        => $retry_interval ,
-    'max_check_attempts'    => $max_check_attempts ,
-    'groups'                => $groups ,
-    'enable_notifications'  => $enable_notifications ,
-    'enable_active_checks'  => $enable_active_checks ,
-    'enable_passive_checks' => $enable_passive_checks ,
-    'enable_event_handler'  => $enable_event_handler ,
-    'enable_flapping'       => $enable_flapping ,
-    'enable_perfdata'       => $enable_perfdata ,
-    'event_command'         => $event_command ,
-    'flapping_threshold'    => $flapping_threshold ,
-    'volatile'              => $volatile ,
-    'zone'                  => $zone ,
-    'command_endpoint'      => $command_endpoint ,
-    'notes'                 => $notes ,
-    'notes_url'             => $notes_url ,
-    'action_url'            => $action_url ,
-    'icon_image'            => $icon_image ,
-    'icon_image_alt'        => $icon_image_alt ,
-    'vars'                  => $vars ,
+    'display_name'            => $display_name,
+    'host_name'               => $host_name,
+    'check_command'           => $check_command,
+    'check_timeout'           => $check_timeout,
+    'check_interval'          => $check_interval,
+    'check_period'            => $check_period,
+    'retry_interval'          => $retry_interval,
+    'max_check_attempts'      => $max_check_attempts,
+    'groups'                  => $groups,
+    'enable_notifications'    => $enable_notifications,
+    'enable_active_checks'    => $enable_active_checks,
+    'enable_passive_checks'   => $enable_passive_checks,
+    'enable_event_handler'    => $enable_event_handler,
+    'enable_flapping'         => $enable_flapping,
+    'enable_perfdata'         => $enable_perfdata,
+    'event_command'           => $event_command,
+    'flapping_threshold_low'  => $flapping_threshold_low,
+    'flapping_threshold_high' => $flapping_threshold_high,
+    'volatile'                => $volatile,
+    'zone'                    => $zone,
+    'command_endpoint'        => $command_endpoint,
+    'notes'                   => $notes,
+    'notes_url'               => $notes_url,
+    'action_url'              => $action_url,
+    'icon_image'              => $icon_image,
+    'icon_image_alt'          => $icon_image_alt,
+    'vars'                    => $vars,
   }
 
   # create object
diff --git a/modules/icinga2/manifests/object/servicegroup.pp b/modules/icinga2/manifests/object/servicegroup.pp
old mode 100755
new mode 100644
index 786f145f..f1e901b6
--- a/modules/icinga2/manifests/object/servicegroup.pp
+++ b/modules/icinga2/manifests/object/servicegroup.pp
@@ -1,43 +1,39 @@
-# == Define: icinga2::object::servicegroup
+# @summary
+#   Manage Icinga 2 servicegroup objects.
 #
-# Manage Icinga 2 servicegroup objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param servicegroup_name
+#   Set the Icinga 2 name of the servicegroup object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*servicegroup_name*]
-#   Set the Icinga 2 name of the servicegroup object. Defaults to title of the define resource.
-#
-# [*display_name*]
+# @param display_name
 #   A short description of the service group.
 #
-# [*groups*]
+# @param groups
 #   An array of nested group names.
 #
-# [*assign*]
+# @param assign
 #   Assign user group members using the group assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Exclude users using the group ignore rules.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 65.
-#
+# @param [Variant[String, Integer]] order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::servicegroup (
-  Stdlib::Absolutepath      $target,
+  Stdlib::Absolutepath          $target,
   Enum['absent', 'present']     $ensure            = present,
   String                        $servicegroup_name = $title,
   Optional[String]              $display_name      = undef,
diff --git a/modules/icinga2/manifests/object/timeperiod.pp b/modules/icinga2/manifests/object/timeperiod.pp
old mode 100755
new mode 100644
index 91a00d81..6e9d95e7
--- a/modules/icinga2/manifests/object/timeperiod.pp
+++ b/modules/icinga2/manifests/object/timeperiod.pp
@@ -1,43 +1,39 @@
-# == Define: icinga2::object::timeperiod
+# @summary
+#   Manage Icinga 2 timeperiod objects.
 #
-# Manage Icinga 2 timeperiod objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param timeperiod_name
+#   Set the Icinga 2 name of the timeperiod object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
+# @param display_name
+#   A short description of the time period.
 #
-# [*timeperiod_name*]
-#   Set the Icinga 2 name of the timeperiod object. Defaults to title of the define resource.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*display_name*]
-# 	A short description of the time period.
-#
-# [*import*]
-#   Sorted List of templates to include. Defaults to [ "legacy-timeperiod" ].
-#
-# [*ranges*]
-# 	A dictionary containing information which days and durations apply to this
+# @param ranges
+#   A dictionary containing information which days and durations apply to this
 #   timeperiod.
 #
-# [*prefer_includes*]
-# 	Boolean whether to prefer timeperiods includes or excludes. Default to true.
+# @param prefer_includes
+#   Boolean whether to prefer timeperiods includes or excludes.
 #
-# [*excludes*]
-# 	An array of timeperiods, which should exclude from your timerange.
+# @param excludes
+#   An array of timeperiods, which should exclude from your timerange.
 #
-# [*includes*]
-# 	An array of timeperiods, which should include into your timerange
+# @param includes
+#   An array of timeperiods, which should include into your timerange
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*target*]
+# @param target
 #   Destination config file to store this object in. File will be declared on the first run.
 #
-# [*order*]
-#   String or integer to control the position in the target file, sorted alpha numeric. Defaults to 35.
-#
+# @param order
+#   String or integer to control the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::timeperiod (
   Stdlib::Absolutepath         $target,
diff --git a/modules/icinga2/manifests/object/user.pp b/modules/icinga2/manifests/object/user.pp
old mode 100755
new mode 100644
index 48be0009..8f83c57c
--- a/modules/icinga2/manifests/object/user.pp
+++ b/modules/icinga2/manifests/object/user.pp
@@ -1,59 +1,55 @@
-# == Define: icinga2::object::user
+# @summary
+#   Manage Icinga 2 user objects.
 #
-# Manage Icinga 2 user objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param user_name
+#   Set the Icinga 2 name of the user object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*user_name*]
-#   Set the Icinga 2 name of the user object. Defaults to title of the define resource.
-#
-# [*display_name*]
+# @param display_name
 #   A short description of the user.
 #
-# [*email*]
+# @param email
 #   An email string for this user. Useful for notification commands.
 #
-# [*pager*]
+# @param pager
 #   A pager string for this user. Useful for notification commands.
 #
-# [*vars*]
-#   A dictionary containing custom attributes that are specific to this user
-#   or a string to do operations on this dictionary.
+# @param vars
+#   A dictionary containing custom attributes that are specific to this service,
+#   a string to do operations on this dictionary or an array for multiple use
+#   of custom attributes.
 #
-# [*groups*]
+# @param groups
 #   An array of group names.
 #
-# [*enable_notifications*]
+# @param enable_notifications
 #   Whether notifications are enabled for this user.
 #
-# [*period*]
+# @param period
 #   The name of a time period which determines when a notification for this user
-#   should be triggered. Not set by default.
+#   should be triggered.
 #
-# [*types*]
-#   A set of type filters when this notification should be triggered. By default
+# @param types
+#   A set of type filters when this notification should be triggered.
 #   everything is matched.
 #
-# [*states*]
-#   A set of state filters when this notification should be triggered. By
-#   default everything is matched.
+# @param states
+#   A set of state filters when this notification should be triggered.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 75.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::user (
   Stdlib::Absolutepath                $target,
@@ -62,7 +58,7 @@ define icinga2::object::user (
   Optional[String]                    $display_name         = undef,
   Optional[String]                    $email                = undef,
   Optional[String]                    $pager                = undef,
-  Optional[Variant[String, Hash]]     $vars                 = undef,
+  Optional[Icinga2::CustomAttributes] $vars                 = undef,
   Optional[Array]                     $groups               = undef,
   Optional[Boolean]                   $enable_notifications = undef,
   Optional[String]                    $period               = undef,
diff --git a/modules/icinga2/manifests/object/usergroup.pp b/modules/icinga2/manifests/object/usergroup.pp
old mode 100755
new mode 100644
index 8b3bedb0..e3f2c158
--- a/modules/icinga2/manifests/object/usergroup.pp
+++ b/modules/icinga2/manifests/object/usergroup.pp
@@ -1,52 +1,48 @@
-# == Define: icinga2::object::usergroup
+# @summary
+#   Manage Icinga 2 usergroup objects.
 #
-# Manage Icinga 2 usergroup objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param usergroup_name
+#   Set the Icinga 2 name of the usergroup object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*usergroup_name*]
-#   Set the Icinga 2 name of the usergroup object. Defaults to title of the define resource.
-#
-# [*display_name*]
+# @param display_name
 #   A short description of the service group.
 #
-# [*groups*]
+# @param groups
 #   An array of nested group names.
 #
-# [*assign*]
+# @param assign
 #   Assign user group members using the group assign rules.
 #
-# [*ignore*]
+# @param ignore
 #   Exclude users using the group ignore rules.
 #
-# [*template*]
-#   Set to true creates a template instead of an object. Defaults to false.
+# @param template
+#   Set to true creates a template instead of an object.
 #
-# [*import*]
-#   Sorted List of templates to include. Defaults to an empty list.
+# @param import
+#   Sorted List of templates to include.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared the
 #   first time.
 #
-# [*order*]
-#   String or integer to set the position in the target file, sorted alpha numeric. Defaults to 80.
-#
+# @param order
+#   String or integer to set the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::usergroup (
-  Stdlib::Absolutepath         $target,
-  Enum['absent', 'present']    $ensure         = present,
-  String                       $usergroup_name = $title,
-  Optional[String]             $display_name   = undef,
-  Array                        $groups         = [],
-  Array                        $assign         = [],
-  Array                        $ignore         = [],
-  Array                        $import         = [],
-  Boolean                      $template       = false,
-  Variant[String, Integer]     $order          = 80,
+  Stdlib::Absolutepath        $target,
+  Enum['absent', 'present']   $ensure         = present,
+  String                      $usergroup_name = $title,
+  Optional[String]            $display_name   = undef,
+  Array                       $groups         = [],
+  Array                       $assign         = [],
+  Array                       $ignore         = [],
+  Array                       $import         = [],
+  Boolean                     $template       = false,
+  Variant[String, Integer]    $order          = 80,
 ){
 
   if $ignore != [] and $assign == [] {
diff --git a/modules/icinga2/manifests/object/zone.pp b/modules/icinga2/manifests/object/zone.pp
old mode 100755
new mode 100644
index 2222a87a..65ffbe72
--- a/modules/icinga2/manifests/object/zone.pp
+++ b/modules/icinga2/manifests/object/zone.pp
@@ -1,32 +1,28 @@
-# == Define: icinga2::object::zone
+# @summary
+#   Manage Icinga 2 zone objects.
 #
-# Manage Icinga 2 zone objects.
+# @param ensure
+#   Set to present enables the object, absent disables it.
 #
-# === Parameters
+# @param zone_name
+#   Set the Icinga 2 name of the zone object.
 #
-# [*ensure*]
-#   Set to present enables the object, absent disables it. Defaults to present.
-#
-# [*zone_name*]
-#   Set the Icinga 2 name of the zone object. Defaults to title of the define resource.
-#
-# [*endpoints*]
+# @param endpoints
 #   List of endpoints belong to this zone.
 #
-# [*parent*]
+# @param parent
 #   Parent zone to this zone.
 #
-# [*global*]
+# @param global
 #   If set to true, a global zone is defined and the parameter endpoints
-#   and parent are ignored. Defaults to false.
+#   and parent are ignored.
 #
-# [*target*]
+# @param target
 #   Destination config file to store in this object. File will be declared at the
 #   first time.
 #
-# [*order*]
-#   String or integer to control the position in the target file, sorted alpha numeric. Defaults to 45.
-#
+# @param order
+#   String or integer to control the position in the target file, sorted alpha numeric.
 #
 define icinga2::object::zone(
   Enum['absent', 'present']          $ensure    = present,
diff --git a/modules/icinga2/manifests/pki/ca.pp b/modules/icinga2/manifests/pki/ca.pp
old mode 100755
new mode 100644
index 20f9415b..08a38781
--- a/modules/icinga2/manifests/pki/ca.pp
+++ b/modules/icinga2/manifests/pki/ca.pp
@@ -1,37 +1,25 @@
-# == Class: icinga2::pki::ca
+# @summary
+#   This class provides multiple ways to create the CA used by Icinga 2.
 #
-# This class provides multiple ways to create the CA used by Icinga 2. By default it will create
-# a CA by using the icinga2 CLI. If you want to use your own CA you will either have to transfer
-# it by using a file resource or you can set the content of your certificat and key in this class.
+# @example Let Icinga 2 generate a CA for you:
+#   include icinga2
+#   include icinga2::pki::ca
 #
-# The certificate of the icinga2 instance itself will be created, is signed by the new CA and
-# has the CN based on the constant NodeName.
+# @example Set the content of CA certificate and key:
+#   include icinga2
 #
-# === Parameters
+#   class { 'icinga2::pki::ca':
+#     ca_cert => '-----BEGIN CERTIFICATE----- ...',
+#     ca_key  => '-----BEGIN RSA PRIVATE KEY----- ...',
+#   }
 #
-# [*ca_cert*]
+# @param ca_cert
 #   Content of the CA certificate. If this is unset, a certificate will be generated with the
 #   Icinga 2 CLI.
 #
-# [*ca_key*]
+# @param ca_key
 #   Content of the CA key. If this is unset, a key will be generated with the Icinga 2 CLI.
 #
-# === Examples
-#
-# Let Icinga 2 generate a CA for you:
-#
-# include icinga2
-# class { 'icinga2::pki::ca': }
-#
-# Set the content of CA certificate and key:
-#
-# include icinga2
-# class { 'icinga2::pki::ca':
-#   ca_cert => '-----BEGIN CERTIFICATE----- ...',
-#   ca_key  => '-----BEGIN RSA PRIVATE KEY----- ...',
-# }
-#
-#
 class icinga2::pki::ca(
   Optional[String]               $ca_cert         = undef,
   Optional[String]               $ca_key          = undef,
@@ -46,29 +34,43 @@ class icinga2::pki::ca(
   $group       = $::icinga2::globals::group
   $node_name   = $::icinga2::_constants['NodeName']
 
-  $_ssl_key_path    = "${::icinga2::globals::cert_dir}/${node_name}.key"
-  $_ssl_csr_path    = "${::icinga2::globals::cert_dir}/${node_name}.csr"
-  $_ssl_cert_path   = "${::icinga2::globals::cert_dir}/${node_name}.crt"
-  $_ssl_cacert_path = "${::icinga2::globals::cert_dir}/ca.crt"
+  $_ssl_key_path    = "${cert_dir}/${node_name}.key"
+  $_ssl_csr_path    = "${cert_dir}/${node_name}.csr"
+  $_ssl_cert_path   = "${cert_dir}/${node_name}.crt"
+  $_ssl_cacert_path = "${cert_dir}/ca.crt"
 
   File {
     owner => $user,
     group => $group,
   }
 
-  $_ca_key_mode = undef
+  if $::facts['os']['family'] != 'windows' {
+    $_ca_key_mode = '0600'
+  } else {
+    $_ca_key_mode = undef
+  }
 
 
   if !$ca_cert or !$ca_key {
     exec { 'create-icinga2-ca':
-      command => "${icinga2_bin} pki new-ca",
-      creates => "${ca_dir}/ca.crt",
-      before  => File[$_ssl_cacert_path],
-      notify  => Class['::icinga2::service'],
+      command     => "\"${icinga2_bin}\" pki new-ca",
+      environment => ["ICINGA2_USER=${user}", "ICINGA2_GROUP=${group}"],
+      creates     => "${ca_dir}/ca.crt",
+      before      => File[$_ssl_cacert_path],
+      notify      => Class['::icinga2::service'],
     }
   } else {
-    $_ca_cert     = $ca_cert
-    $_ca_key      = $ca_key
+    if $::facts['os']['family'] == 'windows' {
+      $_ca_cert     = regsubst($ca_cert, '\n', "\r\n", 'EMG')
+      $_ca_key      = regsubst($ca_key, '\n', "\r\n", 'EMG')
+    } else {
+      $_ca_cert     = $ca_cert
+      $_ca_key      = $ca_key
+    }
+
+    file { $ca_dir:
+      ensure => directory,
+    }
 
     file { "${ca_dir}/ca.crt":
       ensure  => file,
@@ -78,31 +80,40 @@ class icinga2::pki::ca(
     }
 
     file { "${ca_dir}/ca.key":
-      ensure  => file,
-      mode    => $_ca_key_mode,
-      content => $_ca_key,
-      tag     => 'icinga2::config::file',
+      ensure    => file,
+      mode      => $_ca_key_mode,
+      content   => $_ca_key,
+      tag       => 'icinga2::config::file',
+      show_diff => false,
+      backup    => false,
     }
   }
 
   file { $_ssl_cacert_path:
     ensure => file,
-    source => "${ca_dir}/ca.crt",
+    source => $::facts['kernel'] ? {
+      'windows' => "file:///${ca_dir}/ca.crt",
+      default   => "${ca_dir}/ca.crt",
+    },
   }
 
   exec { 'icinga2 pki create certificate signing request':
-    command => "${icinga2_bin} pki new-cert --cn ${node_name} --key ${_ssl_key_path} --csr ${_ssl_csr_path}",
-    creates => $_ssl_key_path,
-    require => File[$_ssl_cacert_path],
+    command     => "\"${icinga2_bin}\" pki new-cert --cn ${node_name} --key ${_ssl_key_path} --csr ${_ssl_csr_path}",
+    environment => ["ICINGA2_USER=${user}", "ICINGA2_GROUP=${group}"],
+    creates     => $_ssl_key_path,
+    require     => File[$_ssl_cacert_path],
   }
 
   -> file { $_ssl_key_path:
-    ensure => file,
-    mode   => $_ca_key_mode,
+    ensure    => file,
+    mode      => $_ca_key_mode,
+    show_diff => false,
+    backup    => false,
   }
 
   exec { 'icinga2 pki sign certificate':
-    command     => "${icinga2_bin} pki sign-csr --csr ${_ssl_csr_path} --cert ${_ssl_cert_path}",
+    command     => "\"${icinga2_bin}\" pki sign-csr --csr ${_ssl_csr_path} --cert ${_ssl_cert_path}",
+    environment => ["ICINGA2_USER=${user}", "ICINGA2_GROUP=${group}"],
     subscribe   => Exec['icinga2 pki create certificate signing request'],
     refreshonly => true,
     notify      => Class['::icinga2::service'],
diff --git a/modules/icinga2/manifests/repo.pp b/modules/icinga2/manifests/repo.pp
deleted file mode 100755
index e869a11f..00000000
--- a/modules/icinga2/manifests/repo.pp
+++ /dev/null
@@ -1,45 +0,0 @@
-# == Class: icinga2::repo
-#
-# This class manages the packages.icinga.com repository based on the operating system. Windows is not supported, as the
-# Icinga Project does not offer a chocolate repository.
-#
-# === Parameters
-#
-# This class does not provide any parameters.
-# To control the behaviour of this class, have a look at the parameters:
-# * icinga2::manage_repo
-#
-# === Examples
-#
-# This class is private and should not be called by others than this module.
-#
-#
-class icinga2::repo {
-
-  assert_private()
-
-  if $::icinga2::manage_repo and $::icinga2::manage_package {
-    $repo =  lookup('icinga2::repo', Hash, 'deep', {})
-
-    # handle icinga stable repo before all package resources
-    # contain class problem!
-    Apt::Source['icinga-stable-release'] -> Package <| tag == 'icinga2' |>
-    Class['Apt::Update'] -> Package<|tag == 'icinga2'|>
-
-    include ::apt
-
-    $http_proxy = lookup('http_proxy', {'default_value' => undef})
-    if $http_proxy {
-        file { '/etc/apt/apt.conf.d/01icinga':
-            ensure => present,
-            content => template('icinga2/apt/01icinga.erb'),
-            before  => Apt::Source['icinga-stable-release'],
-        }
-    }
-
-    apt::source { 'icinga-stable-release':
-      * => $repo,
-    }
-  } # if $::icinga::manage_repo
-
-}
diff --git a/modules/icinga2/manifests/service.pp b/modules/icinga2/manifests/service.pp
old mode 100755
new mode 100644
index ca5f0ae8..d9cb3e33
--- a/modules/icinga2/manifests/service.pp
+++ b/modules/icinga2/manifests/service.pp
@@ -1,18 +1,8 @@
-# == Class: icinga2::service
-#
-# This class handles the Icinga 2 service. By default the service will start on boot and will be restarted if stopped.
-#
-# === Parameters
-#
-# This class does not provide any parameters.
-# To control the behaviour of this class, have a look at the parameters:
-# * icinga2::ensure
-# * icinga2::enable
-#
-# === Examples
-#
-# This class is private and should not be called by others than this module.
+# @summary
+#   This class handles the Icinga 2 service. By default the service will
+#   start on boot and will be restarted if stopped.
 #
+# @api private
 #
 class icinga2::service {
 
@@ -23,17 +13,29 @@ class icinga2::service {
   $manage_service = $::icinga2::manage_service
   $service_name   = $::icinga2::globals::service_name
   $reload         = $::icinga2::globals::service_reload
+  $logon_account  = $::icinga2::globals::logon_account
+
   $hasrestart     = $reload ? {
     undef   => false,
     default => true,
   }
 
   if $manage_service {
-    service { $service_name:
-      ensure     => $ensure,
-      enable     => $enable,
-      hasrestart => $hasrestart,
-      restart    => $reload,
+    if $facts['os']['kernel'] == 'windows' and versioncmp($::facts['puppetversion'], '6.18.0') >= 0 {
+      service { $service_name:
+        ensure       => $ensure,
+        enable       => $enable,
+        hasrestart   => $hasrestart,
+        restart      => $reload,
+        logonaccount => $logon_account,
+      }
+    } else {
+      service { $service_name:
+        ensure     => $ensure,
+        enable     => $enable,
+        hasrestart => $hasrestart,
+        restart    => $reload,
+      }
     }
   }
 
diff --git a/modules/icinga2/metadata.json b/modules/icinga2/metadata.json
old mode 100755
new mode 100644
index 7b1b5251..b495560e
--- a/modules/icinga2/metadata.json
+++ b/modules/icinga2/metadata.json
@@ -1,88 +1,119 @@
 {
   "name": "icinga-icinga2",
-  "version": "2.0.1",
+  "version": "3.4.0",
   "author": "Icinga Development Team",
   "summary": "Icinga 2 Puppet Module",
   "license": "Apache-2.0",
   "source": "git://github.com/icinga/puppet-icinga2",
   "project_page": "https://github.com/icinga/puppet-icinga2",
   "issues_url": "https://github.com/icinga/puppet-icinga2/issues",
-  "tags": ["monitoring"],
-  "requirements": [
-    { "name": "puppet", "version_requirement": ">= 4.10.0 < 7.0.0" }
-  ],
   "dependencies": [
-    { "name": "puppetlabs/stdlib", "version_requirement": ">= 4.16.0 < 6.0.0" },
-    { "name": "puppetlabs/concat", "version_requirement": ">= 2.1.0 < 6.0.0" }
+    {
+      "name": "puppetlabs/stdlib",
+      "version_requirement": ">= 5.0.0 < 9.0.0"
+    },
+    {
+      "name": "puppetlabs/concat",
+      "version_requirement": ">= 2.1.0 < 8.0.0"
+    }
   ],
   "operatingsystem_support": [
     {
       "operatingsystem": "Windows",
       "operatingsystemrelease": [
-        "Server 2012",
         "Server 2012 R2",
-        "Server 2016"
+        "Server 2016",
+        "Server 2019"
       ]
     },
     {
       "operatingsystem": "CentOS",
       "operatingsystemrelease": [
         "6",
-        "7"
+        "7",
+        "8"
       ]
     },
     {
       "operatingsystem": "RedHat",
       "operatingsystemrelease": [
         "6",
-        "7"
+        "7",
+        "8"
       ]
     },
     {
       "operatingsystem": "OracleLinux",
       "operatingsystemrelease": [
         "6",
-        "7"
+        "7",
+        "8"
+      ]
+    },
+    {
+      "operatingsystem": "Rocky",
+      "operatingsystemrelease": [
+        "8"
+      ]
+    },
+    {
+      "operatingsystem": "AlmaLinux",
+      "operatingsystemrelease": [
+        "8"
       ]
     },
     {
       "operatingsystem": "Fedora",
       "operatingsystemrelease": [
-        "25",
-        "26",
-        "27",
-        "28",
-        "29"
+        "32",
+        "33",
+        "34",
+        "35"
       ]
     },
     {
       "operatingsystem": "Debian",
       "operatingsystemrelease": [
-        "7",
         "8",
-        "9"
+        "9",
+        "10",
+        "11"
       ]
     },
     {
       "operatingsystem": "Ubuntu",
       "operatingsystemrelease": [
-        "14.04",
         "16.04",
-        "18.04"
+        "18.04",
+        "20.04"
       ]
     },
     {
       "operatingsystem": "SLES",
       "operatingsystemrelease": [
-        "12"
+        "12",
+        "15"
       ]
     },
     {
       "operatingsystem": "FreeBSD",
       "operatingsystemrelease": [
         "11",
-        "10"
+        "12",
+        "13"
       ]
     }
-  ]
+  ],
+  "requirements": [
+    {
+      "name": "puppet",
+      "version_requirement": ">= 4.12.0 < 8.0.0"
+    }
+  ],
+  "tags": [
+    "monitoring"
+  ],
+  "pdk-version": "2.4.0",
+  "template-url": "pdk-default#2.4.0",
+  "template-ref": "tags/2.4.0-0-gfa6b6d2"
 }
diff --git a/modules/icinga2/spec/acceptance/class_spec.rb b/modules/icinga2/spec/acceptance/class_spec.rb
old mode 100755
new mode 100644
index 155fd717..1d11f6ff
--- a/modules/icinga2/spec/acceptance/class_spec.rb
+++ b/modules/icinga2/spec/acceptance/class_spec.rb
@@ -1,13 +1,32 @@
 require 'spec_helper_acceptance'
 
 describe 'icinga2 class' do
-
   describe 'with API, IDO mysql and pgsql' do
     let(:pp) do
       <<-MANIFEST
+        case $::facts['os']['name'] {
+          'redhat', 'centos': {
+            if Integer($::facts['os']['release']['major']) < 8 {
+              $epel      = true
+              $backports = false
+            }
+          } # RedHat
+          'debian', 'ubuntu': {
+            if $::facts['os']['distro']['codename'] in [ 'stretch', 'trusty' ] {
+              $epel      = false
+              $backports = true
+            }
+          } # Debian
+        }
+
+        class { '::icinga::repos':
+          manage_epel         => $epel,
+          configure_backports => $backports,
+        }
+
         class { 'icinga2':
-          manage_repo => true,
-          constants   => {
+          manage_repos => true,
+          constants    => {
             'TicketSalt' => 'topsecret4ticketid',
           },
         }
@@ -25,7 +44,7 @@ describe 'icinga2 class' do
           password      => 'topsecret4idomysql',
           database      => 'icinga2',
           import_schema => true,
-        } 
+        }
         include ::postgresql::server
         postgresql::server::db { 'icinga2':
           user     => 'icinga2',
@@ -46,7 +65,7 @@ describe 'icinga2 class' do
           ensure      => present,
           password    => 'topsecret4ticketid',
           permissions => [ 'actions/generate-ticket' ],
-          target      => '/etc/icinga2/conf.d/api-users.conf',          
+          target      => '/etc/icinga2/conf.d/api-users.conf',
         }
       MANIFEST
     end
@@ -58,8 +77,11 @@ describe 'icinga2 class' do
     end
 
     describe service('icinga2') do
-      it { should be_enabled }
-      it { should be_running }
+      it { is_expected.to be_running }
+    end
+
+    describe port(5665) do
+      it { is_expected.to be_listening }
     end
 
     describe command("mysql icinga2 -Ns -e 'select version from icinga_dbversion;'") do
@@ -77,5 +99,4 @@ describe 'icinga2 class' do
       its(:stdout) { is_expected.to match %r{e1cfea2cff7bc91bd9be1f0f02ef40a0e5233c2e} }
     end
   end
-
 end
diff --git a/modules/icinga2/spec/acceptance/nodesets/centos-6-x64.yml b/modules/icinga2/spec/acceptance/nodesets/centos-6-x64.yml
old mode 100755
new mode 100644
diff --git a/modules/icinga2/spec/acceptance/nodesets/default.yml b/modules/icinga2/spec/acceptance/nodesets/default.yml
old mode 100755
new mode 100644
diff --git a/modules/icinga2/spec/classes/api_spec.rb b/modules/icinga2/spec/classes/api_spec.rb
old mode 100755
new mode 100644
index 16c95630..37e3304a
--- a/modules/icinga2/spec/classes/api_spec.rb
+++ b/modules/icinga2/spec/classes/api_spec.rb
@@ -1,72 +1,72 @@
 require 'spec_helper'
 
-describe('icinga2::feature::api', :type => :class) do
+describe('icinga2::feature::api', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }"
+      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }",
     ]
   end
 
-
   on_supported_os.each do |os, facts|
     context "on #{os}" do
-
       let(:facts) do
         case facts[:kernel]
         when 'windows'
-          facts.merge({
-            :icinga2_puppet_hostcert => 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => 'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => 'C:/ProgramData/PuppetLabs/var/lib/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey: 'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: 'C:/ProgramData/PuppetLabs/var/lib/puppet/ssl/certs/ca.pem',
+            },
+          )
         else
-          facts.merge({
-            :icinga2_puppet_hostcert => '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey: '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
+            },
+          )
         end
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_bin = 'C:/Program Files/icinga2/sbin/icinga2.exe'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_bin = '/usr/local/sbin/icinga2'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_bin) { 'C:/Program Files/icinga2/sbin/icinga2.exe' }
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_bin) { '/usr/local/sbin/icinga2' }
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
+          let(:icinga2_bin) { '/usr/sbin/icinga2' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = '0600'
-          case facts[:osfamily]
-          when 'Debian'
-            @icinga2_user = 'nagios'
-            @icinga2_group = 'nagios'
-            @icinga2_bin = '/usr/sbin/icinga2'
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
+          if facts[:os]['family'] != 'RedHat'
+            let(:icinga2_bin) { '/usr/sbin/icinga2' }
           else
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-            if facts[:osfamily] != 'RedHat'
-              @icinga2_bin = '/usr/sbin/icinga2'
+            case facts[:os]['release']['major']
+            when '5'
+              let(:icinga2_bin) { '/usr/sbin/icinga2' }
+            when '6'
+              let(:icinga2_bin) { '/usr/sbin/icinga2' }
             else
-              case facts[:operatingsystemmajrelease]
-              when '5'
-                @icinga2_bin = '/usr/sbin/icinga2'
-              when '6'
-                @icinga2_bin = '/usr/sbin/icinga2'
-              else
-                @icinga2_bin = '/sbin/icinga2'
-              end
+              let(:icinga2_bin) { '/sbin/icinga2' }
             end
           end
         end
@@ -75,147 +75,194 @@ describe('icinga2::feature::api', :type => :class) do
       context "with pki => 'puppet'" do
         let(:params) do
           {
-            :ensure => 'present',
-            :pki    => 'puppet'
+            ensure: 'present',
+            pki: 'puppet',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('api').with({
-          'ensure' => 'present'
-        }) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::ApiListener::api')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/api.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.key")
-         .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'mode'   => @icinga2_sslkey_mode, }) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.crt")
-         .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, }) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ca.crt")
-         .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, }) }
+        it { is_expected.to contain_icinga2__feature('api').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::ApiListener::api').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/api.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.key").with(
+            {
+              'ensure'    => 'file',
+              'owner'     => icinga2_user,
+              'group'     => icinga2_group,
+              'mode'      => icinga2_sslkey_mode,
+              'show_diff' => false,
+              'backup'    => false,
+            },
+          )
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.crt").with(
+            {
+              'ensure' => 'file',
+              'owner'  => icinga2_user,
+              'group'  => icinga2_group,
+            },
+          )
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ca.crt").with(
+            {
+              'ensure' => 'file',
+              'owner'  => icinga2_user,
+              'group'  => icinga2_group,
+            },
+          )
+        }
 
         it { is_expected.to contain_icinga2__object__endpoint('NodeName') }
 
-        it { is_expected.to contain_icinga2__object__zone('ZoneName')
-          .with({ 'endpoints' => [ 'NodeName' ] }) }
+        it { is_expected.to contain_icinga2__object__zone('ZoneName').with({ 'endpoints' => [ 'NodeName' ] }) }
       end
 
       context "with ensure => absent, pki => 'puppet'" do
         let(:params) do
           {
-            :ensure => 'absent',
-            :pki    => 'puppet'
+            ensure: 'absent',
+            pki: 'puppet',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('api').with({
-          'ensure' => 'absent', }) }
+        it { is_expected.to contain_icinga2__feature('api').with({ 'ensure' => 'absent' }) }
       end
 
       context "with pki => 'none', ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
         let(:params) do
           {
-            :pki        => 'none',
-            :ssl_key    => 'foo',
-            :ssl_cert   => 'bar',
-            :ssl_cacert => 'baz'
+            pki: 'none',
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.key")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'mode'   => @icinga2_sslkey_mode, })
-          .with_content(/^foo$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.crt")
-         .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, })
-          .with_content(/^bar$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ca.crt")
-         .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, })
-          .with_content(/^baz$/) }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.key").with(
+            {
+              'ensure' => 'file',
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+              'mode' => icinga2_sslkey_mode,
+              'show_diff' => false,
+              'backup' => false,
+            },
+          ).with_content(%r{^foo$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.crt").with(
+            {
+              'ensure' => 'file',
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ca.crt").with(
+            {
+              'ensure' => 'file',
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
       end
 
       context "with pki => 'icinga2', ca_host => 'foo', ca_port => 1234, ticket_salt => 'bar'" do
         let(:params) do
           {
-            :pki         => 'icinga2',
-            :ca_host     => 'foo',
-            :ca_port     => 1234,
-            :ticket_salt => 'bar'
+            pki: 'icinga2',
+            ca_host: 'foo',
+            ca_port: 1234,
+            ticket_salt: 'bar',
           }
         end
 
-        it { is_expected.to contain_exec('icinga2 pki create key')
-          .with({
-            'command' => "#{@icinga2_bin} pki new-cert --cn host.example.org --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt",
-            'creates' => "#{@icinga2_pki_dir}/host.example.org.key", })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_exec('icinga2 pki get trusted-cert')
-          .with({
-            'command' => "#{@icinga2_bin} pki save-cert --host foo --port 1234 --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt --trustedcert #{@icinga2_pki_dir}/trusted-cert.crt",
-            'creates' => "#{@icinga2_pki_dir}/trusted-cert.crt", })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_exec('icinga2 pki request')
-          .with({
-            'command' => "#{@icinga2_bin} pki request --host foo --port 1234 --ca #{@icinga2_pki_dir}/ca.crt --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt --trustedcert #{@icinga2_pki_dir}/trusted-cert.crt --ticket ac5cb0d8c98f3f50ceff399b3cfedbb03782c117",
-            'creates' => "#{@icinga2_pki_dir}/ca.crt", })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_exec('icinga2 pki create key').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki new-cert --cn host.example.org --key #{icinga2_pki_dir}/host.example.org.key" \
+                " --cert #{icinga2_pki_dir}/host.example.org.crt",
+              'creates' => "#{icinga2_pki_dir}/host.example.org.key",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_exec('icinga2 pki get trusted-cert').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki save-cert --host foo --port 1234 --key #{icinga2_pki_dir}/host.example.org.key" \
+                " --cert #{icinga2_pki_dir}/host.example.org.crt --trustedcert #{icinga2_pki_dir}/trusted-cert.crt",
+              'creates' => "#{icinga2_pki_dir}/trusted-cert.crt",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_exec('icinga2 pki request').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki request --host foo --port 1234 --ca #{icinga2_pki_dir}/ca.crt" \
+                " --key #{icinga2_pki_dir}/host.example.org.key --cert #{icinga2_pki_dir}/host.example.org.crt --trustedcert #{icinga2_pki_dir}/trusted-cert.crt" \
+                ' --ticket ac5cb0d8c98f3f50ceff399b3cfedbb03782c117',
+              'creates' => "#{icinga2_pki_dir}/ca.crt",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
       end
 
       context "with pki => 'icinga2', ca_host => 'foo', ca_port => 1234, ticket_id => 'bar'" do
         let(:params) do
           {
-            :pki       => 'icinga2',
-            :ca_host   => 'foo',
-            :ca_port   => 1234,
-            :ticket_id => 'bar'
+            pki: 'icinga2',
+            ca_host: 'foo',
+            ca_port: 1234,
+            ticket_id: 'bar',
           }
         end
 
-        it { is_expected.to contain_exec('icinga2 pki create key')
-          .with({
-            'command' => "#{@icinga2_bin} pki new-cert --cn host.example.org --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt",
-            'creates' => "#{@icinga2_pki_dir}/host.example.org.key", })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_exec('icinga2 pki get trusted-cert')
-          .with({
-            'command' => "#{@icinga2_bin} pki save-cert --host foo --port 1234 --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt --trustedcert #{@icinga2_pki_dir}/trusted-cert.crt",
-            'creates' => "#{@icinga2_pki_dir}/trusted-cert.crt", })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_exec('icinga2 pki request')
-          .with({
-            'command' => "#{@icinga2_bin} pki request --host foo --port 1234 --ca #{@icinga2_pki_dir}/ca.crt --key #{@icinga2_pki_dir}/host.example.org.key --cert #{@icinga2_pki_dir}/host.example.org.crt --trustedcert #{@icinga2_pki_dir}/trusted-cert.crt --ticket bar",
-            'creates' => "#{@icinga2_pki_dir}/ca.crt", })
-          .that_notifies('Class[icinga2::service]') }
-      end
+        it {
+          is_expected.to contain_exec('icinga2 pki create key').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki new-cert --cn host.example.org --key #{icinga2_pki_dir}/host.example.org.key" \
+                " --cert #{icinga2_pki_dir}/host.example.org.crt",
+              'creates' => "#{icinga2_pki_dir}/host.example.org.key",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_exec('icinga2 pki get trusted-cert').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki save-cert --host foo --port 1234 --key #{icinga2_pki_dir}/host.example.org.key" \
+                " --cert #{icinga2_pki_dir}/host.example.org.crt --trustedcert #{icinga2_pki_dir}/trusted-cert.crt",
+              'creates' => "#{icinga2_pki_dir}/trusted-cert.crt",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
 
+        it {
+          is_expected.to contain_exec('icinga2 pki request').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki request --host foo --port 1234 --ca #{icinga2_pki_dir}/ca.crt --key #{icinga2_pki_dir}/host.example.org.key" \
+                " --cert #{icinga2_pki_dir}/host.example.org.crt --trustedcert #{icinga2_pki_dir}/trusted-cert.crt --ticket bar",
+              'creates' => "#{icinga2_pki_dir}/ca.crt",
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
+      end
     end
   end
 end
diff --git a/modules/icinga2/spec/classes/checker_spec.rb b/modules/icinga2/spec/classes/checker_spec.rb
old mode 100755
new mode 100644
index 29fe2e94..961a9848
--- a/modules/icinga2/spec/classes/checker_spec.rb
+++ b/modules/icinga2/spec/classes/checker_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::checker', :type => :class) do
+describe('icinga2::feature::checker', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,43 +13,43 @@ describe('icinga2::feature::checker', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('checker').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::CheckerComponent::checker')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/checker.conf", })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::checker')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/checker.conf",
-            'order'  => '05', })
-          .with_content(/library \"checker\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('checker').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::CheckerComponent::checker').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/checker.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::checker').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/checker.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"checker\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('checker')
-          .with({ 'ensure' => 'absent' }) }
+        it { is_expected.to contain_icinga2__feature('checker').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/command_spec.rb b/modules/icinga2/spec/classes/command_spec.rb
old mode 100755
new mode 100644
index d9f56e9a..f0d38fea
--- a/modules/icinga2/spec/classes/command_spec.rb
+++ b/modules/icinga2/spec/classes/command_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::command', :type => :class) do
+describe('icinga2::feature::command', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,48 +13,49 @@ describe('icinga2::feature::command', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
+      context 'with defaults' do
         let(:params) do
           {
-            :ensure => 'present'
+            ensure: 'present',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('command').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::ExternalCommandListener::command')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/command.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::command')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/command.conf",
-            'order'  => '05', })
-          .with_content(/library \"compat\"$/) }
+        it { is_expected.to contain_icinga2__feature('command').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::ExternalCommandListener::command').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/command.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::command').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/command.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"compat\"$})
+        }
       end
 
-
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('command').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('command').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/compatlog_spec.rb b/modules/icinga2/spec/classes/compatlog_spec.rb
old mode 100755
new mode 100644
index 9b6f5ab7..b172c546
--- a/modules/icinga2/spec/classes/compatlog_spec.rb
+++ b/modules/icinga2/spec/classes/compatlog_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::compatlog', :type => :class) do
+describe('icinga2::feature::compatlog', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::compatlog', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('compatlog').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::CompatLogger::compatlog')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/compatlog.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::compatlog')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/compatlog.conf",
-            'order'  => '05', })
-          .with_content(/library \"compat\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('compatlog').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::CompatLogger::compatlog').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/compatlog.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::compatlog').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/compatlog.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"compat\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('compatlog').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('compatlog').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/debuglog_spec.rb b/modules/icinga2/spec/classes/debuglog_spec.rb
old mode 100755
new mode 100644
index 179cc3cc..3f566e56
--- a/modules/icinga2/spec/classes/debuglog_spec.rb
+++ b/modules/icinga2/spec/classes/debuglog_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::debuglog', :type => :class) do
+describe('icinga2::feature::debuglog', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [], }",
     ]
   end
 
@@ -13,48 +13,49 @@ describe('icinga2::feature::debuglog', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('debuglog').with({'ensure' => 'present'}) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('debuglog').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::FileLogger::debuglog')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/debuglog.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::FileLogger::debuglog').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/debuglog.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
 
-        case facts[:osfamily]
+        case facts[:os]['family']
         when 'windows'
-          it { is_expected.to contain_concat__fragment('icinga2::object::FileLogger::debuglog')
-            .with({
-              'target' => "#{@icinga2_conf_dir}/features-available/debuglog.conf", })
-            .with_content(/path = \"C:\/ProgramData\/icinga2\/var\/log\/icinga2\/debug.log\"/) }
+          it {
+            is_expected.to contain_concat__fragment('icinga2::object::FileLogger::debuglog').with(
+              { 'target' => "#{icinga2_conf_dir}/features-available/debuglog.conf" },
+            ).with_content(%r{path = \"C:\/ProgramData\/icinga2\/var\/log\/icinga2\/debug.log\"})
+          }
         else
-          it { is_expected.to contain_concat__fragment('icinga2::object::FileLogger::debuglog')
-            .with({
-              'target' => "#{@icinga2_conf_dir}/features-available/debuglog.conf", })
-            .with_content(/path = \"\/var\/log\/icinga2\/debug.log\"/) }
+          it {
+            is_expected.to contain_concat__fragment('icinga2::object::FileLogger::debuglog').with(
+              { 'target' => "#{icinga2_conf_dir}/features-available/debuglog.conf" },
+            ).with_content(%r{path = \"\/var\/log\/icinga2\/debug.log\"})
+          }
         end
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('debuglog').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('debuglog').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/elasticsearch_spec.rb b/modules/icinga2/spec/classes/elasticsearch_spec.rb
old mode 100755
new mode 100644
index 0f4276bf..ca7c4613
--- a/modules/icinga2/spec/classes/elasticsearch_spec.rb
+++ b/modules/icinga2/spec/classes/elasticsearch_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::elasticsearch', :type => :class) do
+describe('icinga2::feature::elasticsearch', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }"
+      "class { 'icinga2': features => [], constants => { 'NodeName' => 'host.example.org' } }",
     ]
   end
 
@@ -13,113 +13,133 @@ describe('icinga2::feature::elasticsearch', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
         else
-          case facts[:osfamily]
-            when 'Debian'
-             @icinga2_conf_dir = '/etc/icinga2'
-             @icinga2_pki_dir = '/var/lib/icinga2/certs'
-             @icinga2_sslkey_mode = '0600'
-             @icinga2_user = 'nagios'
-             @icinga2_group = 'nagios'
-            else
-              @icinga2_conf_dir = '/etc/icinga2'
-              @icinga2_pki_dir = '/var/lib/icinga2/certs'
-              @icinga2_sslkey_mode = '0600'
-              @icinga2_user = 'icinga'
-              @icinga2_group = 'icinga'
-            end
-          end
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
+        end
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('elasticsearch').with({
-          'ensure' => 'present', }) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::ElasticsearchWriter::elasticsearch')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/elasticsearch.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::elasticsearch')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/elasticsearch.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+      context 'with defaults' do
+        it {
+          is_expected.to contain_icinga2__feature('elasticsearch').with(
+            { 'ensure' => 'present' },
+          )
+        }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::ElasticsearchWriter::elasticsearch').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/elasticsearch.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::elasticsearch').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/elasticsearch.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('elasticsearch').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('elasticsearch').with({ 'ensure' => 'absent' }) }
       end
 
-      context "with enable_ssl = true, ssl_key => foo, ssl_cert => bar, ssl_cacert => baz" do
+      context "with enable_ssl = true, ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
         let(:params) do
           {
-            :enable_ssl => true,
-            :ssl_key    => 'foo',
-            :ssl_cert   => 'bar',
-            :ssl_cacert => 'baz'
+            enable_ssl: true,
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key")
-          .with({
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'mode'  => @icinga2_sslkey_mode })
-          .with_content(/^foo$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt")
-          .with({
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, })
-          .with_content(/^bar$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt")
-          .with({
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, })
-          .with_content(/^baz$/) }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+              'mode' => icinga2_sslkey_mode,
+            },
+          ).with_content(%r{^foo$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
       end
 
-      context "with enable_ssl = true, ssl_key_path, ssl_cert_path and ssl_cacert_path set" do
+      context 'with enable_ssl = true, ssl_key_path, ssl_cert_path and ssl_cacert_path set' do
         let(:params) do
           {
-            :enable_ssl => true,
-            :ssl_key_path => "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key",
-            :ssl_cert_path => "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt",
-            :ssl_cacert_path => "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt"
+            enable_ssl: true,
+            ssl_key_path: "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key",
+            ssl_cert_path: "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt",
+            ssl_cacert_path: "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt",
           }
         end
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch')
-          .with_content %r{key_path = "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key"} }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch')
-          .with_content %r{cert_path = "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt"} }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch')
-          .with_content %r{ca_path = "#{@icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt"} }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch').with_content(
+            %r{key_path = "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.key"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch').with_content(
+            %r{cert_path = "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch.crt"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::ElasticsearchWriter::elasticsearch').with_content(
+            %r{ca_path = "#{icinga2_pki_dir}/ElasticsearchWriter_elasticsearch_ca.crt"},
+          )
+        }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/gelf_spec.rb b/modules/icinga2/spec/classes/gelf_spec.rb
old mode 100755
new mode 100644
index 31768c42..ae045fdf
--- a/modules/icinga2/spec/classes/gelf_spec.rb
+++ b/modules/icinga2/spec/classes/gelf_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::gelf', :type => :class) do
+describe('icinga2::feature::gelf', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,130 @@ describe('icinga2::feature::gelf', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
         end
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('gelf').with({'ensure' => 'present'}) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('gelf').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::GelfWriter::gelf')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/gelf.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::GelfWriter::gelf').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/gelf.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
 
-        it { is_expected.to contain_concat__fragment('icinga2::feature::gelf')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/gelf.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::gelf').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/gelf.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('gelf').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('gelf').with({ 'ensure' => 'absent' }) }
+      end
+
+      context "with enable_ssl => true, host => '127.0.0.1', ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
+        let(:params) do
+          {
+            enable_ssl: true,
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
+            host: '127.0.0.1',
+          }
+        end
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/GelfWriter_gelf.key").with(
+            {
+              'mode'  => icinga2_sslkey_mode,
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^foo})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/GelfWriter_gelf.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/GelfWriter_gelf_ca.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
+      end
+
+      context 'with enable_ssl => true, ssl_key_path, ssl_cert_path and ssl_cacert_path set' do
+        let(:params) do
+          {
+            enable_ssl: true,
+            ssl_key_path: "#{icinga2_pki_dir}/GelfWriter_gelf.key",
+            ssl_cert_path: "#{icinga2_pki_dir}/GelfWriter_gelf.crt",
+            ssl_cacert_path: "#{icinga2_pki_dir}/GelfWriter_gelf_ca.crt",
+          }
+        end
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::GelfWriter::gelf').with_content(
+            %r{key_path = "#{icinga2_pki_dir}/GelfWriter_gelf.key"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::GelfWriter::gelf').with_content(
+            %r{cert_path = "#{icinga2_pki_dir}/GelfWriter_gelf.crt"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::GelfWriter::gelf').with_content(
+            %r{ca_path = "#{icinga2_pki_dir}/GelfWriter_gelf_ca.crt"},
+          )
+        }
       end
     end
-    
   end
 end
diff --git a/modules/icinga2/spec/classes/graphite_spec.rb b/modules/icinga2/spec/classes/graphite_spec.rb
old mode 100755
new mode 100644
index eab1c7c8..290c3b7d
--- a/modules/icinga2/spec/classes/graphite_spec.rb
+++ b/modules/icinga2/spec/classes/graphite_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::graphite', :type => :class) do
+describe('icinga2::feature::graphite', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::graphite', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('graphite').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::GraphiteWriter::graphite')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/graphite.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::graphite')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/graphite.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('graphite').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::GraphiteWriter::graphite').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/graphite.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::graphite').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/graphite.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('graphite').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('graphite').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/icinga2_spec.rb b/modules/icinga2/spec/classes/icinga2_spec.rb
old mode 100755
new mode 100644
index daaebf67..6c6f6b58
--- a/modules/icinga2/spec/classes/icinga2_spec.rb
+++ b/modules/icinga2/spec/classes/icinga2_spec.rb
@@ -1,76 +1,79 @@
 require 'spec_helper'
 
-describe('icinga2', :type => :class) do
-
+describe('icinga2', type: :class) do
   on_supported_os.each do |os, facts|
     context "on #{os}" do
       let(:facts) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
       context 'with defaults' do
-        it { is_expected.to contain_package('icinga2')
-          .with({ 'ensure' => 'installed' }) }
-
-        it { is_expected.to contain_service('icinga2')
-          .with({
-            'ensure' => 'running',
-            'enable' => true }) }
-
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/features-enabled")
-          .with({
-            'ensure'  => 'directory',
-            'purge'   => true,
-            'recurse' => true, }) }
-
-        it { is_expected.to contain_icinga2__feature('checker')
-          .with({'ensure' => 'present'}) }
-        it { is_expected.to contain_icinga2__feature('mainlog')
-          .with({'ensure' => 'present'}) }
-        it { is_expected.to contain_icinga2__feature('notification')
-          .with({'ensure' => 'present'}) }
-
-        case facts[:osfamily]
-        when 'Debian'
-          it { should_not contain_apt__source('icinga-stable-release') }
-        when 'RedHat'
-          it { should_not contain_yumrepo('icinga-stable-release') }
-        when 'Suse'
-          it { should_not contain_zypprepo('icinga-stable-release') }
-        end
+        it { is_expected.to contain_package('icinga2').with({ 'ensure' => 'installed' }) }
+
+        it {
+          is_expected.to contain_service('icinga2').with(
+            {
+              'ensure' => 'running',
+              'enable' => true,
+            },
+          )
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_conf_dir}/features-enabled").with(
+            {
+              'ensure'  => 'directory',
+              'purge'   => true,
+              'recurse' => true,
+            },
+          )
+        }
+
+        it { is_expected.to contain_icinga2__feature('checker').with({ 'ensure' => 'present' }) }
+        it { is_expected.to contain_icinga2__feature('mainlog').with({ 'ensure' => 'present' }) }
+        it { is_expected.to contain_icinga2__feature('notification').with({ 'ensure' => 'present' }) }
       end
 
-      context "with manage_package => false" do
+      context 'with manage_packages => false' do
         let(:params) do
-          {:manage_package => false}
+          { manage_packages: false }
         end
 
-        it { should_not contain_package('icinga2').with({ 'ensure' => 'installed' }) }
+        it { is_expected.not_to contain_package('icinga2').with({ 'ensure' => 'installed' }) }
+      end
+
+      if facts[:os]['family'] == 'RedHat'
+        context 'with manage_selinux => true' do
+          let(:params) do
+            { manage_selinux: true }
+          end
+
+          it { is_expected.to contain_package('icinga2-selinux').with({ 'ensure' => 'installed' }) }
+        end
       end
 
-      context "with confd => false" do
+      context 'with confd => false' do
         let(:params) do
-          {:confd => false}
+          { confd: false }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/icinga2.conf")
-          .without_content %r{^include_recursive \"conf.d\"} }
+        it {
+          is_expected.to contain_file("#{icinga2_conf_dir}/icinga2.conf").without_content(%r{^include_recursive \"conf.d\"})
+        }
       end
 
-      context "with confd => example.d" do
+      context "with confd => 'example.d'" do
         let(:params) do
-          {:confd => "#{@icinga2_conf_dir}/example.d"}
+          { confd: "#{icinga2_conf_dir}/example.d" }
         end
 
         case facts[:kernel]
@@ -82,8 +85,11 @@ describe('icinga2', :type => :class) do
             ]
           end
 
-          it { is_expected.to contain_file("#{@icinga2_conf_dir}/icinga2.conf")
-            .with_content %r{^include_recursive \"C:/ProgramData/icinga2/etc/icinga2/example.d\"} }
+          it {
+            is_expected.to contain_file("#{icinga2_conf_dir}/icinga2.conf").with_content(
+              %r{^include_recursive \"C:/ProgramData/icinga2/etc/icinga2/example.d\"},
+            )
+          }
         when 'FreeBSD'
           let(:pre_condition) do
             [
@@ -92,8 +98,11 @@ describe('icinga2', :type => :class) do
             ]
           end
 
-          it { is_expected.to contain_file("#{@icinga2_conf_dir}/icinga2.conf")
-            .with_content %r{^include_recursive \"/usr/local/etc/icinga2/example.d\"} }
+          it {
+            is_expected.to contain_file("#{icinga2_conf_dir}/icinga2.conf").with_content(
+              %r{^include_recursive \"/usr/local/etc/icinga2/example.d\"},
+            )
+          }
         else
           let(:pre_condition) do
             [
@@ -102,85 +111,83 @@ describe('icinga2', :type => :class) do
             ]
           end
 
-          it { is_expected.to contain_file("#{@icinga2_conf_dir}/icinga2.conf")
-            .with_content %r{^include_recursive \"/etc/icinga2/example.d\"} }
-        end
-
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/example.d")
-          .with({
-            'ensure' => 'directory',
-            'tag'    => 'icinga2::config::file', }) }
-
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/example.d/foo")
-          .with({
-            'ensure' => 'file',
-            'tag'    => 'icinga2::config::file', })
-          .that_notifies('Class[icinga2::service]') }
-      end
-
-      context "with constants => { foo => bar }" do
-        let(:params) do
-          {
-            :constants => {'foo' => 'bar'}
+          it {
+            is_expected.to contain_file("#{icinga2_conf_dir}/icinga2.conf").with_content(
+              %r{^include_recursive \"/etc/icinga2/example.d\"},
+            )
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/constants.conf")
-          .with_content(/^const foo = \"bar\"/) }
+        it {
+          is_expected.to contain_file("#{icinga2_conf_dir}/example.d").with(
+            {
+              'ensure' => 'directory',
+              'tag'    => 'icinga2::config::file',
+            },
+          )
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_conf_dir}/example.d/foo").with(
+            {
+              'ensure' => 'file',
+              'tag'    => 'icinga2::config::file',
+            },
+          ).that_notifies('Class[icinga2::service]')
+        }
       end
 
-      context "with plugins => [ foo, bar ]" do
+      context "with constants => { foo => 'bar' }" do
         let(:params) do
           {
-            :plugins => ['foo', 'bar']
+            constants: { foo: 'bar' }
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_conf_dir}/icinga2.conf")
-          .with_content(/^include <foo>/)
-          .with_content(/^include <bar>/) }
+        it { is_expected.to contain_file("#{icinga2_conf_dir}/constants.conf").with_content(%r{^const foo = \"bar\"}) }
       end
 
-      context "with ensure => stopped, enable => false" do
+      context "with plugins => [ 'foo', 'bar' ]" do
         let(:params) do
           {
-            :ensure => 'stopped', :enable => false
+            plugins: ['foo', 'bar']
           }
         end
 
-        it { is_expected.to contain_service('icinga2')
-          .with({
-            'ensure' => 'stopped',
-            'enable' => false, }) }
+        it {
+          is_expected.to contain_file("#{icinga2_conf_dir}/icinga2.conf").with_content(
+            %r{^include <foo>},
+          ).with_content(%r{^include <bar>})
+        }
       end
 
-      context 'with manage_repo => true' do
+      context 'with ensure => stopped, enable => false' do
         let(:params) do
           {
-            :manage_repo => true
+            ensure: 'stopped',
+            enable: false,
           }
         end
 
-        case facts[:osfamily]
-          when 'Debian'
-            it { should contain_apt__source('icinga-stable-release') }
-          when 'RedHat'
-            it { should contain_yumrepo('icinga-stable-release') }
-          when 'Suse'
-            it { should contain_zypprepo('icinga-stable-release') }
-        end
+        it {
+          is_expected.to contain_service('icinga2').with(
+            {
+              'ensure' => 'stopped',
+              'enable' => false,
+            },
+          )
+        }
       end
 
-      context "with manage_service => false" do
+      context 'with manage_service => false' do
         let(:params) do
           {
-            :manage_service => false
+            manage_service: false,
           }
         end
 
-        it { should_not contain_service('icinga2') }
+        it { is_expected.not_to contain_service('icinga2') }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/idomysql_spec.rb b/modules/icinga2/spec/classes/idomysql_spec.rb
old mode 100755
new mode 100644
index 386f991d..a994c10e
--- a/modules/icinga2/spec/classes/idomysql_spec.rb
+++ b/modules/icinga2/spec/classes/idomysql_spec.rb
@@ -1,67 +1,69 @@
 require 'spec_helper'
 
-describe('icinga2::feature::idomysql', :type => :class) do
+describe('icinga2::feature::idomysql', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }"
+      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }",
     ]
   end
 
   on_supported_os.each do |os, facts|
-   context "on #{os}" do
-     let(:facts) do
+    context "on #{os}" do
+      let(:facts) do
         case facts[:kernel]
         when 'windows'
-          facts.merge({
-            :icinga2_puppet_hostcert => 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => 'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => 'C:/ProgramData/PuppetLabs/var/lib/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey:  'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: 'C:/ProgramData/PuppetLabs/var/lib/puppet/ssl/certs/ca.pem',
+            },
+          )
         else
-          facts.merge({
-            :icinga2_puppet_hostcert => '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey: '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
+            },
+          )
         end
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @ido_mysql_schema_dir = 'C:/Program Files/icinga2/usr/share/icinga2-ido-mysql/schema'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @ido_mysql_schema_dir = '/usr/local/share/icinga2-ido-mysql/schema'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:ido_mysql_schema_dir) { 'C:/Program Files/icinga2/usr/share/icinga2-ido-mysql/schema' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:ido_mysql_schema_dir) { '/usr/local/share/icinga2-ido-mysql/schema' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:ido_mysql_schema_dir) { '/usr/share/icinga2-ido-mysql/schema' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @ido_mysql_schema_dir = '/usr/share/icinga2-ido-mysql/schema'
-          @icinga2_sslkey_mode = '0600'
-          case facts[:osfamily]
-          when 'Debian'
-            @icinga2_user = 'nagios'
-            @icinga2_group = 'nagios'
-          else
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-          end
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
         end
       end
 
-      context "with defaults" do
+      context 'with defaults' do
         let(:params) do
           {
-            :password => 'foo'
+            password: 'foo',
           }
         end
 
@@ -69,129 +71,177 @@ describe('icinga2::feature::idomysql', :type => :class) do
           it { is_expected.to contain_package('icinga2-ido-mysql').with({ 'ensure' => 'installed' }) }
         end
 
-        it { is_expected.to contain_icinga2__feature('ido-mysql').with({'ensure' => 'present'}) }
+        if facts[:os]['family'] == 'Debian'
+          it {
+            is_expected.to contain_file('/etc/dbconfig-common/icinga2-ido-mysql.conf').with(
+              {
+                'ensure' => 'file',
+                'owner'  => 'root',
+                'group'  => 'root',
+              },
+            )
+          }
+        end
+
+        it { is_expected.to contain_icinga2__feature('ido-mysql').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::IdoMysqlConnection::ido-mysql')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/ido-mysql.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::IdoMysqlConnection::ido-mysql').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/ido-mysql.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
 
-        it { is_expected.to contain_concat__fragment('icinga2::feature::ido-mysql')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/ido-mysql.conf",
-            'order'  => '05', })
-          .with_content(/library \"db_ido_mysql\"$/) }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::ido-mysql').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/ido-mysql.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"db_ido_mysql\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure   => 'absent',
-            :password => 'foo'
+            ensure: 'absent',
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('ido-mysql').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('ido-mysql').with({ 'ensure' => 'absent' }) }
       end
 
-      context "with import_schema => true" do
+      context 'with import_schema => true' do
         let(:params) do
           {
-            :import_schema => true,
-            :password      => 'foo'
+            import_schema: true,
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_exec('idomysql-import-schema')
-          .with({
-            'user'    => 'root',
-            'command' => "mysql -u icinga -p'foo' icinga < #{@ido_mysql_schema_dir}/mysql.sql", }) }
+        it {
+          is_expected.to contain_exec('idomysql-import-schema').with(
+            {
+              user: 'root',
+              command: "mysql -u icinga -p'foo' icinga < \"#{ido_mysql_schema_dir}/mysql.sql\"",
+            },
+          )
+        }
       end
 
       if facts[:kernel] == 'Linux'
-        context "with icinga2::manage_package => false" do
+        context 'with icinga2::manage_packages => false' do
           let(:params) do
             {
-              :password => 'foo'
+              password: 'foo',
             }
           end
 
           let(:pre_condition) do
             [
-              "class { 'icinga2': features => [], manage_package => false }"
+              "class { 'icinga2': features => [], manage_packages => false }",
             ]
           end
 
-          it { should_not contain_package('icinga2').with({ 'ensure' => 'installed' }) }
-          it { should_not contain_package('icinga2-ido-mysql').with({ 'ensure' => 'installed' }) }
+          it { is_expected.not_to contain_package('icinga2').with({ 'ensure' => 'installed' }) }
+          it { is_expected.not_to contain_package('icinga2-ido-mysql').with({ 'ensure' => 'installed' }) }
         end
       end
 
-      context "with enable_ssl => true, host => 127.0.0.1, port => 3306, import_schema => true, ssl_key => foo, ssl_cert => bar, ssl_cacert => baz" do
+      context "with enable_ssl => true, host => '127.0.0.1', port => 3306, import_schema => true, ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
         let(:params) do
           {
-            :enable_ssl    => true,
-            :ssl_key       => 'foo',
-            :ssl_cert      => 'bar',
-            :ssl_cacert    => 'baz',
-            :host          => '127.0.0.1',
-            :port          => 3306,
-            :import_schema => true,
-            :password      => 'foo'
+            enable_ssl: true,
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
+            host: '127.0.0.1',
+            port: 3306,
+            import_schema: true,
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key")
-          .with({
-            'mode'  => @icinga2_sslkey_mode,
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group, })
-          .with_content(/^foo/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt")
-          .with({
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group, })
-          .with_content(/^bar$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt")
-          .with({
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group, })
-          .with_content(/^baz$/) }
-
-        it { is_expected.to contain_exec('idomysql-import-schema')
-          .with({
-            'user'    => 'root',
-            'command' => "mysql -h 127.0.0.1 -P 3306 -u icinga -p'foo' --ssl-ca #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt --ssl-cert #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt --ssl-key #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key icinga < #{@ido_mysql_schema_dir}/mysql.sql", }) }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key").with(
+            {
+              'mode'  => icinga2_sslkey_mode,
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^foo})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
+
+        it {
+          is_expected.to contain_exec('idomysql-import-schema').with(
+            {
+              'user'    => 'root',
+              'command' => "mysql -h 127.0.0.1 -P 3306 -u icinga -p'foo' --ssl  --ssl-ca #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt" \
+                " --ssl-cert #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt --ssl-key #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key icinga < \"#{ido_mysql_schema_dir}/mysql.sql\"",
+            },
+          )
+        }
       end
 
-      context "with enable_ssl => true, import_schema => true, ssl_key_path, ssl_cert_path and ssl_cacert_path set" do
+      context 'with enable_ssl => true, import_schema => true, ssl_key_path, ssl_cert_path and ssl_cacert_path set' do
         let(:params) do
           {
-            :enable_ssl      => true,
-            :ssl_key_path    => "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key",
-            :ssl_cert_path   => "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt",
-            :ssl_cacert_path => "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt",
-            :import_schema   => true,
-            :password        => 'foo'
+            enable_ssl: true,
+            ssl_key_path: "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key",
+            ssl_cert_path: "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt",
+            ssl_cacert_path: "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt",
+            import_schema: true,
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql')
-          .with_content %r{ssl_key = "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key"} }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql')
-          .with_content %r{ssl_cert = "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt"} }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql')
-          .with_content %r{ssl_ca = "#{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt"} }
-
-        it { is_expected.to contain_exec('idomysql-import-schema')
-          .with({
-            'user'    => 'root',
-            'command' => "mysql -u icinga -p'foo' --ssl-ca #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt --ssl-cert #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt --ssl-key #{@icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key icinga < #{@ido_mysql_schema_dir}/mysql.sql", }) }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql').with_content(
+            %r{ssl_key = "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql').with_content(
+            %r{ssl_cert = "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt"},
+          )
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::IdoMysqlConnection::ido-mysql').with_content(
+            %r{ssl_ca = "#{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt"},
+          )
+        }
+
+        it {
+          is_expected.to contain_exec('idomysql-import-schema').with(
+            {
+              'user'    => 'root',
+              'command' => "mysql -u icinga -p'foo' --ssl  --ssl-ca #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql_ca.crt" \
+                " --ssl-cert #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.crt --ssl-key #{icinga2_pki_dir}/IdoMysqlConnection_ido-mysql.key icinga < \"#{ido_mysql_schema_dir}/mysql.sql\"",
+            },
+          )
+        }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/idopgsql_spec.rb b/modules/icinga2/spec/classes/idopgsql_spec.rb
old mode 100755
new mode 100644
index cfae4989..a545c59d
--- a/modules/icinga2/spec/classes/idopgsql_spec.rb
+++ b/modules/icinga2/spec/classes/idopgsql_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::idopgsql', :type => :class) do
+describe('icinga2::feature::idopgsql', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,42 +13,40 @@ describe('icinga2::feature::idopgsql', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @ido_pgsql_schema_dir = 'C:/Program Files/icinga2/usr/share/icinga2-ido-pgsql/schema'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @ido_pgsql_schema_dir = '/usr/local/share/icinga2-ido-pgsql/schema'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:ido_pgsql_schema_dir) { 'C:/Program Files/icinga2/usr/share/icinga2-ido-pgsql/schema' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:ido_pgsql_schema_dir) { '/usr/local/share/icinga2-ido-pgsql/schema' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:ido_pgsql_schema_dir) { '/usr/share/icinga2-ido-pgsql/schema' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @ido_pgsql_schema_dir = '/usr/share/icinga2-ido-pgsql/schema'
-          @icinga2_sslkey_mode = '0600'
-          case facts[:osfamily]
-          when 'Debian'
-            @icinga2_user = 'nagios'
-            @icinga2_group = 'nagios'
-          else
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-          end
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
         end
       end
 
-      context "with defaults" do
+      context 'with defaults' do
         let(:params) do
           {
-            :password => 'foo'
+            password: 'foo',
           }
         end
 
@@ -56,57 +54,129 @@ describe('icinga2::feature::idopgsql', :type => :class) do
           it { is_expected.to contain_package('icinga2-ido-pgsql').with({ 'ensure' => 'installed' }) }
         end
 
-        it { is_expected.to contain_icinga2__feature('ido-pgsql').with({'ensure' => 'present'}) }
+        if facts[:os]['family'] == 'Debian'
+          it {
+            is_expected.to contain_file('/etc/dbconfig-common/icinga2-ido-pgsql.conf').with(
+              {
+                'ensure' => 'file',
+                'owner'  => 'root',
+                'group'  => 'root',
+              },
+            )
+          }
+        end
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::IdoPgsqlConnection::ido-pgsql')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/ido-pgsql.conf" }) }
+        it { is_expected.to contain_icinga2__feature('ido-pgsql').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::IdoPgsqlConnection::ido-pgsql').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/ido-pgsql.conf" },
+          )
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure   => 'absent',
-            :password => 'foo'
+            ensure: 'absent',
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('ido-pgsql').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('ido-pgsql').with({ 'ensure' => 'absent' }) }
       end
 
-      context "with import_schema => true" do
+      context 'with import_schema => true' do
         let(:params) do
           {
-            :import_schema => true,
-            :password      => 'foo'
+            import_schema: true,
+            password: 'foo',
           }
         end
 
-        it { is_expected.to contain_exec('idopgsql-import-schema')
-         .with({
-            'user'        => 'root',
-            'environment' => ["PGPASSWORD=foo"],
-            'command'     => "psql -h 'localhost' -U 'icinga' -p '5432' -d 'icinga' -w -f #{@ido_pgsql_schema_dir}/pgsql.sql" }) }
+        it {
+          is_expected.to contain_exec('idopgsql-import-schema').with(
+            {
+              'user'        => 'root',
+              'environment' => ['PGPASSWORD=foo'],
+              'command'     => "psql 'host=localhost user=icinga port=5432 dbname=icinga' -w -f '#{ido_pgsql_schema_dir}/pgsql.sql'" \
+            },
+          )
+        }
       end
 
       if facts[:kernel] == 'Linux'
-        context "with manage_package => false" do
+        context 'with manage_packages => false' do
           let(:params) do
             {
-              :password => 'foo'
+              password: 'foo',
             }
           end
 
           let(:pre_condition) do
             [
-              "class { 'icinga2': features => [], manage_package => false }"
+              "class { 'icinga2': features => [], manage_packages => false }",
             ]
           end
 
-          it { should_not contain_package('icinga2').with({ 'ensure' => 'installed' }) }
-          it { should_not contain_package('icinga2-ido-pgsql').with({ 'ensure' => 'installed' }) }
+          it { is_expected.not_to contain_package('icinga2').with({ 'ensure' => 'installed' }) }
+          it { is_expected.not_to contain_package('icinga2-ido-pgsql').with({ 'ensure' => 'installed' }) }
         end
       end
-    end
 
+      context "with ssl_mode => verify-full, host => '127.0.0.1', port => 5432, import_schema => true, ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
+        let(:params) do
+          {
+            ssl_mode: 'verify-full',
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
+            host: '127.0.0.1',
+            port: 5432,
+            import_schema: true,
+            password: 'foo',
+          }
+        end
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql.key").with(
+            {
+              'mode'  => icinga2_sslkey_mode,
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^foo})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql_ca.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
+
+        it {
+          is_expected.to contain_exec('idopgsql-import-schema').with(
+            {
+              'user'      => 'root',
+              'command'   => "psql 'host=127.0.0.1 sslmode=verify-full sslcert=#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql.crt " \
+                "sslkey=#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql.key sslrootcert=#{icinga2_pki_dir}/IdoPgsqlConnection_ido-pgsql_ca.crt " \
+                "user=icinga port=5432 dbname=icinga' -w -f '#{ido_pgsql_schema_dir}/pgsql.sql'" \
+            },
+          )
+        }
+      end
+    end
   end
 end
diff --git a/modules/icinga2/spec/classes/influxdb_spec.rb b/modules/icinga2/spec/classes/influxdb_spec.rb
old mode 100755
new mode 100644
index c9bb89f9..1ba8379d
--- a/modules/icinga2/spec/classes/influxdb_spec.rb
+++ b/modules/icinga2/spec/classes/influxdb_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::influxdb', :type => :class) do
+describe('icinga2::feature::influxdb', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }"
+      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }",
     ]
   end
 
@@ -13,109 +13,123 @@ describe('icinga2::feature::influxdb', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_sslkey_mode = '0600'
-          case facts[:osfamily]
-          when 'Debian'
-            @icinga2_user = 'nagios'
-            @icinga2_group = 'nagios'
-          else
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-          end
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
         end
       end
 
-      context "with all defaults" do
-        it { is_expected.to contain_icinga2__feature('influxdb').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb')
-         .with({ 'target' => "#{@icinga2_conf_dir}/features-available/influxdb.conf" })
-         .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::influxdb')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/influxdb.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+      context 'with all defaults' do
+        it { is_expected.to contain_icinga2__feature('influxdb').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/influxdb.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::influxdb').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/influxdb.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('influxdb').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('influxdb').with({ 'ensure' => 'absent' }) }
       end
 
-      context "with enable_ssl = true, ssl_key => foo, ssl_cert => bar, ssl_cacert => baz" do
+      context "with enable_ssl = true, ssl_key => 'foo', ssl_cert => 'bar', ssl_cacert => 'baz'" do
         let(:params) do
           {
-            :enable_ssl => true,
-            :ssl_key    => 'foo',
-            :ssl_cert   => 'bar',
-            :ssl_cacert => 'baz'
+            enable_ssl: true,
+            ssl_key: 'foo',
+            ssl_cert: 'bar',
+            ssl_cacert: 'baz',
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.key")
-          .with({
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group,
-            'mode'  => @icinga2_sslkey_mode, })
-          .with_content(/^foo$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.crt")
-          .with({
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group, })
-          .with_content(/^bar$/) }
-
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt")
-          .with({
-            'owner' => @icinga2_user,
-            'group' => @icinga2_group, })
-          .with_content(/^baz$/) }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/InfluxdbWriter_influxdb.key").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+              'mode'  => icinga2_sslkey_mode,
+            },
+          ).with_content(%r{^foo$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/InfluxdbWriter_influxdb.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^bar$})
+        }
+
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt").with(
+            {
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+            },
+          ).with_content(%r{^baz$})
+        }
       end
 
-      context "with enable_ssl = true, ssl_key_path, ssl_cert_path and ssl_cacert_path set" do
+      context 'with enable_ssl = true, ssl_key_path, ssl_cert_path and ssl_cacert_path set' do
         let(:params) do
           {
-            :enable_ssl => true,
-            :ssl_key_path => "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.key",
-            :ssl_cert_path => "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.crt",
-            :ssl_cacert_path => "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt"
+            enable_ssl: true,
+            ssl_key_path: "#{icinga2_pki_dir}/InfluxdbWriter_influxdb.key",
+            ssl_cert_path: "#{icinga2_pki_dir}/InfluxdbWriter_influxdb.crt",
+            ssl_cacert_path: "#{icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt",
           }
         end
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb')
-          .with_content %r{ssl_key = "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.key"} }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb').with_content(%r{ssl_key = "#{icinga2_pki_dir}/InfluxdbWriter_influxdb.key"})
+        }
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb')
-          .with_content %r{ssl_cert = "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb.crt"} }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb').with_content(%r{ssl_cert = "#{icinga2_pki_dir}/InfluxdbWriter_influxdb.crt"})
+        }
 
-        it { is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb')
-          .with_content %r{ssl_ca_cert = "#{@icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt"} }
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::InfluxdbWriter::influxdb').with_content(%r{ssl_ca_cert = "#{icinga2_pki_dir}/InfluxdbWriter_influxdb_ca.crt"})
+        }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/livestatus_spec.rb b/modules/icinga2/spec/classes/livestatus_spec.rb
old mode 100755
new mode 100644
index deec6d0f..71861234
--- a/modules/icinga2/spec/classes/livestatus_spec.rb
+++ b/modules/icinga2/spec/classes/livestatus_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::livestatus', :type => :class) do
+describe('icinga2::feature::livestatus', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::livestatus', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with all defaults" do
-        it { is_expected.to contain_icinga2__feature('livestatus').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_concat__fragment('icinga2::object::LivestatusListener::livestatus')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/livestatus.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::livestatus')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/livestatus.conf",
-            'order'  => '05', })
-          .with_content(/library \"livestatus\"$/) }
+      context 'with all defaults' do
+        it { is_expected.to contain_icinga2__feature('livestatus').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::object::LivestatusListener::livestatus').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/livestatus.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::livestatus').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/livestatus.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"livestatus\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('livestatus').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('livestatus').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/mainlog_spec.rb b/modules/icinga2/spec/classes/mainlog_spec.rb
old mode 100755
new mode 100644
index 642ac7ff..635c80f0
--- a/modules/icinga2/spec/classes/mainlog_spec.rb
+++ b/modules/icinga2/spec/classes/mainlog_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::mainlog', :type => :class) do
+describe('icinga2::feature::mainlog', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,54 +13,55 @@ describe('icinga2::feature::mainlog', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
+      context 'with defaults' do
         let(:params) do
           {
-            :ensure => 'present'
+            ensure: 'present',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('mainlog').with({'ensure' => 'present'}) }
+        it { is_expected.to contain_icinga2__feature('mainlog').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::FileLogger::mainlog')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/mainlog.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::FileLogger::mainlog').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/mainlog.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
 
-        case facts[:osfamily]
+        case facts[:os]['family']
         when 'windows'
-          it { is_expected.to contain_concat__fragment('icinga2::object::FileLogger::mainlog')
-            .with({
-              'target' => "#{@icinga2_conf_dir}/features-available/mainlog.conf", })
-            .with_content(/path = \"C:\/ProgramData\/icinga2\/var\/log\/icinga2\/icinga2.log\"/) }
+          it {
+            is_expected.to contain_concat__fragment('icinga2::object::FileLogger::mainlog').with(
+              { 'target' => "#{icinga2_conf_dir}/features-available/mainlog.conf" },
+            ).with_content(%r{path = \"C:\/ProgramData\/icinga2\/var\/log\/icinga2\/icinga2.log\"})
+          }
         else
-          it { is_expected.to contain_concat__fragment('icinga2::object::FileLogger::mainlog')
-            .with({
-              'target' => "#{@icinga2_conf_dir}/features-available/mainlog.conf", })
-            .with_content(/path = \"\/var\/log\/icinga2\/icinga2.log\"/) }
+          it {
+            is_expected.to contain_concat__fragment('icinga2::object::FileLogger::mainlog').with(
+              { 'target' => "#{icinga2_conf_dir}/features-available/mainlog.conf" },
+            ).with_content(%r{path = \"\/var\/log\/icinga2\/icinga2.log\"})
+          }
         end
       end
 
       context "#{os} with ensure => absent" do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('mainlog').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('mainlog').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/notification_spec.rb b/modules/icinga2/spec/classes/notification_spec.rb
old mode 100755
new mode 100644
index 7fd60800..d2b1b92a
--- a/modules/icinga2/spec/classes/notification_spec.rb
+++ b/modules/icinga2/spec/classes/notification_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::notification', :type => :class) do
+describe('icinga2::feature::notification', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,35 +13,34 @@ describe('icinga2::feature::notification', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('notification').with({'ensure' => 'present'}) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('notification').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::NotificationComponent::notification')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/notification.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::NotificationComponent::notification').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/notification.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('notification').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('notification').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/opentsdb_spec.rb b/modules/icinga2/spec/classes/opentsdb_spec.rb
old mode 100755
new mode 100644
index b394e74d..c871fac0
--- a/modules/icinga2/spec/classes/opentsdb_spec.rb
+++ b/modules/icinga2/spec/classes/opentsdb_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::opentsdb', :type => :class) do
+describe('icinga2::feature::opentsdb', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::opentsdb', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('opentsdb').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::OpenTsdbWriter::opentsdb')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/opentsdb.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::opentsdb')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/opentsdb.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('opentsdb').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::OpenTsdbWriter::opentsdb').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/opentsdb.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::opentsdb').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/opentsdb.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('opentsdb').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('opentsdb').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/perfdata_spec.rb b/modules/icinga2/spec/classes/perfdata_spec.rb
old mode 100755
new mode 100644
index ffab3922..4599a95a
--- a/modules/icinga2/spec/classes/perfdata_spec.rb
+++ b/modules/icinga2/spec/classes/perfdata_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::perfdata', :type => :class) do
+describe('icinga2::feature::perfdata', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::perfdata', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('perfdata').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::PerfdataWriter::perfdata')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/perfdata.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::perfdata')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/perfdata.conf",
-            'order'  => '05', })
-          .with_content(/library \"perfdata\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('perfdata').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::PerfdataWriter::perfdata').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/perfdata.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::perfdata').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/perfdata.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"perfdata\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('perfdata').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('perfdata').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/pki_ca_spec.rb b/modules/icinga2/spec/classes/pki_ca_spec.rb
old mode 100755
new mode 100644
index 7b607f20..307968f8
--- a/modules/icinga2/spec/classes/pki_ca_spec.rb
+++ b/modules/icinga2/spec/classes/pki_ca_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::pki::ca', :type => :class) do
+describe('icinga2::pki::ca', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }"
+      "class { 'icinga2': features => [], constants => {'NodeName' => 'host.example.org'} }",
     ]
   end
 
@@ -12,156 +12,188 @@ describe('icinga2::pki::ca', :type => :class) do
       let(:facts) do
         case facts[:kernel]
         when 'windows'
-          facts.merge({
-            :icinga2_puppet_hostcert => 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => 'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => 'C:/ProgramData/PuppetLabs/var/lib/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey: 'C:/ProgramData/PuppetLabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: 'C:/ProgramData/PuppetLabs/puppet/ssl/certs/ca.pem',
+            },
+          )
         else
-          facts.merge({
-            :icinga2_puppet_hostcert => '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
-            :icinga2_puppet_hostprivkey => '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
-            :icinga2_puppet_localcacert => '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
-          })
+          facts.merge(
+            {
+              icinga2_puppet_hostcert: '/etc/puppetlabs/puppet/ssl/certs/host.example.org.pem',
+              icinga2_puppet_hostprivkey: '/etc/puppetlabs/puppet/ssl/private_keys/host.example.org.pem',
+              icinga2_puppet_localcacert: '/etc/lib/puppetlabs/puppet/ssl/certs/ca.pem',
+            },
+          )
         end
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_bin = 'C:/Program Files/icinga2/sbin/icinga2.exe'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          @icinga2_pki_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/certs'
-          @icinga2_ca_dir = 'C:/ProgramData/icinga2/var/lib/icinga2/ca'
-          @icinga2_sslkey_mode = nil
-          @icinga2_user = nil
-          @icinga2_group = nil
-        when 'FreeBSD'
-          @icinga2_bin = '/usr/local/sbin/icinga2'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_ca_dir = '/var/lib/icinga2/ca'
-          @icinga2_sslkey_mode = '0600'
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_bin) { 'C:/Program Files/icinga2/sbin/icinga2.exe' }
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+        let(:icinga2_pki_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/certs' }
+        let(:icinga2_ca_dir) { 'C:/ProgramData/icinga2/var/lib/icinga2/ca' }
+        let(:icinga2_sslkey_mode) { nil }
+        let(:icinga2_user) { nil }
+        let(:icinga2_group) { nil }
+      when 'FreeBSD'
+        let(:icinga2_bin) { '/usr/local/sbin/icinga2' }
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_ca_dir) { '/var/lib/icinga2/ca' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
+        let(:icinga2_pki_dir) { '/var/lib/icinga2/certs' }
+        let(:icinga2_ca_dir) { '/var/lib/icinga2/ca' }
+        let(:icinga2_sslkey_mode) { '0600' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
+          let(:icinga2_bin) { '/usr/sbin/icinga2' }
         else
-          @icinga2_conf_dir = '/etc/icinga2'
-          @icinga2_pki_dir = '/var/lib/icinga2/certs'
-          @icinga2_ca_dir = '/var/lib/icinga2/ca'
-          @icinga2_sslkey_mode = '0600'
-          case facts[:osfamily]
-          when 'Debian'
-            @icinga2_user = 'nagios'
-            @icinga2_group = 'nagios'
-            @icinga2_bin = '/usr/sbin/icinga2'
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
+          if facts[:os]['family'] != 'RedHat'
+            let(:icinga2_bin) { '/usr/sbin/icinga2' }
           else
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-            if facts[:osfamily] != 'RedHat'
-              @icinga2_bin = '/usr/sbin/icinga2'
+            case facts[:os]['release']['major']
+            when '5'
+              let(:icinga2_bin) { '/usr/sbin/icinga2' }
+            when '6'
+              let(:icinga2_bin) { '/usr/sbin/icinga2' }
             else
-              case facts[:operatingsystemmajrelease]
-              when '5'
-                @icinga2_bin = '/usr/sbin/icinga2'
-              when '6'
-                @icinga2_bin = '/usr/sbin/icinga2'
-              else
-                @icinga2_bin = '/sbin/icinga2'
-              end
+              let(:icinga2_bin) { '/sbin/icinga2' }
             end
           end
         end
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_exec('create-icinga2-ca')
-          .with({
-            'command' => "#{@icinga2_bin} pki new-ca",
-            'creates' => "#{@icinga2_ca_dir}/ca.crt", })
-          .that_notifies('Class[icinga2::service]')
-          .that_comes_before("File[#{@icinga2_pki_dir}/ca.crt]") }
+      context 'with defaults' do
+        it {
+          is_expected.to contain_exec('create-icinga2-ca').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki new-ca",
+              'creates' => "#{icinga2_ca_dir}/ca.crt",
+            },
+          ).that_notifies('Class[icinga2::service]').that_comes_before("File[#{icinga2_pki_dir}/ca.crt]")
+        }
 
-        it { is_expected.to contain_exec('icinga2 pki create certificate signing request')
-          .with({
-            'command' => "#{@icinga2_bin} pki new-cert --cn host.example.org --key #{@icinga2_pki_dir}/host.example.org.key --csr #{@icinga2_pki_dir}/host.example.org.csr",
-            'creates' => "#{@icinga2_pki_dir}/host.example.org.key", })
-          .that_requires("File[#{@icinga2_pki_dir}/ca.crt]") }
-       
-        it { is_expected.to contain_exec('icinga2 pki sign certificate')
-          .with({
-            'command'     => "#{@icinga2_bin} pki sign-csr --csr #{@icinga2_pki_dir}/host.example.org.csr --cert #{@icinga2_pki_dir}/host.example.org.crt",
-            'refreshonly' => true, })
-          .that_notifies('Class[icinga2::service]')
-          .that_subscribes_to('Exec[icinga2 pki create certificate signing request]') }
+        it {
+          is_expected.to contain_exec('icinga2 pki create certificate signing request').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki new-cert --cn host.example.org --key #{icinga2_pki_dir}/host.example.org.key --csr #{icinga2_pki_dir}/host.example.org.csr",
+              'creates' => "#{icinga2_pki_dir}/host.example.org.key",
+            },
+          ) # .that_requires("File[#{icinga2_pki_dir}/ca.crt]")
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/ca.crt")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, }) }
+        it {
+          is_expected.to contain_exec('icinga2 pki sign certificate').with(
+            {
+              'command'     => "\"#{icinga2_bin}\" pki sign-csr --csr #{icinga2_pki_dir}/host.example.org.csr --cert #{icinga2_pki_dir}/host.example.org.crt",
+              'refreshonly' => true,
+            },
+          ).that_notifies('Class[icinga2::service]').that_subscribes_to('Exec[icinga2 pki create certificate signing request]')
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.key")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'mode'   => @icinga2_sslkey_mode, })
-          .that_requires('Exec[icinga2 pki create certificate signing request]') }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/ca.crt").with(
+            {
+              'ensure' => 'file',
+              'owner'  => icinga2_user,
+              'group'  => icinga2_group,
+            },
+          )
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.crt")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group, })
-          .that_requires('Exec[icinga2 pki sign certificate]') }
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.key").with(
+            {
+              'ensure'    => 'file',
+              'owner'     => icinga2_user,
+              'group'     => icinga2_group,
+              'mode'      => icinga2_sslkey_mode,
+              'show_diff' => false,
+              'backup'    => false,
+            },
+          ).that_requires('Exec[icinga2 pki create certificate signing request]')
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_pki_dir}/host.example.org.csr")
-          .with({
-            'ensure' => 'absent', })
-          .that_requires('Exec[icinga2 pki sign certificate]') }
-      end
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.crt").with(
+            {
+              'ensure' => 'file',
+              'owner'  => icinga2_user,
+              'group'  => icinga2_group,
+            },
+          ).that_requires('Exec[icinga2 pki sign certificate]')
+        }
 
+        it {
+          is_expected.to contain_file("#{icinga2_pki_dir}/host.example.org.csr").with(
+            { 'ensure' => 'absent' },
+          ).that_requires('Exec[icinga2 pki sign certificate]')
+        }
+      end
 
       context "with ca_cert => 'foo', ca_key => 'bar'" do
         let(:params) do
           {
-            :ca_cert => 'foo',
-            :ca_key  => 'bar'
+            ca_cert: 'foo',
+            ca_key: 'bar'
           }
         end
 
-        it { is_expected.to contain_exec('icinga2 pki create certificate signing request')
-         .with({
-           'command' => "#{@icinga2_bin} pki new-cert --cn host.example.org --key #{@icinga2_pki_dir}/host.example.org.key --csr #{@icinga2_pki_dir}/host.example.org.csr",
-           'creates' => "#{@icinga2_pki_dir}/host.example.org.key", })
-         .that_requires("File[#{@icinga2_pki_dir}/ca.crt]") }
-       
-        it { is_expected.to contain_exec('icinga2 pki sign certificate')
-         .with({
-           'command' => "#{@icinga2_bin} pki sign-csr --csr #{@icinga2_pki_dir}/host.example.org.csr --cert #{@icinga2_pki_dir}/host.example.org.crt",
-           'refreshonly' => true, })
-         .that_notifies('Class[icinga2::service]')
-         .that_subscribes_to('Exec[icinga2 pki create certificate signing request]') }
+        it {
+          is_expected.to contain_exec('icinga2 pki create certificate signing request').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki new-cert --cn host.example.org --key #{icinga2_pki_dir}/host.example.org.key --csr #{icinga2_pki_dir}/host.example.org.csr",
+              'creates' => "#{icinga2_pki_dir}/host.example.org.key",
+            },
+          ).that_requires("File[#{icinga2_pki_dir}/ca.crt]")
+        }
+
+        it {
+          is_expected.to contain_exec('icinga2 pki sign certificate').with(
+            {
+              'command' => "\"#{icinga2_bin}\" pki sign-csr --csr #{icinga2_pki_dir}/host.example.org.csr --cert #{icinga2_pki_dir}/host.example.org.crt",
+              'refreshonly' => true,
+            },
+          ).that_notifies('Class[icinga2::service]').that_subscribes_to('Exec[icinga2 pki create certificate signing request]')
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_ca_dir}/ca.crt")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'tag'    => 'icinga2::config::file', }) 
-          .with_content(/^foo$/)
-          .that_comes_before("File[#{@icinga2_pki_dir}/ca.crt]") }
+        it {
+          is_expected.to contain_file("#{icinga2_ca_dir}/ca.crt").with(
+            {
+              'ensure' => 'file',
+              'owner'  => icinga2_user,
+              'group'  => icinga2_group,
+              'tag'    => 'icinga2::config::file',
+            },
+          ).with_content(%r{^foo$}).that_comes_before("File[#{icinga2_pki_dir}/ca.crt]")
+        }
 
-        it { is_expected.to contain_file("#{@icinga2_ca_dir}/ca.key")
-          .with({
-            'ensure' => 'file',
-            'owner'  => @icinga2_user,
-            'group'  => @icinga2_group,
-            'mode'   => @icinga2_sslkey_mode,
-            'tag'    => 'icinga2::config::file', })
-          .with_content(/bar/)  }
+        it {
+          is_expected.to contain_file("#{icinga2_ca_dir}/ca.key").with(
+            {
+              'ensure' => 'file',
+              'owner' => icinga2_user,
+              'group' => icinga2_group,
+              'mode' => icinga2_sslkey_mode,
+              'tag' => 'icinga2::config::file',
+              'show_diff' => false,
+              'backup' => false,
+            },
+          ).with_content(%r{bar})
+        }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/statusdata_spec.rb b/modules/icinga2/spec/classes/statusdata_spec.rb
old mode 100755
new mode 100644
index 87f87773..0283faf9
--- a/modules/icinga2/spec/classes/statusdata_spec.rb
+++ b/modules/icinga2/spec/classes/statusdata_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::statusdata', :type => :class) do
+describe('icinga2::feature::statusdata', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,41 +13,43 @@ describe('icinga2::feature::statusdata', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('statusdata').with({'ensure' => 'present'}) }
-
-        it { is_expected.to contain_icinga2__object('icinga2::object::StatusDataWriter::statusdata')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/statusdata.conf" })
-          .that_notifies('Class[icinga2::service]') }
-
-        it { is_expected.to contain_concat__fragment('icinga2::feature::statusdata')
-          .with({
-            'target' => "#{@icinga2_conf_dir}/features-available/statusdata.conf",
-            'order'  => '05', })
-          .with_content(/library \"compat\"$/) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('statusdata').with({ 'ensure' => 'present' }) }
+
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::StatusDataWriter::statusdata').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/statusdata.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
+
+        it {
+          is_expected.to contain_concat__fragment('icinga2::feature::statusdata').with(
+            {
+              'target' => "#{icinga2_conf_dir}/features-available/statusdata.conf",
+              'order'  => '05',
+            },
+          ).with_content(%r{library \"compat\"$})
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('statusdata').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('statusdata').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/classes/syslog_spec.rb b/modules/icinga2/spec/classes/syslog_spec.rb
old mode 100755
new mode 100644
index c1e95f1e..f4a6b26d
--- a/modules/icinga2/spec/classes/syslog_spec.rb
+++ b/modules/icinga2/spec/classes/syslog_spec.rb
@@ -1,9 +1,9 @@
 require 'spec_helper'
 
-describe('icinga2::feature::syslog', :type => :class) do
+describe('icinga2::feature::syslog', type: :class) do
   let(:pre_condition) do
     [
-      "class { 'icinga2': features => [], }"
+      "class { 'icinga2': features => [] }",
     ]
   end
 
@@ -13,35 +13,34 @@ describe('icinga2::feature::syslog', :type => :class) do
         facts
       end
 
-      before(:each) do
-        case facts[:kernel]
-        when 'windows'
-          @icinga2_conf_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-        when 'FreeBSD'
-          @icinga2_conf_dir = '/usr/local/etc/icinga2'
-        else
-          @icinga2_conf_dir = '/etc/icinga2'
-        end
+      case facts[:kernel]
+      when 'windows'
+        let(:icinga2_conf_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      when 'FreeBSD'
+        let(:icinga2_conf_dir) { '/usr/local/etc/icinga2' }
+      else
+        let(:icinga2_conf_dir) { '/etc/icinga2' }
       end
 
-      context "with defaults" do
-        it { is_expected.to contain_icinga2__feature('syslog').with({'ensure' => 'present'}) }
+      context 'with defaults' do
+        it { is_expected.to contain_icinga2__feature('syslog').with({ 'ensure' => 'present' }) }
 
-        it { is_expected.to contain_icinga2__object('icinga2::object::SyslogLogger::syslog')
-          .with({ 'target' => "#{@icinga2_conf_dir}/features-available/syslog.conf" })
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_icinga2__object('icinga2::object::SyslogLogger::syslog').with(
+            { 'target' => "#{icinga2_conf_dir}/features-available/syslog.conf" },
+          ).that_notifies('Class[icinga2::service]')
+        }
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure => 'absent'
+            ensure: 'absent',
           }
         end
 
-        it { is_expected.to contain_icinga2__feature('syslog').with({'ensure' => 'absent'}) }
+        it { is_expected.to contain_icinga2__feature('syslog').with({ 'ensure' => 'absent' }) }
       end
     end
-
   end
 end
diff --git a/modules/icinga2/spec/default_facts.yml b/modules/icinga2/spec/default_facts.yml
old mode 100755
new mode 100644
index 62697d12..f777abfc
--- a/modules/icinga2/spec/default_facts.yml
+++ b/modules/icinga2/spec/default_facts.yml
@@ -1 +1,8 @@
-concat_basedir: "/tmp"
+# Use default_module_facts.yml for module specific facts.
+#
+# Facts specified here will override the values provided by rspec-puppet-facts.
+---
+ipaddress: "172.16.254.254"
+ipaddress6: "FE80:0000:0000:0000:AAAA:AAAA:AAAA"
+is_pe: false
+macaddress: "AA:AA:AA:AA:AA:AA"
diff --git a/modules/icinga2/spec/defines/feature_spec.rb b/modules/icinga2/spec/defines/feature_spec.rb
old mode 100755
new mode 100644
index fdd0c362..3029cac3
--- a/modules/icinga2/spec/defines/feature_spec.rb
+++ b/modules/icinga2/spec/defines/feature_spec.rb
@@ -1,13 +1,11 @@
 require 'spec_helper'
 
-describe('icinga2::feature', :type => :define) do
-  let(:title) do
-    'bar'
-  end
+describe('icinga2::feature', type: :define) do
+  let(:title) { 'bar' }
 
   before(:each) do
     # Fake assert_private function from stdlib to not fail within this test
-    Puppet::Parser::Functions.newfunction(:assert_private, :type => :rvalue) { |args| }
+    Puppet::Parser::Functions.newfunction(:assert_private, type: :rvalue) { |args| }
   end
 
   on_supported_os.each do |os, facts|
@@ -16,95 +14,89 @@ describe('icinga2::feature', :type => :define) do
         facts
       end
 
-      case facts[:kernel]
-        when 'Linux'
-          case facts[:osfamily]
-            when 'Debian'
-              before(:all) do
-                @icinga2_config_dir = '/etc/icinga2'
-                @icinga2_user = 'nagios'
-                @icinga2_group = 'nagios'
-              end
-            else
-              before(:all) do
-                @icinga2_config_dir = '/etc/icinga2'
-                @icinga2_user = 'icinga'
-                @icinga2_group = 'icinga'
-              end
-          end
-        when 'FreeBSD'
-          before(:all) do
-            @icinga2_config_dir = '/usr/local/etc/icinga2'
-            @icinga2_user = 'icinga'
-            @icinga2_group = 'icinga'
-          end
-        when 'windows'
-          before(:all) do
-            @icinga2_config_dir = 'C:/ProgramData/icinga2/etc/icinga2'
-          end
-      end
-
       let(:pre_condition) do
         [
           "class { 'icinga2': features => [] }",
           "icinga2::object { 'icinga2::object::FooComponent::foo':
             object_name => 'foo',
             object_type => 'FooComponent',
-            target      => '#{@icinga2_config_dir}/features-available/foo.conf',
+            target      => '#{icinga2_config_dir}/features-available/foo.conf',
             order       => 10,
-          }"
+          }",
         ]
       end
 
       case facts[:kernel]
-        when 'windows'
-          context "with ensure => present" do
-            let(:params) do
-              {
-                :ensure  => 'present',
-                :feature => 'foo'
-              }
-            end
+      when 'Linux'
+        let(:icinga2_config_dir) { '/etc/icinga2' }
+        case facts[:os]['family']
+        when 'Debian'
+          let(:icinga2_user) { 'nagios' }
+          let(:icinga2_group) { 'nagios' }
+        else
+          let(:icinga2_user) { 'icinga' }
+          let(:icinga2_group) { 'icinga' }
+        end
+      when 'FreeBSD'
+        let(:icinga2_config_dir) { '/usr/local/etc/icinga2' }
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
+      when 'windows'
+        let(:icinga2_config_dir) { 'C:/ProgramData/icinga2/etc/icinga2' }
+      end
 
-            it { is_expected.to contain_file("#{@icinga2_config_dir}/features-enabled/foo.conf")
-              .with({ 'ensure' => 'file' })
-              .that_notifies('Class[icinga2::service]') }
+      case facts[:kernel]
+      when 'windows'
+        context 'with ensure => present' do
+          let(:params) do
+            {
+              ensure: 'present',
+              feature: 'foo',
+            }
+          end
+
+          it { is_expected.to contain_file("#{icinga2_config_dir}/features-enabled/foo.conf").with({ 'ensure' => 'file' }).that_notifies('Class[icinga2::service]') }
 
-            it { should compile }
+          it { is_expected.to compile }
+        end
+      else
+        context 'with ensure => present' do
+          let(:params) do
+            {
+              ensure: 'present',
+              feature: 'foo',
+            }
           end
-        else
-          context "with ensure => present" do
-            let(:params) do
-              {
-                :ensure  => 'present',
-                :feature => 'foo'
-              }
-            end
 
-            it { is_expected.to contain_file("#{@icinga2_config_dir}/features-enabled/foo.conf")
-              .with({
+          it {
+            is_expected.to contain_file("#{icinga2_config_dir}/features-enabled/foo.conf").with(
+              {
                 'ensure' => 'link',
-                'owner'  => @icinga2_user,
-                'group'  => @icinga2_group,
-              }).that_notifies('Class[icinga2::service]') }
+                'owner'  => icinga2_user,
+                'group'  => icinga2_group,
+              },
+            ).that_notifies('Class[icinga2::service]')
+          }
 
-            it { should compile }
-          end
+          it { is_expected.to compile }
+        end
       end
 
-      context "with ensure => absent" do
+      context 'with ensure => absent' do
         let(:params) do
           {
-            :ensure  => 'absent',
-            :feature => 'foo'
+            ensure: 'absent',
+            feature: 'foo',
           }
         end
 
-        it { is_expected.to contain_file("#{@icinga2_config_dir}/features-enabled/foo.conf")
-          .with({ 'ensure' => 'absent'})
-          .that_notifies('Class[icinga2::service]') }
+        it {
+          is_expected.to contain_file("#{icinga2_config_dir}/features-enabled/foo.conf")
+            .with({ 'ensure' => 'absent' })
+            .that_notifies('Class[icinga2::service]')
+        }
 
-        it { should compile }
+        it { is_expected.to compile }
       end
     end
   end
diff --git a/modules/icinga2/spec/defines/fragment_spec.rb b/modules/icinga2/spec/defines/fragment_spec.rb
old mode 100755
new mode 100644
index 5a0ca279..f732f430
--- a/modules/icinga2/spec/defines/fragment_spec.rb
+++ b/modules/icinga2/spec/defines/fragment_spec.rb
@@ -1,37 +1,31 @@
 require 'spec_helper'
 
-describe('icinga2::config::fragment', :type => :define) do
-  let(:title) do
-    'bar'
-  end
+describe('icinga2::config::fragment', type: :define) do
+  let(:title) { 'bar' }
 
   let(:pre_condition) do
     [
-      "class { 'icinga2': }"
+      "class { 'icinga2': }",
     ]
   end
 
   on_supported_os.each do |os, facts|
     let(:facts) do
       facts
-    end 
+    end
 
-    context "#{os} with content => foo, target => /bar/baz, order => 10" do
+    context "#{os} with content => 'foo, target => '/bar/baz', order => 10" do
       let(:params) do
         {
-          :content => 'foo',
-          :target  => '/bar/baz',
-          :order   => '10'
+          content: 'foo',
+          target: '/bar/baz',
+          order: '10',
         }
       end
 
       it { is_expected.to contain_concat('/bar/baz') }
 
-      it { is_expected.to contain_concat__fragment('icinga2::config::bar')
-        .with({
-          'target' => '/bar/baz',
-          'order'  => '10'
-        }).with_content(/^foo$/) }
+      it { is_expected.to contain_concat__fragment('icinga2::config::bar').with({ 'target' => '/bar/baz', 'order' => '10' }).with_content(%r{^foo$}) }
     end
   end
 end
diff --git a/modules/icinga2/spec/defines/objects_spec.rb b/modules/icinga2/spec/defines/objects_spec.rb
old mode 100755
new mode 100644
index 5e292d12..04150f31
--- a/modules/icinga2/spec/defines/objects_spec.rb
+++ b/modules/icinga2/spec/defines/objects_spec.rb
@@ -1,25 +1,24 @@
 require 'spec_helper'
 
 facts = {
-  :kernel   => 'Linux',
-  :os => {:family => 'Debian', :name => 'Debian'},
-  :osfamily => 'Debian' }
-
+  kernel: 'Linux',
+  os: { family: 'Debian', name: 'Debian' },
+}
 
-describe('icinga2::object', :type => :define) do
+describe('icinga2::object', type: :define) do
   let(:title) do
     'foo'
   end
 
   let(:pre_condition) do
     [
-      "class { 'icinga2': }"
+      "class { 'icinga2': }",
     ]
   end
 
   before(:each) do
     # Fake assert_private function from stdlib to not fail within this test
-    Puppet::Parser::Functions.newfunction(:assert_private, :type => :rvalue) { |args| }
+    Puppet::Parser::Functions.newfunction(:assert_private, type: :rvalue) { |args| }
   end
 
   on_supported_os.each do |os, complete_facts|
@@ -30,181 +29,156 @@ describe('icinga2::object', :type => :define) do
     context "#{os} with object_type => 'foobar'" do
       let(:params) do
         {
-          :object_type => 'foobar',
-          :target      => '/bar/baz',
-          :order       => '10'
+          object_type: 'foobar',
+          target: '/bar/baz',
+          order: '10',
         }
       end
 
-      case facts[:osfamily]
+      case facts[:os]['family']
       when 'Debian'
-        before(:each) do
-          @icinga2_user = 'nagios'
-          @icinga2_group = 'nagios'
-        end
+        let(:icinga2_user) { 'nagios' }
+        let(:icinga2_group) { 'nagios' }
       when 'Windows'
-        before(:each) do
-          @icinga2_user = null
-          @icinga2_group = null
-        end
+        let(:icinga2_user) { null }
+        let(:icinga2_group) { null }
       else
-        before(:each) do
-          @icinga2_user = 'icinga'
-          @icinga2_group = 'icinga'
-        end
+        let(:icinga2_user) { 'icinga' }
+        let(:icinga2_group) { 'icinga' }
       end
 
-      it { is_expected.to contain_concat('/bar/baz')
-        .with({
-          'owner' => @icinga2_user,
-          'group' => @icinga2_group
-        }).that_notifies('Class[icinga2::service]') }
+      it { is_expected.to contain_concat('/bar/baz').with({ 'owner' => icinga2_user, 'group' => icinga2_group }).that_notifies('Class[icinga2::service]') }
 
-      it { is_expected.to contain_concat__fragment('foo')
-        .with({
-          'target' => '/bar/baz',
-          'order'  => '10'
-         }).with_content(/object foobar "foo" \{/) }
+      it { is_expected.to contain_concat__fragment('foo').with({ 'target' => '/bar/baz', 'order' => '10' }).with_content(%r{object foobar "foo" \{}) }
 
-      it { should compile }
+      it { is_expected.to compile }
     end
   end
 
-  let(:facts) do
-    facts
-  end
-
-  context "with template => true" do
+  context 'with template => true' do
     let(:params) do
       {
-        :template    => true,
-        :object_type => 'foobar',
-        :target      => '/bar/baz',
-        :order       => '10'
+        template: true,
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/template foobar "foo" \{/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{template foobar "foo" \{}) }
   end
 
   context "with import => ['bar', 'baz']" do
     let(:params) do
       {
-        :import      => ['bar', 'baz'],
-        :object_type => 'foobar',
-        :target      => '/bar/baz',
-        :order       => '10'
+        import: ['bar', 'baz'],
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/import "bar"\n  import "baz"\n/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{import "bar"\n  import "baz"\n}) }
   end
 
   context "with apply_target => 'Service', object_type => 'Service' (same value)" do
     let(:params) do
       {
-        :apply_target => 'Service',
-        :object_type  => 'Service',
-        :target       => '/bar/baz',
-        :order        => '10'
+        apply_target: 'Service',
+        object_type: 'Service',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to raise_error(Puppet::Error, /must be different/) }
+    it { is_expected.to raise_error(Puppet::Error, %r{must be different}) }
   end
 
   context "with apply => true, apply_target => 'Host'" do
     let(:params) do
       {
-        :apply        => true,
-        :apply_target => 'Host',
-        :object_type  => 'foobar',
-        :target       =>  '/bar/baz',
-        :order        => '10'
+        apply: true,
+        apply_target: 'Host',
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/apply foobar \"foo\" to Host \{/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{apply foobar \"foo\" to Host \{}) }
   end
 
   context "with apply => true, apply_target => 'Service'" do
     let(:params) do
       {
-        :apply        => true,
-        :apply_target => 'Service',
-        :object_type  => 'foobar',
-        :target       =>  '/bar/baz',
-        :order        => '10'
+        apply: true,
+        apply_target: 'Service',
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/apply foobar \"foo\" to Service \{/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{apply foobar \"foo\" to Service \{}) }
   end
 
   context "with apply => 'item in array', prefix => true" do
     let(:params) do
       {
-        :apply       => 'item in array',
-        :prefix      => true,
-        :object_type => 'foobar',
-        :target      =>  '/bar/baz',
-        :order       => '10'
+        apply: 'item in array',
+        prefix: true,
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/apply foobar \"foo\" for \(item in array\) \{/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{apply foobar \"foo\" for \(item in array\) \{}) }
   end
 
   context "with apply => 'key => value in hash', prefix => 'some string'" do
     let(:params) do
       {
-        :apply       => 'key => value in hash',
-        :prefix      => 'some string',
-        :object_type => 'foobar',
-        :target      =>  '/bar/baz',
-        :order       => '10'
+        apply: 'key => value in hash',
+        prefix: 'some string',
+        object_type: 'foobar',
+        target: '/bar/baz',
+        order: '10',
       }
     end
 
-    it { is_expected.to contain_concat__fragment('foo')
-      .with_content(/apply foobar \"some string\" for \(key => value in hash\) \{/) }
+    it { is_expected.to contain_concat__fragment('foo').with_content(%r{apply foobar \"some string\" for \(key => value in hash\) \{}) }
   end
 end
 
-
 on_icinga_objects = {
-  'ApiUser'             => 'icinga2::object::apiuser',
-  'CheckCommand'        => 'icinga2::object::checkcommand',
-  'Dependency'          => 'icinga2::object::dependency',
-  'Endpoint'            => 'icinga2::object::endpoint',
-  'EventCommand'        => 'icinga2::object::eventcommand',
-  'Host'                => 'icinga2::object::host',
-  'HostGroup'           => 'icinga2::object::hostgroup',
-  'Notification'        => 'icinga2::object::notification',
-  'NotificationCommand' => 'icinga2::object::notificationcommand',
-  'ScheduledDowntime'   => 'icinga2::object::scheduleddowntime',
-  'Service'             => 'icinga2::object::service',
-  'ServiceGroup'        => 'icinga2::object::servicegroup',
-  'TimePeriod'          => 'icinga2::object::timeperiod',
-  'User'                => 'icinga2::object::user',
-  'UserGroup'           => 'icinga2::object::usergroup',
-  'Zone'                => 'icinga2::object::zone',
+  ApiUser: 'icinga2::object::apiuser',
+  CheckCommand: 'icinga2::object::checkcommand',
+  Dependency: 'icinga2::object::dependency',
+  Endpoint: 'icinga2::object::endpoint',
+  EventCommand: 'icinga2::object::eventcommand',
+  Host: 'icinga2::object::host',
+  HostGroup: 'icinga2::object::hostgroup',
+  Notification: 'icinga2::object::notification',
+  NotificationCommand: 'icinga2::object::notificationcommand',
+  ScheduledDowntime: 'icinga2::object::scheduleddowntime',
+  Service: 'icinga2::object::service',
+  ServiceGroup: 'icinga2::object::servicegroup',
+  TimePeriod: 'icinga2::object::timeperiod',
+  User: 'icinga2::object::user',
+  UserGroup: 'icinga2::object::usergroup',
+  Zone: 'icinga2::object::zone',
 }
 
 on_icinga_objects.each do |otype, rtype|
-  describe(rtype, :type => :define) do
+  describe(rtype, type: :define) do
     let(:title) do
       'foo'
     end
 
     let(:pre_condition) do
       [
-        "class { 'icinga2': }"
+        "class { 'icinga2': }",
       ]
     end
 
@@ -212,17 +186,16 @@ on_icinga_objects.each do |otype, rtype|
       facts
     end
 
-    context "with all defaults" do
+    context 'with all defaults' do
       let(:params) do
         {
-          :target =>  '/bar/baz'
+          target: '/bar/baz',
         }
       end
 
-      it { is_expected.to contain_icinga2__object("icinga2::object::#{otype}::foo")
-        .with_object_type(otype) }
+      it { is_expected.to contain_icinga2__object("icinga2::object::#{otype}::foo").with_object_type(otype) }
 
-      it { should compile }
+      it { is_expected.to compile }
     end
   end
 end
diff --git a/modules/icinga2/spec/functions/attributes_spec.rb b/modules/icinga2/spec/functions/attributes_spec.rb
deleted file mode 100755
index 2f571734..00000000
--- a/modules/icinga2/spec/functions/attributes_spec.rb
+++ /dev/null
@@ -1,346 +0,0 @@
-require 'spec_helper'
-
-describe 'icinga2_attributes' do
-  let(:pre_condition) do
-    [
-      "class { 'icinga2': }"
-    ]
-  end
-
-  let(:facts) do
-    {
-      :kernel => 'Linux',
-      :os     => {
-        :family => 'Debian',
-        :name => 'Debian'
-      },
-      :osfamily => 'Debian',
-    }
-  end
-
-  it 'raises a ArgumentError if there is less than 1 arguments' do
-    is_expected.to run.with_params.and_raise_error(Puppet::ParseError)
-  end
-
-
-  it 'raises a ArgumentError if there are more than 4 arguments' do
-    is_expected.to run.with_params('one','two','three','four','five').and_raise_error(Puppet::ParseError)
-  end
-
-
-  it 'assign a string' do
-
-    # foo = "some string"
-    is_expected.to run.with_params({
-      'foo' => 'some string, connected to another. Yeah!'
-    }).and_return("foo = \"some string, connected to another. Yeah!\"\n")
-
-    # vars.foo = "some string"
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => 'some string, connected to another. Yeah!'
-      }
-    }).and_return("vars.foo = \"some string, connected to another. Yeah!\"\n")
-  end
-
-
-  it 'assign a boolean' do
-
-    # foo = false
-    is_expected.to run.with_params({
-      'foo' => 'false'
-    }).and_return("foo = false\n")
-
-    # foo = true
-    is_expected.to run.with_params({
-      'foo' => 'true'
-    }).and_return("foo = true\n")
-
-    # foo = null
-    is_expected.to run.with_params({
-      'foo' => 'null'
-    }).and_return("foo = null\n")
-
-    # vars.foo = false
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => 'false'
-      }
-    }).and_return("vars.foo = false\n")
-
-    # vars.foo = true
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => 'true'
-      }
-    }).and_return("vars.foo = true\n")
-
-    # vars.foo = null
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => 'null'
-      }
-    }).and_return("vars.foo = null\n")
-  end
-
-
-  it 'assign a number' do
-
-    # foo = 42
-    is_expected.to run.with_params({
-      'foo' => '42'
-    }).and_return("foo = 42\n")
-
-    # foo = -42
-    is_expected.to run.with_params({
-      'foo' => '-42'
-    }).and_return("foo = -42\n")
-
-    # vars.foo = 42
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => '42'
-      }
-    }).and_return("vars.foo = 42\n")
-
-    # vars.foo = -42
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => '-42'
-      }
-    }).and_return("vars.foo = -42\n")
-  end
-
-
-  it 'assign a floating point number' do
-
-    # foo = 3.141
-    is_expected.to run.with_params({
-      'foo' => '3.141'
-    }).and_return("foo = 3.141\n")
-
-    # foo = -3.141
-    is_expected.to run.with_params({
-      'foo' => '3.141'
-    }).and_return("foo = 3.141\n")
-
-    # vars.foo = 3.141
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => '3.141'
-      }
-    }).and_return("vars.foo = 3.141\n")
-
-    # vars.foo = -3.141
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => '-3.141'
-      }
-    }).and_return("vars.foo = -3.141\n")
-  end
-
-
-  it 'assign numbers with time units' do
-
-    # foo_s = 60s
-    # foo_m = 5m
-    # foo_h = 2.5h
-    # foo_d = 2d
-    is_expected.to run.with_params({
-      'foo_s' => '60s',
-      'foo_m' => '5m',
-      'foo_h' => '2.5h',
-      'foo_d' => '2d'
-    }).and_return("foo_s = 60s\nfoo_m = 5m\nfoo_h = 2.5h\nfoo_d = 2d\n")
-
-    # vars.foo_s = 60s
-    # vars.foo_m = 5m
-    # vars.foo_h = 2.5h
-    # vars.foo_d = 2d
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo_s' => '60s',
-        'foo_m' => '5m',
-        'foo_h' => '2.5h',
-        'foo_d' => '2d'
-      }
-    }).and_return("vars.foo_s = 60s\nvars.foo_m = 5m\nvars.foo_h = 2.5h\nvars.foo_d = 2d\n")
-  end
-
-
-  it 'assign an array' do
-
-    # foo = [ "some string, connected to another. Yeah!", NodeName, 42, 3.141, 2d, true, ]
-    is_expected.to run.with_params({
-      'foo' => ['some string, connected to another. Yeah!', 'NodeName', '42', '3.141', '2.5d', 'true']
-    }).and_return("foo = [ \"some string, connected to another. Yeah!\", NodeName, 42, 3.141, 2.5d, true, ]\n")
-
-    # vars.foo = [ "some string, connected to another. Yeah!", NodeName, 42, 3.141, 2d, true, ]
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => ['some string, connected to another. Yeah!', 'NodeName', '42', '3.141', '2.5d', 'true']
-      }
-    }).and_return("vars.foo = [ \"some string, connected to another. Yeah!\", NodeName, 42, 3.141, 2.5d, true, ]\n")
-  end
-
-
-  it 'assign a hash' do
-
-    # foo = {
-    #   string = "some string, connected to another. Yeah!"
-    #   constant = NodeName
-    #   numbers = [ 42, 3.141, -42, -3.141, ]
-    #   time = 2.5d
-    #   bool = true
-    # }
-    is_expected.to run.with_params({
-      'foo' => {
-        'string' => 'some string, connected to another. Yeah!',
-        'constant' => 'NodeName',
-        'numbers' => ['42', '3.141', '-42', '-3.141'],
-        'time' => '2.5d',
-        'bool' => 'true'
-      }
-    }).and_return("foo = {\n  string = \"some string, connected to another. Yeah!\"\n  constant = NodeName\n  numbers = [ 42, 3.141, -42, -3.141, ]\n  time = 2.5d\n  bool = true\n}\n")
-
-    # vars.foo["string"] = "some string, connected to another. Yeah!"
-    # vars.foo["constant"] = NodeName
-    # vars.foo["numbers"] = [ 42, 3.141, -42, -3.141, ]
-    # vars.foo["time"] = 2.5d
-    # vars.foo["bool"] = true
-    is_expected.to run.with_params({
-      'vars' => {
-        'foo' => {
-          'string' => 'some string, connected to another. Yeah!',
-          'constant' => 'NodeName',
-          'numbers' => ['42', '3.141', '-42', '-3.141'],
-          'time' => '2.5d',
-          'bool' => 'true'
-        }
-      }
-    }).and_return("vars.foo[\"string\"] = \"some string, connected to another. Yeah!\"\nvars.foo[\"constant\"] = NodeName\nvars.foo[\"numbers\"] = [ 42, 3.141, -42, -3.141, ]\nvars.foo[\"time\"] = 2.5d\nvars.foo[\"bool\"] = true\n")
-  end
-
-
-  it 'assign a nested hash' do
-
-    # foobar = {
-    #   foo = {
-    #     string = "some string, connected to another. Yeah!"
-    #     constant = NodeName
-    #     bool = true
-    #   }
-    #   bar = {
-    #     numbers = [ 42, 3.141, -42, -3,141, ]
-    #     time = 2.5d
-    #   }
-    # }
-    is_expected.to run.with_params({
-      'foobar' => {
-        'foo' => {
-          'string' => 'some string, connected to another. Yeah!',
-          'constant' => 'NodeName',
-          'bool' => 'true'
-        },
-        'bar' => {
-          'numbers' => ['42', '3.141', '-42', '-3.141'],
-          'time' => '2.5d'
-        }
-      }
-    }).and_return("foobar = {\n  foo = {\n    string = \"some string, connected to another. Yeah!\"\n    constant = NodeName\n    bool = true\n  }\n  bar = {\n    numbers = [ 42, 3.141, -42, -3.141, ]\n    time = 2.5d\n  }\n}\n")
-
-    # vars.foobar["foo"] = {
-    #   string = "some string, connected to another. Yeah!"
-    #   constant = NodeName
-    #   bool = true
-    # }
-    # vars.foobar["bar"] = {
-    #   numbers = [ 42, 3.141, -42, -3,141, ]
-    #   time = 2.5d
-    # }
-    is_expected.to run.with_params({
-      'vars' => {
-        'foobar' => {
-          'foo' => {
-            'string' => 'some string, connected to another. Yeah!',
-            'constant' => 'NodeName',
-            'bool' => 'true'
-          },
-          'bar' => {
-            'numbers' => ['42', '3.141', '-42', '-3.141'],
-            'time' => '2.5d'
-          }
-        }
-      }
-    }).and_return("vars.foobar[\"foo\"] = {\n  string = \"some string, connected to another. Yeah!\"\n  constant = NodeName\n  bool = true\n}\nvars.foobar[\"bar\"] = {\n  numbers = [ 42, 3.141, -42, -3.141, ]\n  time = 2.5d\n}\n")
-  end
-
-
-  it 'arithmetic and logical expressions' do
-
-    # result = 3 + 2 * 4 - (4 + (-2.5)) * 8 + func(3 * 2 + 1, funcN(-42)) + str(NodeName, "some string", "another string")
-    is_expected.to run.with_params({
-      'result' => '3 + 2 * 4 - (4 + (-2.5)) * 8 + func(3 * 2 + 1, funcN(-42)) + str(NodeName, some string, another string)'
-    }).and_return("result = 3 + 2 * 4 - (4 + (-2.5)) * 8 + func(3 * 2 + 1, funcN(-42)) + str(NodeName, \"some string\", \"another string\")\n")
-
-    # result = [ 3 + 4, 4 - (4 + (-2.5)) * 8, func(3 * 2 + 1, funcN(-42)) + str(NodeName, "some string", "another string"), ]
-    is_expected.to run.with_params({
-      'result' => [
-        '3 + 4',
-        '4 - (4 + (-2.5)) * 8',
-        'func(3 * 2 + 1, funcN(-42)) + str(NodeName, some string, another string)'
-      ]
-    }).and_return("result = [ 3 + 4, 4 - (4 + (-2.5)) * 8, func(3 * 2 + 1, funcN(-42)) + str(NodeName, \"some string\", \"another string\"), ]\n")
-
-    # result = {
-    #   add = 3 + 4
-    #   expr = 4 - (4 + (-2.5)) * 8
-    #   func = func(3 * 2 + 1, funcN(-42)) + str(NodeName, "some string", "another string")
-    # }
-    is_expected.to run.with_params({
-      'result' => {
-        'add' => '3 + 4',
-        'expr' => '4 - (4 + (-2.5)) * 8',
-        'func' => 'func(3 * 2 + 1, funcN(-42)) + str(NodeName, some string, another string)'
-      }
-    }).and_return("result = {\n  add = 3 + 4\n  expr = 4 - (4 + (-2.5)) * 8\n  func = func(3 * 2 + 1, funcN(-42)) + str(NodeName, \"some string\", \"another string\")\n}\n")
-
-    # assign where (host.address || host.address6) && host.vars.os == "Linux"
-    # assign where get_object("Endpoint", host.name)
-    is_expected.to run.with_params({
-      'assign where' => [
-        '(host.address || host.address6) && host.vars.os == Linux',
-        'get_object(Endpoint, host.name)'
-      ]
-    }).and_return("assign where (host.address || host.address6) && host.vars.os == \"Linux\"\nassign where get_object(\"Endpoint\", host.name)\n")
-
-    # ignore where get_object("Endpoint", host.name) || host.vars.os != "Windows"
-    is_expected.to run.with_params({
-      'ignore where' => [
-        'get_object(Endpoint, host.name) || host.vars.os != Windows'
-      ]
-    }).and_return("ignore where get_object(\"Endpoint\", host.name) || host.vars.os != \"Windows\"\n")
-  end
-
-  it 'disable parsing' do
-
-    # result = "unparsed string NodeName with quotes"
-    is_expected.to run.with_params({
-      'result' => '-:"unparsed string NodeName with quotes"'
-    }).and_return("result = \"unparsed string NodeName with quotes\"\n")
-
-    # result = "unparsed string NodeName with quotes", ]
-    is_expected.to run.with_params({
-      'result' => [ '-:"unparsed string NodeName with quotes"' ]
-    }).and_return("result = [ \"unparsed string NodeName with quotes\", ]\n")
-
-    # result = {
-    #   string = "unparsed string NodeName with quotes",
-    # }
-    is_expected.to run.with_params({
-      'result' => { 'string' =>  '-:"unparsed string NodeName with quotes"' }
-    }).and_return("result = {\n  string = \"unparsed string NodeName with quotes\"\n}\n")
-
-  end
-
-end
diff --git a/modules/icinga2/spec/spec_helper.rb b/modules/icinga2/spec/spec_helper.rb
old mode 100755
new mode 100644
index 0ba1e945..9b1fa6f2
--- a/modules/icinga2/spec/spec_helper.rb
+++ b/modules/icinga2/spec/spec_helper.rb
@@ -1,22 +1,73 @@
+# frozen_string_literal: true
+
 RSpec.configure do |c|
   c.mock_with :rspec
 end
 
 require 'puppetlabs_spec_helper/module_spec_helper'
 require 'rspec-puppet-facts'
+
+require 'spec_helper_local' if File.file?(File.join(File.dirname(__FILE__), 'spec_helper_local.rb'))
+
 include RspecPuppetFacts
 
+default_facts = {
+  puppetversion: Puppet.version,
+  facterversion: Facter.version,
+}
+
+default_fact_files = [
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_facts.yml')),
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_module_facts.yml')),
+]
+
+default_fact_files.each do |f|
+  next unless File.exist?(f) && File.readable?(f) && File.size?(f)
+
+  begin
+    default_facts.merge!(YAML.safe_load(File.read(f), [], [], true))
+  rescue => e
+    RSpec.configuration.reporter.message "WARNING: Unable to load #{f}: #{e}"
+  end
+end
+
+# read default_facts and merge them over what is provided by facterdb
+default_facts.each do |fact, value|
+  add_custom_fact fact, value
+end
+
 RSpec.configure do |c|
-  default_facts = {
-    puppetversion: Puppet.version,
-    facterversion: Facter.version
-  }
-  default_facts.merge!(YAML.load(File.read(File.expand_path('../default_facts.yml', __FILE__)))) if File.exist?(File.expand_path('../default_facts.yml', __FILE__))
-  default_facts.merge!(YAML.load(File.read(File.expand_path('../default_module_facts.yml', __FILE__)))) if File.exist?(File.expand_path('../default_module_facts.yml', __FILE__))
   c.default_facts = default_facts
+  c.before :each do
+    # set to strictest setting for testing
+    # by default Puppet runs at warning level
+    Puppet.settings[:strict] = :warning
+    Puppet.settings[:strict_variables] = true
+  end
+  c.filter_run_excluding(bolt: true) unless ENV['GEM_BOLT']
+  c.after(:suite) do
+  end
+
+  # Filter backtrace noise
+  backtrace_exclusion_patterns = [
+    %r{spec_helper},
+    %r{gems},
+  ]
 
-  c.before(:each) do
-    # Stub assert_private function from stdlib to not fail within this test
-    Puppet::Parser::Functions.newfunction(:assert_private) { |_| }
+  if c.respond_to?(:backtrace_exclusion_patterns)
+    c.backtrace_exclusion_patterns = backtrace_exclusion_patterns
+  elsif c.respond_to?(:backtrace_clean_patterns)
+    c.backtrace_clean_patterns = backtrace_exclusion_patterns
   end
 end
+
+# Ensures that a module is defined
+# @param module_name Name of the module
+def ensure_module_defined(module_name)
+  module_name.split('::').reduce(Object) do |last_module, next_module|
+    last_module.const_set(next_module, Module.new) unless last_module.const_defined?(next_module, false)
+    last_module.const_get(next_module, false)
+  end
+end
+
+# 'spec_overrides' from sync.yml will appear below this line
diff --git a/modules/icinga2/spec/spec_helper_acceptance.rb b/modules/icinga2/spec/spec_helper_acceptance.rb
old mode 100755
new mode 100644
index 768f3bcb..386093d2
--- a/modules/icinga2/spec/spec_helper_acceptance.rb
+++ b/modules/icinga2/spec/spec_helper_acceptance.rb
@@ -2,7 +2,7 @@ require 'beaker-rspec'
 require 'beaker/puppet_install_helper'
 
 # Install Puppet on all hosts
-install_puppet_agent_on(hosts, options)
+install_puppet_agent_on(hosts, puppet_collection: 'puppet5')
 
 RSpec.configure do |c|
   module_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
@@ -12,10 +12,11 @@ RSpec.configure do |c|
   c.before :suite do
     # Install module to all hosts
     hosts.each do |host|
-      install_dev_puppet_module_on(host, :source => module_root, :module_name => 'icinga2',
-          :target_module_path => '/etc/puppetlabs/code/modules')
+      install_dev_puppet_module_on(host, source: module_root, module_name: 'icinga2',
+        target_module_path: '/etc/puppetlabs/code/modules')
 
       # Install dependencies
+      on(host, puppet('module', 'install', 'icinga-icinga'))
       on(host, puppet('module', 'install', 'puppetlabs-stdlib'))
       on(host, puppet('module', 'install', 'puppetlabs-concat'))
 
@@ -23,11 +24,11 @@ RSpec.configure do |c|
       on(host, puppet('module', 'install', 'puppetlabs-mysql'))
       on(host, puppet('module', 'install', 'puppetlabs-postgresql'))
 
-      if fact('osfamily') == 'Debian'
+      if fact('os.family') == 'Debian'
         on(host, puppet('module', 'install', 'puppetlabs-apt'))
       end
 
-      if fact('osfamily') == 'Suse'
+      if fact('os.family') == 'Suse'
         on(host, puppet('module', 'install', 'puppet-zypprepo'))
       end
 
diff --git a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostcert_spec.rb b/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostcert_spec.rb
deleted file mode 100755
index 77897572..00000000
--- a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostcert_spec.rb
+++ /dev/null
@@ -1,40 +0,0 @@
-require 'spec_helper'
-
-describe Facter::Util::Fact do
-  on_supported_os.each do |os, facts|
-    let(:facts) do
-      facts
-    end
-
-    context "#{os} icinga2_puppet_hostcert fact" do
-      it { expect(Facter.fact(:icinga2_puppet_hostcert).value).to match(/\/ssl\/certs\/.*.pem/) }
-    end
-  end
-end
-
-describe('icinga2::feature::gelf', :type => :class) do
-  let(:facts) do
-    {
-      :kernel => 'Windows',
-      :architecture => 'x86_64',
-      :osfamily => 'Windows',
-      :operatingsystem => 'Windows',
-      :operatingsystemmajrelease => '2012 R2',
-      :path => 'C:\Program Files\Puppet Labs\Puppet\puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\facter\bin;
-               C:\Program Files\Puppet Labs\Puppet\hiera\bin;
-               C:\Program Files\Puppet Labs\Puppet\mcollective\bin;
-               C:\Program Files\Puppet Labs\Puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\ruby\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\tools\bin;
-               C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;
-               C:\Windows\System32\WindowsPowerShell\v1.0\;
-               C:\ProgramData\chocolatey\bin;',
-    }
-  end
-
-  context "Windows 2012 R2 icinga2_puppet_hostcert fact" do
-    it { expect(Facter.fact(:icinga2_puppet_hostcert).value).to match(/\/ssl\/certs\/.*.pem/) }
-  end
-
-end
diff --git a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostprivkey_spec.rb b/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostprivkey_spec.rb
deleted file mode 100755
index 32557188..00000000
--- a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_hostprivkey_spec.rb
+++ /dev/null
@@ -1,40 +0,0 @@
-require 'spec_helper'
-
-describe Facter::Util::Fact do
-  on_supported_os.each do |os, facts|
-    let :facts do
-      facts
-    end
-
-    context "#{os} icinga2_puppet_hostprivkey fact" do
-      it { expect(Facter.fact(:icinga2_puppet_hostprivkey).value).to match(/\/ssl\/private_keys\/.*.pem/) }
-    end
-  end
-end
-
-describe('icinga2::feature::gelf', :type => :class) do
-  let(:facts) do
-    {
-      :kernel => 'Windows',
-      :architecture => 'x86_64',
-      :osfamily => 'Windows',
-      :operatingsystem => 'Windows',
-      :operatingsystemmajrelease => '2012 R2',
-      :path => 'C:\Program Files\Puppet Labs\Puppet\puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\facter\bin;
-               C:\Program Files\Puppet Labs\Puppet\hiera\bin;
-               C:\Program Files\Puppet Labs\Puppet\mcollective\bin;
-               C:\Program Files\Puppet Labs\Puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\ruby\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\tools\bin;
-               C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;
-               C:\Windows\System32\WindowsPowerShell\v1.0\;
-               C:\ProgramData\chocolatey\bin;',
-    }
-  end
-
-  context "Windows 2012 R2 icinga2_puppet_hostprivkey fact" do
-    it { expect(Facter.fact(:icinga2_puppet_hostprivkey).value).to match(/\/ssl\/private_keys\/.*.pem/) }
-  end
-
-end
diff --git a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_localcacert_spec.rb b/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_localcacert_spec.rb
deleted file mode 100755
index c5a90049..00000000
--- a/modules/icinga2/spec/unit/facter/util/fact_icinga2_puppet_localcacert_spec.rb
+++ /dev/null
@@ -1,40 +0,0 @@
-require 'spec_helper'
-
-describe Facter::Util::Fact do
-  on_supported_os.each do |os, facts|
-    let :facts do
-      facts
-    end
-
-    context "#{os} icinga2_puppet_localcacert fact" do
-      it { expect(Facter.fact(:icinga2_puppet_localcacert).value).to match(/\/ssl\/certs\/.*.pem/) }
-    end
-  end
-end
-
-describe('icinga2::feature::gelf', :type => :class) do
-  let(:facts) do
-    {
-      :kernel => 'Windows',
-      :architecture => 'x86_64',
-      :osfamily => 'Windows',
-      :operatingsystem => 'Windows',
-      :operatingsystemmajrelease => '2012 R2',
-      :path => 'C:\Program Files\Puppet Labs\Puppet\puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\facter\bin;
-               C:\Program Files\Puppet Labs\Puppet\hiera\bin;
-               C:\Program Files\Puppet Labs\Puppet\mcollective\bin;
-               C:\Program Files\Puppet Labs\Puppet\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\ruby\bin;
-               C:\Program Files\Puppet Labs\Puppet\sys\tools\bin;
-               C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;
-               C:\Windows\System32\WindowsPowerShell\v1.0\;
-               C:\ProgramData\chocolatey\bin;',
-    }
-  end
-
-  context "Windows 2012 R2 icinga2_puppet_localcacert fact" do
-    it { expect(Facter.fact(:icinga2_puppet_localcacert).value).to match(/\/ssl\/certs\/.*.pem/) }
-  end
-
-end
diff --git a/modules/icinga2/templates/apt/01icinga.erb b/modules/icinga2/templates/apt/01icinga.erb
deleted file mode 100644
index 7b65afcc..00000000
--- a/modules/icinga2/templates/apt/01icinga.erb
+++ /dev/null
@@ -1 +0,0 @@
-Acquire::http::Proxy::packages.icinga.com "<%= @http_proxy %>";
diff --git a/modules/icinga2/templates/icinga2.conf.erb b/modules/icinga2/templates/icinga2.conf.erb
old mode 100755
new mode 100644
diff --git a/modules/icinga2/templates/object.conf.erb b/modules/icinga2/templates/object.conf.erb
old mode 100755
new mode 100644
index 8b143587..4dd454d1
--- a/modules/icinga2/templates/object.conf.erb
+++ b/modules/icinga2/templates/object.conf.erb
@@ -24,10 +24,10 @@
 <% end -%>
 <% unless @import.empty? %><%= "\n" %><% end -%>
 <% if @apply.is_a?(String) and @apply =~ /^([A-Za-z_]+)\s+in\s+.+$/ -%>
-<%= scope.function_icinga2_attributes([@_attrs,2,@attrs_list,{$1=>{}}]) -%>
+<%= scope.call_function('icinga2::parse', [@_attrs,2,@attrs_list,{$1=>{}}]) -%>
 <% elsif @apply.is_a?(String) and @apply =~ /^([A-Za-z_]+)\s+=>\s+([A-Za-z_]+)\s+in\s+.+$/ -%>
-<%= scope.function_icinga2_attributes([@_attrs,2,@attrs_list.concat([$1]),{$2=>{}}]) -%>
+<%= scope.call_function('icinga2::parse', [@_attrs,2,@attrs_list.concat([$1]),{$2=>{}}]) -%>
 <% else -%>
-<%= scope.function_icinga2_attributes([@_attrs,2,@attrs_list]) -%>
+<%= scope.call_function('icinga2::parse', [@_attrs,2,@attrs_list]) -%>
 <% end -%>
 }
diff --git a/modules/icinga2/types/interval.pp b/modules/icinga2/types/interval.pp
old mode 100755
new mode 100644
index 6b22bf63..ab480984
--- a/modules/icinga2/types/interval.pp
+++ b/modules/icinga2/types/interval.pp
@@ -1 +1,2 @@
-type Icinga2::Interval = Pattern[/^\d+\.?\d*[d|h|m|s]?$/]
+# A strict type for intervals
+type Icinga2::Interval = Variant[Integer, Pattern[/^\d+\.?\d*[d|h|m|s]?$/]]
diff --git a/modules/icinga2/types/logfacility.pp b/modules/icinga2/types/logfacility.pp
old mode 100755
new mode 100644
index ca64193e..e238f9e6
--- a/modules/icinga2/types/logfacility.pp
+++ b/modules/icinga2/types/logfacility.pp
@@ -1 +1,16 @@
-type Icinga2::LogFacility = Variant[Enum['LOG_AUTH', 'LOG_AUTHPRIV', 'LOG_CRON', 'LOG_DAEMON', 'LOG_FTP', 'LOG_KERN', 'LOG_LPR', 'LOG_MAIL', 'LOG_NEWS', 'LOG_SYSLOG', 'LOG_USER', 'LOG_UUCP'], Pattern[/^LOG_LOCAL[0-7]$/]]
+# A strict type of syslog facilities
+type Icinga2::LogFacility = Variant[
+  Enum[
+    'LOG_AUTH',
+    'LOG_AUTHPRIV',
+    'LOG_CRON',
+    'LOG_DAEMON',
+    'LOG_FTP',
+    'LOG_KERN',
+    'LOG_LPR',
+    'LOG_MAIL',
+    'LOG_NEWS',
+    'LOG_SYSLOG',
+    'LOG_USER',
+    'LOG_UUCP'
+  ], Pattern[/^LOG_LOCAL[0-7]$/]]
diff --git a/modules/icinga2/types/logseverity.pp b/modules/icinga2/types/logseverity.pp
old mode 100755
new mode 100644
index 3563c02b..1a4d959d
--- a/modules/icinga2/types/logseverity.pp
+++ b/modules/icinga2/types/logseverity.pp
@@ -1 +1,2 @@
+# A strict type for log levels
 type Icinga2::LogSeverity = Enum['debug', 'information', 'notice', 'warning', 'critical']
